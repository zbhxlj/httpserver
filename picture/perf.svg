<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1398" onload="init(evt)" viewBox="0 0 1200 1398" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1398.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1381" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1381" > </text>
<g id="frames">
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (84 samples, 0.02%)</title><rect x="513.2" y="949" width="0.2" height="15.0" fill="rgb(246,85,47)" rx="2" ry="2" />
<text  x="516.18" y="959.5" ></text>
</g>
<g >
<title>std::mutex::unlock (1,602 samples, 0.35%)</title><rect x="343.3" y="757" width="4.2" height="15.0" fill="rgb(246,32,7)" rx="2" ry="2" />
<text  x="346.35" y="767.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (121 samples, 0.03%)</title><rect x="1026.7" y="965" width="0.3" height="15.0" fill="rgb(210,56,43)" rx="2" ry="2" />
<text  x="1029.71" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (157 samples, 0.03%)</title><rect x="647.7" y="869" width="0.4" height="15.0" fill="rgb(254,99,21)" rx="2" ry="2" />
<text  x="650.74" y="879.5" ></text>
</g>
<g >
<title>memcpy_erms (49 samples, 0.01%)</title><rect x="942.3" y="645" width="0.1" height="15.0" fill="rgb(250,162,42)" rx="2" ry="2" />
<text  x="945.29" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::formatter*, false&gt;::_M_head (52 samples, 0.01%)</title><rect x="20.6" y="1301" width="0.1" height="15.0" fill="rgb(211,66,12)" rx="2" ry="2" />
<text  x="23.59" y="1311.5" ></text>
</g>
<g >
<title>select_task_rq_fair (797 samples, 0.18%)</title><rect x="1122.3" y="869" width="2.1" height="15.0" fill="rgb(250,183,24)" rx="2" ry="2" />
<text  x="1125.28" y="879.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (109 samples, 0.02%)</title><rect x="727.1" y="725" width="0.3" height="15.0" fill="rgb(227,223,37)" rx="2" ry="2" />
<text  x="730.12" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (93 samples, 0.02%)</title><rect x="303.4" y="693" width="0.2" height="15.0" fill="rgb(206,137,19)" rx="2" ry="2" />
<text  x="306.40" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (489 samples, 0.11%)</title><rect x="991.1" y="997" width="1.2" height="15.0" fill="rgb(247,58,51)" rx="2" ry="2" />
<text  x="994.08" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::size (51 samples, 0.01%)</title><rect x="46.7" y="1301" width="0.1" height="15.0" fill="rgb(214,13,21)" rx="2" ry="2" />
<text  x="49.68" y="1311.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::get_fd (63 samples, 0.01%)</title><rect x="1006.9" y="933" width="0.1" height="15.0" fill="rgb(230,15,8)" rx="2" ry="2" />
<text  x="1009.85" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (136 samples, 0.03%)</title><rect x="303.8" y="693" width="0.3" height="15.0" fill="rgb(214,40,7)" rx="2" ry="2" />
<text  x="306.75" y="703.5" ></text>
</g>
<g >
<title>available_idle_cpu (169 samples, 0.04%)</title><rect x="551.5" y="501" width="0.4" height="15.0" fill="rgb(241,164,38)" rx="2" ry="2" />
<text  x="554.49" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (43 samples, 0.01%)</title><rect x="643.8" y="773" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="646.82" y="783.5" ></text>
</g>
<g >
<title>fsnotify (119 samples, 0.03%)</title><rect x="181.1" y="613" width="0.3" height="15.0" fill="rgb(233,134,37)" rx="2" ry="2" />
<text  x="184.13" y="623.5" ></text>
</g>
<g >
<title>unlink_file_vma (242 samples, 0.05%)</title><rect x="828.4" y="933" width="0.7" height="15.0" fill="rgb(253,34,15)" rx="2" ry="2" />
<text  x="831.45" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (85 samples, 0.02%)</title><rect x="344.6" y="581" width="0.2" height="15.0" fill="rgb(207,12,4)" rx="2" ry="2" />
<text  x="347.59" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,720 samples, 1.70%)</title><rect x="1116.9" y="1045" width="20.0" height="15.0" fill="rgb(215,60,17)" rx="2" ry="2" />
<text  x="1119.87" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;webserver::Channel, void&gt; (97 samples, 0.02%)</title><rect x="743.4" y="1013" width="0.3" height="15.0" fill="rgb(245,169,19)" rx="2" ry="2" />
<text  x="746.41" y="1023.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (12,215 samples, 2.69%)</title><rect x="185.4" y="533" width="31.8" height="15.0" fill="rgb(249,68,52)" rx="2" ry="2" />
<text  x="188.44" y="543.5" >__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (403 samples, 0.09%)</title><rect x="772.1" y="1029" width="1.1" height="15.0" fill="rgb(230,151,40)" rx="2" ry="2" />
<text  x="775.13" y="1039.5" ></text>
</g>
<g >
<title>do_dentry_open (1,567 samples, 0.35%)</title><rect x="881.4" y="949" width="4.0" height="15.0" fill="rgb(247,73,36)" rx="2" ry="2" />
<text  x="884.37" y="959.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (289 samples, 0.06%)</title><rect x="606.1" y="869" width="0.7" height="15.0" fill="rgb(213,10,17)" rx="2" ry="2" />
<text  x="609.08" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (649 samples, 0.14%)</title><rect x="778.0" y="917" width="1.7" height="15.0" fill="rgb(235,199,47)" rx="2" ry="2" />
<text  x="781.04" y="927.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (64 samples, 0.01%)</title><rect x="733.4" y="821" width="0.1" height="15.0" fill="rgb(217,131,36)" rx="2" ry="2" />
<text  x="736.36" y="831.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (283 samples, 0.06%)</title><rect x="1086.3" y="437" width="0.7" height="15.0" fill="rgb(253,189,8)" rx="2" ry="2" />
<text  x="1089.27" y="447.5" ></text>
</g>
<g >
<title>new_do_write (10,084 samples, 2.22%)</title><rect x="704.2" y="885" width="26.2" height="15.0" fill="rgb(212,133,54)" rx="2" ry="2" />
<text  x="707.20" y="895.5" >n..</text>
</g>
<g >
<title>webserver::TcpSocket::get_fd (82 samples, 0.02%)</title><rect x="583.4" y="837" width="0.2" height="15.0" fill="rgb(219,98,49)" rx="2" ry="2" />
<text  x="586.40" y="847.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (83 samples, 0.02%)</title><rect x="438.4" y="469" width="0.2" height="15.0" fill="rgb(236,49,10)" rx="2" ry="2" />
<text  x="441.43" y="479.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (97 samples, 0.02%)</title><rect x="57.3" y="1301" width="0.3" height="15.0" fill="rgb(223,166,17)" rx="2" ry="2" />
<text  x="60.31" y="1311.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,607 samples, 0.57%)</title><rect x="1093.8" y="501" width="6.8" height="15.0" fill="rgb(234,66,33)" rx="2" ry="2" />
<text  x="1096.84" y="511.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (384 samples, 0.08%)</title><rect x="532.6" y="773" width="1.0" height="15.0" fill="rgb(210,205,0)" rx="2" ry="2" />
<text  x="535.63" y="783.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (171 samples, 0.04%)</title><rect x="155.5" y="1301" width="0.4" height="15.0" fill="rgb(239,188,47)" rx="2" ry="2" />
<text  x="158.45" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (50 samples, 0.01%)</title><rect x="621.4" y="869" width="0.1" height="15.0" fill="rgb(206,159,29)" rx="2" ry="2" />
<text  x="624.42" y="879.5" ></text>
</g>
<g >
<title>_int_free (77 samples, 0.02%)</title><rect x="169.8" y="773" width="0.2" height="15.0" fill="rgb(251,137,38)" rx="2" ry="2" />
<text  x="172.81" y="783.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (45 samples, 0.01%)</title><rect x="1068.8" y="821" width="0.2" height="15.0" fill="rgb(208,108,35)" rx="2" ry="2" />
<text  x="1071.84" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (274 samples, 0.06%)</title><rect x="765.8" y="1045" width="0.7" height="15.0" fill="rgb(248,121,25)" rx="2" ry="2" />
<text  x="768.76" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (203 samples, 0.04%)</title><rect x="109.4" y="1301" width="0.5" height="15.0" fill="rgb(213,14,11)" rx="2" ry="2" />
<text  x="112.39" y="1311.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (192 samples, 0.04%)</title><rect x="622.6" y="1029" width="0.5" height="15.0" fill="rgb(251,120,41)" rx="2" ry="2" />
<text  x="625.58" y="1039.5" ></text>
</g>
<g >
<title>set_next_buddy (54 samples, 0.01%)</title><rect x="484.7" y="949" width="0.2" height="15.0" fill="rgb(251,199,15)" rx="2" ry="2" />
<text  x="487.73" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (44 samples, 0.01%)</title><rect x="361.2" y="805" width="0.1" height="15.0" fill="rgb(244,224,19)" rx="2" ry="2" />
<text  x="364.22" y="815.5" ></text>
</g>
<g >
<title>_IO_new_file_write (7,715 samples, 1.70%)</title><rect x="650.8" y="869" width="20.0" height="15.0" fill="rgb(245,229,54)" rx="2" ry="2" />
<text  x="653.77" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,476 samples, 0.33%)</title><rect x="597.8" y="757" width="3.8" height="15.0" fill="rgb(250,12,27)" rx="2" ry="2" />
<text  x="600.78" y="767.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::close (19,364 samples, 4.26%)</title><rect x="171.6" y="741" width="50.3" height="15.0" fill="rgb(253,35,16)" rx="2" ry="2" />
<text  x="174.56" y="751.5" >webse..</text>
</g>
<g >
<title>truncate_inode_pages_range (66 samples, 0.01%)</title><rect x="178.6" y="581" width="0.2" height="15.0" fill="rgb(215,154,52)" rx="2" ry="2" />
<text  x="181.59" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (204 samples, 0.04%)</title><rect x="164.1" y="1093" width="0.6" height="15.0" fill="rgb(219,31,40)" rx="2" ry="2" />
<text  x="167.13" y="1103.5" ></text>
</g>
<g >
<title>vfs_statx (5,274 samples, 1.16%)</title><rect x="853.8" y="997" width="13.7" height="15.0" fill="rgb(244,2,7)" rx="2" ry="2" />
<text  x="856.77" y="1007.5" ></text>
</g>
<g >
<title>alloc_inode (1,780 samples, 0.39%)</title><rect x="1156.5" y="949" width="4.7" height="15.0" fill="rgb(222,186,32)" rx="2" ry="2" />
<text  x="1159.53" y="959.5" ></text>
</g>
<g >
<title>__libc_close (1,553 samples, 0.34%)</title><rect x="869.9" y="1061" width="4.0" height="15.0" fill="rgb(221,41,26)" rx="2" ry="2" />
<text  x="872.91" y="1071.5" ></text>
</g>
<g >
<title>webserver::InetAddr::to_ip_port_string[abi:cxx11] (39 samples, 0.01%)</title><rect x="143.3" y="1301" width="0.1" height="15.0" fill="rgb(218,2,6)" rx="2" ry="2" />
<text  x="146.31" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (429 samples, 0.09%)</title><rect x="925.5" y="773" width="1.1" height="15.0" fill="rgb(220,0,54)" rx="2" ry="2" />
<text  x="928.52" y="783.5" ></text>
</g>
<g >
<title>select_task_rq_fair (231 samples, 0.05%)</title><rect x="344.8" y="597" width="0.6" height="15.0" fill="rgb(217,137,43)" rx="2" ry="2" />
<text  x="347.81" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,705 samples, 0.60%)</title><rect x="672.3" y="869" width="7.0" height="15.0" fill="rgb(209,23,48)" rx="2" ry="2" />
<text  x="675.30" y="879.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (61 samples, 0.01%)</title><rect x="916.1" y="933" width="0.2" height="15.0" fill="rgb(252,29,25)" rx="2" ry="2" />
<text  x="919.13" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (49 samples, 0.01%)</title><rect x="968.5" y="901" width="0.1" height="15.0" fill="rgb(240,145,45)" rx="2" ry="2" />
<text  x="971.46" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (1,558 samples, 0.34%)</title><rect x="187.5" y="437" width="4.1" height="15.0" fill="rgb(221,70,37)" rx="2" ry="2" />
<text  x="190.53" y="447.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (52 samples, 0.01%)</title><rect x="651.1" y="837" width="0.1" height="15.0" fill="rgb(250,113,34)" rx="2" ry="2" />
<text  x="654.06" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (318 samples, 0.07%)</title><rect x="517.4" y="757" width="0.8" height="15.0" fill="rgb(253,21,5)" rx="2" ry="2" />
<text  x="520.40" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (273 samples, 0.06%)</title><rect x="895.3" y="949" width="0.7" height="15.0" fill="rgb(212,72,39)" rx="2" ry="2" />
<text  x="898.30" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (338 samples, 0.07%)</title><rect x="485.3" y="965" width="0.9" height="15.0" fill="rgb(222,170,25)" rx="2" ry="2" />
<text  x="488.29" y="975.5" ></text>
</g>
<g >
<title>webserver::EventLoop::remove_channel (31,382 samples, 6.91%)</title><rect x="281.3" y="933" width="81.5" height="15.0" fill="rgb(214,70,3)" rx="2" ry="2" />
<text  x="284.28" y="943.5" >webserver..</text>
</g>
<g >
<title>memcpy_erms (105 samples, 0.02%)</title><rect x="803.4" y="917" width="0.3" height="15.0" fill="rgb(223,208,20)" rx="2" ry="2" />
<text  x="806.42" y="927.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (486 samples, 0.11%)</title><rect x="904.8" y="917" width="1.3" height="15.0" fill="rgb(234,85,42)" rx="2" ry="2" />
<text  x="907.80" y="927.5" ></text>
</g>
<g >
<title>__ip_finish_output (149 samples, 0.03%)</title><rect x="387.6" y="725" width="0.4" height="15.0" fill="rgb(244,106,23)" rx="2" ry="2" />
<text  x="390.60" y="735.5" ></text>
</g>
<g >
<title>[[iptable_filter]] (43 samples, 0.01%)</title><rect x="440.7" y="549" width="0.1" height="15.0" fill="rgb(210,3,54)" rx="2" ry="2" />
<text  x="443.66" y="559.5" ></text>
</g>
<g >
<title>generic_permission (163 samples, 0.04%)</title><rect x="886.2" y="917" width="0.5" height="15.0" fill="rgb(232,44,40)" rx="2" ry="2" />
<text  x="889.23" y="927.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (87 samples, 0.02%)</title><rect x="647.9" y="741" width="0.2" height="15.0" fill="rgb(248,207,14)" rx="2" ry="2" />
<text  x="650.88" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (586 samples, 0.13%)</title><rect x="231.5" y="869" width="1.5" height="15.0" fill="rgb(215,105,7)" rx="2" ry="2" />
<text  x="234.47" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (48 samples, 0.01%)</title><rect x="531.5" y="757" width="0.1" height="15.0" fill="rgb(226,15,17)" rx="2" ry="2" />
<text  x="534.46" y="767.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (72 samples, 0.02%)</title><rect x="373.2" y="757" width="0.1" height="15.0" fill="rgb(217,79,24)" rx="2" ry="2" />
<text  x="376.15" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (367 samples, 0.08%)</title><rect x="719.6" y="645" width="1.0" height="15.0" fill="rgb(220,30,19)" rx="2" ry="2" />
<text  x="722.64" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sputn (1,471 samples, 0.32%)</title><rect x="993.1" y="997" width="3.8" height="15.0" fill="rgb(252,12,44)" rx="2" ry="2" />
<text  x="996.12" y="1007.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (73 samples, 0.02%)</title><rect x="183.9" y="181" width="0.2" height="15.0" fill="rgb(254,126,34)" rx="2" ry="2" />
<text  x="186.93" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (99 samples, 0.02%)</title><rect x="893.9" y="949" width="0.3" height="15.0" fill="rgb(245,104,27)" rx="2" ry="2" />
<text  x="896.94" y="959.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (173 samples, 0.04%)</title><rect x="520.1" y="805" width="0.4" height="15.0" fill="rgb(210,178,0)" rx="2" ry="2" />
<text  x="523.05" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt; (58 samples, 0.01%)</title><rect x="741.3" y="1029" width="0.2" height="15.0" fill="rgb(229,67,32)" rx="2" ry="2" />
<text  x="744.31" y="1039.5" ></text>
</g>
<g >
<title>sched_clock_cpu (89 samples, 0.02%)</title><rect x="393.7" y="645" width="0.2" height="15.0" fill="rgb(223,149,37)" rx="2" ry="2" />
<text  x="396.69" y="655.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (122 samples, 0.03%)</title><rect x="156.3" y="1301" width="0.4" height="15.0" fill="rgb(208,62,32)" rx="2" ry="2" />
<text  x="159.34" y="1311.5" ></text>
</g>
<g >
<title>_find_next_bit (45 samples, 0.01%)</title><rect x="1054.6" y="645" width="0.1" height="15.0" fill="rgb(239,56,13)" rx="2" ry="2" />
<text  x="1057.62" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (70 samples, 0.02%)</title><rect x="322.2" y="485" width="0.2" height="15.0" fill="rgb(209,139,21)" rx="2" ry="2" />
<text  x="325.19" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (437 samples, 0.10%)</title><rect x="1000.1" y="853" width="1.1" height="15.0" fill="rgb(246,185,38)" rx="2" ry="2" />
<text  x="1003.05" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (130 samples, 0.03%)</title><rect x="137.5" y="1301" width="0.3" height="15.0" fill="rgb(252,157,48)" rx="2" ry="2" />
<text  x="140.46" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_work (128 samples, 0.03%)</title><rect x="1136.5" y="997" width="0.3" height="15.0" fill="rgb(235,112,17)" rx="2" ry="2" />
<text  x="1139.45" y="1007.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,194 samples, 0.26%)</title><rect x="526.3" y="789" width="3.1" height="15.0" fill="rgb(248,67,0)" rx="2" ry="2" />
<text  x="529.29" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (779 samples, 0.17%)</title><rect x="777.8" y="949" width="2.0" height="15.0" fill="rgb(224,49,47)" rx="2" ry="2" />
<text  x="780.78" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (228 samples, 0.05%)</title><rect x="520.0" y="837" width="0.6" height="15.0" fill="rgb(254,139,38)" rx="2" ry="2" />
<text  x="522.97" y="847.5" ></text>
</g>
<g >
<title>fd_install (57 samples, 0.01%)</title><rect x="1148.0" y="981" width="0.1" height="15.0" fill="rgb(209,6,27)" rx="2" ry="2" />
<text  x="1150.95" y="991.5" ></text>
</g>
<g >
<title>enqueue_task (951 samples, 0.21%)</title><rect x="663.0" y="645" width="2.5" height="15.0" fill="rgb(205,124,49)" rx="2" ry="2" />
<text  x="665.99" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (79 samples, 0.02%)</title><rect x="506.0" y="981" width="0.2" height="15.0" fill="rgb(213,169,17)" rx="2" ry="2" />
<text  x="508.95" y="991.5" ></text>
</g>
<g >
<title>spdlog::details::backtracer::enabled (53 samples, 0.01%)</title><rect x="757.8" y="981" width="0.1" height="15.0" fill="rgb(208,60,9)" rx="2" ry="2" />
<text  x="760.81" y="991.5" ></text>
</g>
<g >
<title>vm_unmapped_area (782 samples, 0.17%)</title><rect x="798.2" y="933" width="2.1" height="15.0" fill="rgb(209,34,41)" rx="2" ry="2" />
<text  x="801.25" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (140 samples, 0.03%)</title><rect x="638.1" y="933" width="0.3" height="15.0" fill="rgb(241,20,29)" rx="2" ry="2" />
<text  x="641.06" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (69 samples, 0.02%)</title><rect x="1002.2" y="933" width="0.2" height="15.0" fill="rgb(253,178,32)" rx="2" ry="2" />
<text  x="1005.20" y="943.5" ></text>
</g>
<g >
<title>sk_reset_timer (144 samples, 0.03%)</title><rect x="1095.1" y="421" width="0.3" height="15.0" fill="rgb(223,57,17)" rx="2" ry="2" />
<text  x="1098.06" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (184 samples, 0.04%)</title><rect x="917.1" y="821" width="0.5" height="15.0" fill="rgb(221,112,3)" rx="2" ry="2" />
<text  x="920.10" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (52 samples, 0.01%)</title><rect x="1035.4" y="821" width="0.2" height="15.0" fill="rgb(226,47,44)" rx="2" ry="2" />
<text  x="1038.44" y="831.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::details::flag_formatter*, false&gt;::_M_head (43 samples, 0.01%)</title><rect x="312.9" y="661" width="0.1" height="15.0" fill="rgb(232,83,44)" rx="2" ry="2" />
<text  x="315.87" y="671.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (57 samples, 0.01%)</title><rect x="963.5" y="837" width="0.2" height="15.0" fill="rgb(245,88,29)" rx="2" ry="2" />
<text  x="966.54" y="847.5" ></text>
</g>
<g >
<title>ttwu_do_activate (756 samples, 0.17%)</title><rect x="722.5" y="661" width="2.0" height="15.0" fill="rgb(249,188,27)" rx="2" ry="2" />
<text  x="725.51" y="671.5" ></text>
</g>
<g >
<title>security_mmap_file (215 samples, 0.05%)</title><rect x="818.7" y="981" width="0.6" height="15.0" fill="rgb(250,73,17)" rx="2" ry="2" />
<text  x="821.71" y="991.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (232 samples, 0.05%)</title><rect x="976.8" y="965" width="0.6" height="15.0" fill="rgb(213,55,53)" rx="2" ry="2" />
<text  x="979.82" y="975.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (44 samples, 0.01%)</title><rect x="722.4" y="645" width="0.1" height="15.0" fill="rgb(218,224,0)" rx="2" ry="2" />
<text  x="725.39" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (4,327 samples, 0.95%)</title><rect x="896.1" y="997" width="11.2" height="15.0" fill="rgb(215,189,30)" rx="2" ry="2" />
<text  x="899.08" y="1007.5" ></text>
</g>
<g >
<title>check_preempt_curr (67 samples, 0.01%)</title><rect x="738.2" y="757" width="0.2" height="15.0" fill="rgb(229,126,8)" rx="2" ry="2" />
<text  x="741.24" y="767.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (5,615 samples, 1.24%)</title><rect x="590.1" y="853" width="14.6" height="15.0" fill="rgb(246,80,35)" rx="2" ry="2" />
<text  x="593.13" y="863.5" ></text>
</g>
<g >
<title>webserver::InetAddr::to_ip_port_string[abi:cxx11] (3,984 samples, 0.88%)</title><rect x="611.6" y="917" width="10.4" height="15.0" fill="rgb(247,49,29)" rx="2" ry="2" />
<text  x="614.61" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (218 samples, 0.05%)</title><rect x="689.7" y="837" width="0.5" height="15.0" fill="rgb(236,100,53)" rx="2" ry="2" />
<text  x="692.68" y="847.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (254 samples, 0.06%)</title><rect x="167.9" y="917" width="0.6" height="15.0" fill="rgb(218,123,25)" rx="2" ry="2" />
<text  x="170.87" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (157 samples, 0.03%)</title><rect x="694.0" y="933" width="0.4" height="15.0" fill="rgb(215,78,31)" rx="2" ry="2" />
<text  x="696.98" y="943.5" ></text>
</g>
<g >
<title>xas_load (116 samples, 0.03%)</title><rect x="903.9" y="821" width="0.3" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="906.91" y="831.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (46 samples, 0.01%)</title><rect x="911.5" y="1061" width="0.1" height="15.0" fill="rgb(229,196,9)" rx="2" ry="2" />
<text  x="914.52" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (41 samples, 0.01%)</title><rect x="589.6" y="693" width="0.1" height="15.0" fill="rgb(210,61,34)" rx="2" ry="2" />
<text  x="592.63" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,647 samples, 0.80%)</title><rect x="1120.9" y="885" width="9.5" height="15.0" fill="rgb(252,87,0)" rx="2" ry="2" />
<text  x="1123.91" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (60 samples, 0.01%)</title><rect x="686.2" y="949" width="0.1" height="15.0" fill="rgb(211,168,27)" rx="2" ry="2" />
<text  x="689.17" y="959.5" ></text>
</g>
<g >
<title>std::mutex::unlock (53 samples, 0.01%)</title><rect x="12.1" y="1269" width="0.2" height="15.0" fill="rgb(237,155,17)" rx="2" ry="2" />
<text  x="15.12" y="1279.5" ></text>
</g>
<g >
<title>std::mutex::lock (330 samples, 0.07%)</title><rect x="1111.1" y="1045" width="0.9" height="15.0" fill="rgb(249,49,37)" rx="2" ry="2" />
<text  x="1114.14" y="1055.5" ></text>
</g>
<g >
<title>enqueue_task (847 samples, 0.19%)</title><rect x="1055.2" y="661" width="2.2" height="15.0" fill="rgb(223,114,18)" rx="2" ry="2" />
<text  x="1058.18" y="671.5" ></text>
</g>
<g >
<title>__inet_lookup_established (220 samples, 0.05%)</title><rect x="197.7" y="245" width="0.6" height="15.0" fill="rgb(214,45,16)" rx="2" ry="2" />
<text  x="200.72" y="255.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (626 samples, 0.14%)</title><rect x="1035.2" y="917" width="1.7" height="15.0" fill="rgb(209,179,1)" rx="2" ry="2" />
<text  x="1038.25" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (238 samples, 0.05%)</title><rect x="310.5" y="693" width="0.6" height="15.0" fill="rgb(211,138,35)" rx="2" ry="2" />
<text  x="313.50" y="703.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (60 samples, 0.01%)</title><rect x="1096.1" y="389" width="0.2" height="15.0" fill="rgb(226,124,1)" rx="2" ry="2" />
<text  x="1099.12" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1,003 samples, 0.22%)</title><rect x="979.3" y="981" width="2.6" height="15.0" fill="rgb(238,163,5)" rx="2" ry="2" />
<text  x="982.33" y="991.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (42 samples, 0.01%)</title><rect x="213.0" y="421" width="0.1" height="15.0" fill="rgb(229,49,43)" rx="2" ry="2" />
<text  x="215.95" y="431.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (294 samples, 0.06%)</title><rect x="623.2" y="1093" width="0.8" height="15.0" fill="rgb(237,200,42)" rx="2" ry="2" />
<text  x="626.23" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (146 samples, 0.03%)</title><rect x="970.1" y="1013" width="0.3" height="15.0" fill="rgb(248,70,38)" rx="2" ry="2" />
<text  x="973.05" y="1023.5" ></text>
</g>
<g >
<title>__release_sock (819 samples, 0.18%)</title><rect x="1085.5" y="741" width="2.1" height="15.0" fill="rgb(235,199,10)" rx="2" ry="2" />
<text  x="1088.46" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (156 samples, 0.03%)</title><rect x="349.6" y="821" width="0.4" height="15.0" fill="rgb(237,174,12)" rx="2" ry="2" />
<text  x="352.62" y="831.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (153 samples, 0.03%)</title><rect x="1162.4" y="885" width="0.4" height="15.0" fill="rgb(219,113,12)" rx="2" ry="2" />
<text  x="1165.40" y="895.5" ></text>
</g>
<g >
<title>__fget_files (56 samples, 0.01%)</title><rect x="278.6" y="757" width="0.1" height="15.0" fill="rgb(232,219,6)" rx="2" ry="2" />
<text  x="281.60" y="767.5" ></text>
</g>
<g >
<title>set_next_entity (60 samples, 0.01%)</title><rect x="566.7" y="581" width="0.1" height="15.0" fill="rgb(216,109,43)" rx="2" ry="2" />
<text  x="569.68" y="591.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (116 samples, 0.03%)</title><rect x="131.3" y="1301" width="0.3" height="15.0" fill="rgb(212,189,2)" rx="2" ry="2" />
<text  x="134.26" y="1311.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (45 samples, 0.01%)</title><rect x="216.8" y="485" width="0.1" height="15.0" fill="rgb(230,73,5)" rx="2" ry="2" />
<text  x="219.75" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl_data::_M_copy_data (180 samples, 0.04%)</title><rect x="223.0" y="1061" width="0.5" height="15.0" fill="rgb(205,159,44)" rx="2" ry="2" />
<text  x="226.01" y="1071.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (94 samples, 0.02%)</title><rect x="922.9" y="885" width="0.3" height="15.0" fill="rgb(218,71,46)" rx="2" ry="2" />
<text  x="925.92" y="895.5" ></text>
</g>
<g >
<title>__shutdown (85 samples, 0.02%)</title><rect x="105.7" y="1285" width="0.2" height="15.0" fill="rgb(249,199,27)" rx="2" ry="2" />
<text  x="108.66" y="1295.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (85 samples, 0.02%)</title><rect x="344.6" y="597" width="0.2" height="15.0" fill="rgb(253,146,17)" rx="2" ry="2" />
<text  x="347.59" y="607.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (112 samples, 0.02%)</title><rect x="631.3" y="1045" width="0.2" height="15.0" fill="rgb(245,44,43)" rx="2" ry="2" />
<text  x="634.26" y="1055.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (41 samples, 0.01%)</title><rect x="447.3" y="757" width="0.1" height="15.0" fill="rgb(232,135,0)" rx="2" ry="2" />
<text  x="450.29" y="767.5" ></text>
</g>
<g >
<title>unmap_page_range (1,399 samples, 0.31%)</title><rect x="840.9" y="933" width="3.6" height="15.0" fill="rgb(214,99,32)" rx="2" ry="2" />
<text  x="843.88" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (129 samples, 0.03%)</title><rect x="259.0" y="901" width="0.4" height="15.0" fill="rgb(254,196,45)" rx="2" ry="2" />
<text  x="262.04" y="911.5" ></text>
</g>
<g >
<title>_find_next_bit (55 samples, 0.01%)</title><rect x="427.5" y="373" width="0.1" height="15.0" fill="rgb(250,113,0)" rx="2" ry="2" />
<text  x="430.50" y="383.5" ></text>
</g>
<g >
<title>tcp_push (52 samples, 0.01%)</title><rect x="457.7" y="805" width="0.2" height="15.0" fill="rgb(212,175,37)" rx="2" ry="2" />
<text  x="460.75" y="815.5" ></text>
</g>
<g >
<title>psi_group_change (43 samples, 0.01%)</title><rect x="574.6" y="597" width="0.1" height="15.0" fill="rgb(225,151,12)" rx="2" ry="2" />
<text  x="577.62" y="607.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (140 samples, 0.03%)</title><rect x="297.2" y="741" width="0.3" height="15.0" fill="rgb(247,203,6)" rx="2" ry="2" />
<text  x="300.18" y="751.5" ></text>
</g>
<g >
<title>schedule (3,508 samples, 0.77%)</title><rect x="480.9" y="997" width="9.1" height="15.0" fill="rgb(216,41,28)" rx="2" ry="2" />
<text  x="483.87" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output (45 samples, 0.01%)</title><rect x="388.0" y="725" width="0.2" height="15.0" fill="rgb(219,175,6)" rx="2" ry="2" />
<text  x="391.03" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,108 samples, 0.24%)</title><rect x="552.7" y="517" width="2.9" height="15.0" fill="rgb(237,227,16)" rx="2" ry="2" />
<text  x="555.70" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (55 samples, 0.01%)</title><rect x="785.3" y="917" width="0.1" height="15.0" fill="rgb(220,125,34)" rx="2" ry="2" />
<text  x="788.28" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (68 samples, 0.01%)</title><rect x="240.6" y="805" width="0.1" height="15.0" fill="rgb(210,217,1)" rx="2" ry="2" />
<text  x="243.56" y="815.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (157 samples, 0.03%)</title><rect x="792.4" y="1045" width="0.4" height="15.0" fill="rgb(249,93,12)" rx="2" ry="2" />
<text  x="795.35" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,844 samples, 0.41%)</title><rect x="1069.8" y="885" width="4.8" height="15.0" fill="rgb(235,86,26)" rx="2" ry="2" />
<text  x="1072.76" y="895.5" ></text>
</g>
<g >
<title>lookup_fast.constprop.0 (84 samples, 0.02%)</title><rect x="888.0" y="949" width="0.3" height="15.0" fill="rgb(227,158,36)" rx="2" ry="2" />
<text  x="891.03" y="959.5" ></text>
</g>
<g >
<title>native_flush_tlb_multi (140 samples, 0.03%)</title><rect x="832.4" y="917" width="0.3" height="15.0" fill="rgb(214,202,50)" rx="2" ry="2" />
<text  x="835.35" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::deallocate (78 samples, 0.02%)</title><rect x="42.1" y="1301" width="0.2" height="15.0" fill="rgb(223,187,13)" rx="2" ry="2" />
<text  x="45.06" y="1311.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (21,592 samples, 4.75%)</title><rect x="521.3" y="821" width="56.1" height="15.0" fill="rgb(241,63,25)" rx="2" ry="2" />
<text  x="524.33" y="831.5" >spdlo..</text>
</g>
<g >
<title>kmem_cache_free (274 samples, 0.06%)</title><rect x="372.4" y="741" width="0.8" height="15.0" fill="rgb(229,45,13)" rx="2" ry="2" />
<text  x="375.44" y="751.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (57 samples, 0.01%)</title><rect x="888.1" y="933" width="0.2" height="15.0" fill="rgb(235,96,40)" rx="2" ry="2" />
<text  x="891.10" y="943.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (336 samples, 0.07%)</title><rect x="945.4" y="629" width="0.9" height="15.0" fill="rgb(206,33,23)" rx="2" ry="2" />
<text  x="948.38" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (232 samples, 0.05%)</title><rect x="689.6" y="869" width="0.6" height="15.0" fill="rgb(251,42,43)" rx="2" ry="2" />
<text  x="692.65" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (226 samples, 0.05%)</title><rect x="696.7" y="789" width="0.6" height="15.0" fill="rgb(210,175,33)" rx="2" ry="2" />
<text  x="699.71" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (261 samples, 0.06%)</title><rect x="272.8" y="741" width="0.7" height="15.0" fill="rgb(250,82,8)" rx="2" ry="2" />
<text  x="275.84" y="751.5" ></text>
</g>
<g >
<title>tcp_poll (54 samples, 0.01%)</title><rect x="278.8" y="741" width="0.2" height="15.0" fill="rgb(219,120,38)" rx="2" ry="2" />
<text  x="281.83" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::visit_format_arg&lt;fmt::v8::detail::default_arg_formatter&lt;char&gt;, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt; (570 samples, 0.13%)</title><rect x="916.3" y="949" width="1.5" height="15.0" fill="rgb(213,68,5)" rx="2" ry="2" />
<text  x="919.35" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (279 samples, 0.06%)</title><rect x="916.9" y="885" width="0.7" height="15.0" fill="rgb(249,52,6)" rx="2" ry="2" />
<text  x="919.91" y="895.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (68 samples, 0.01%)</title><rect x="1046.0" y="741" width="0.2" height="15.0" fill="rgb(216,130,8)" rx="2" ry="2" />
<text  x="1049.04" y="751.5" ></text>
</g>
<g >
<title>remove_wait_queue (47 samples, 0.01%)</title><rect x="557.9" y="581" width="0.1" height="15.0" fill="rgb(217,194,41)" rx="2" ry="2" />
<text  x="560.87" y="591.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::load (43 samples, 0.01%)</title><rect x="577.5" y="805" width="0.1" height="15.0" fill="rgb(224,84,0)" rx="2" ry="2" />
<text  x="580.51" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;spdlog::sinks::sink,  (39 samples, 0.01%)</title><rect x="577.6" y="821" width="0.1" height="15.0" fill="rgb(222,145,48)" rx="2" ry="2" />
<text  x="580.63" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (241 samples, 0.05%)</title><rect x="582.0" y="789" width="0.6" height="15.0" fill="rgb(237,121,30)" rx="2" ry="2" />
<text  x="585.01" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (68 samples, 0.01%)</title><rect x="929.8" y="885" width="0.2" height="15.0" fill="rgb(251,148,11)" rx="2" ry="2" />
<text  x="932.82" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (85 samples, 0.02%)</title><rect x="1039.3" y="789" width="0.3" height="15.0" fill="rgb(228,192,53)" rx="2" ry="2" />
<text  x="1042.34" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;webserver::Channel, webserver::Channel&gt; (43 samples, 0.01%)</title><rect x="351.1" y="805" width="0.1" height="15.0" fill="rgb(217,116,20)" rx="2" ry="2" />
<text  x="354.14" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (62 samples, 0.01%)</title><rect x="1025.1" y="901" width="0.2" height="15.0" fill="rgb(208,23,20)" rx="2" ry="2" />
<text  x="1028.15" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_free (551 samples, 0.12%)</title><rect x="1150.7" y="949" width="1.4" height="15.0" fill="rgb(248,207,14)" rx="2" ry="2" />
<text  x="1153.65" y="959.5" ></text>
</g>
<g >
<title>__fget_light (172 samples, 0.04%)</title><rect x="1146.2" y="997" width="0.5" height="15.0" fill="rgb(250,68,12)" rx="2" ry="2" />
<text  x="1149.23" y="1007.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (6,468 samples, 1.42%)</title><rect x="937.4" y="725" width="16.8" height="15.0" fill="rgb(206,193,6)" rx="2" ry="2" />
<text  x="940.39" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (590 samples, 0.13%)</title><rect x="925.2" y="805" width="1.6" height="15.0" fill="rgb(251,128,25)" rx="2" ry="2" />
<text  x="928.22" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr (177 samples, 0.04%)</title><rect x="276.4" y="917" width="0.5" height="15.0" fill="rgb(239,96,31)" rx="2" ry="2" />
<text  x="279.42" y="927.5" ></text>
</g>
<g >
<title>preempt_schedule (41 samples, 0.01%)</title><rect x="321.2" y="517" width="0.1" height="15.0" fill="rgb(209,213,52)" rx="2" ry="2" />
<text  x="324.21" y="527.5" ></text>
</g>
<g >
<title>psi_group_change (169 samples, 0.04%)</title><rect x="664.7" y="629" width="0.4" height="15.0" fill="rgb(225,107,43)" rx="2" ry="2" />
<text  x="667.67" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (53 samples, 0.01%)</title><rect x="579.3" y="885" width="0.1" height="15.0" fill="rgb(250,132,7)" rx="2" ry="2" />
<text  x="582.27" y="895.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (442 samples, 0.10%)</title><rect x="496.0" y="1029" width="1.1" height="15.0" fill="rgb(246,98,30)" rx="2" ry="2" />
<text  x="498.95" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (328 samples, 0.07%)</title><rect x="1086.2" y="501" width="0.9" height="15.0" fill="rgb(247,99,9)" rx="2" ry="2" />
<text  x="1089.23" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (331 samples, 0.07%)</title><rect x="261.8" y="869" width="0.8" height="15.0" fill="rgb(243,81,34)" rx="2" ry="2" />
<text  x="264.78" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (416 samples, 0.09%)</title><rect x="1025.0" y="933" width="1.1" height="15.0" fill="rgb(239,137,5)" rx="2" ry="2" />
<text  x="1028.00" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (177 samples, 0.04%)</title><rect x="272.3" y="741" width="0.5" height="15.0" fill="rgb(226,42,53)" rx="2" ry="2" />
<text  x="275.34" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4,315 samples, 0.95%)</title><rect x="896.1" y="965" width="11.2" height="15.0" fill="rgb(225,140,36)" rx="2" ry="2" />
<text  x="899.10" y="975.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (282 samples, 0.06%)</title><rect x="146.8" y="1301" width="0.8" height="15.0" fill="rgb(229,206,35)" rx="2" ry="2" />
<text  x="149.83" y="1311.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::shared_from_this (53 samples, 0.01%)</title><rect x="276.9" y="901" width="0.2" height="15.0" fill="rgb(226,153,17)" rx="2" ry="2" />
<text  x="279.94" y="911.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (264 samples, 0.06%)</title><rect x="1052.6" y="645" width="0.7" height="15.0" fill="rgb(227,229,25)" rx="2" ry="2" />
<text  x="1055.59" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (801 samples, 0.18%)</title><rect x="1085.5" y="709" width="2.1" height="15.0" fill="rgb(250,8,5)" rx="2" ry="2" />
<text  x="1088.51" y="719.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (227 samples, 0.05%)</title><rect x="701.0" y="885" width="0.6" height="15.0" fill="rgb(254,84,42)" rx="2" ry="2" />
<text  x="704.02" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_Tuple_impl (43 samples, 0.01%)</title><rect x="22.3" y="1301" width="0.1" height="15.0" fill="rgb(210,109,10)" rx="2" ry="2" />
<text  x="25.33" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task_fair (611 samples, 0.13%)</title><rect x="328.8" y="453" width="1.6" height="15.0" fill="rgb(209,171,24)" rx="2" ry="2" />
<text  x="331.85" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (178 samples, 0.04%)</title><rect x="87.5" y="1301" width="0.5" height="15.0" fill="rgb(215,59,3)" rx="2" ry="2" />
<text  x="90.55" y="1311.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (306 samples, 0.07%)</title><rect x="216.1" y="501" width="0.8" height="15.0" fill="rgb(215,139,8)" rx="2" ry="2" />
<text  x="219.07" y="511.5" ></text>
</g>
<g >
<title>tcp_data_queue (7,308 samples, 1.61%)</title><rect x="419.7" y="485" width="18.9" height="15.0" fill="rgb(208,175,4)" rx="2" ry="2" />
<text  x="422.65" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2,844 samples, 0.63%)</title><rect x="202.7" y="165" width="7.4" height="15.0" fill="rgb(224,65,8)" rx="2" ry="2" />
<text  x="205.72" y="175.5" ></text>
</g>
<g >
<title>ip_finish_output (58 samples, 0.01%)</title><rect x="1101.7" y="661" width="0.1" height="15.0" fill="rgb(206,97,24)" rx="2" ry="2" />
<text  x="1104.66" y="671.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (62 samples, 0.01%)</title><rect x="977.8" y="965" width="0.2" height="15.0" fill="rgb(253,200,3)" rx="2" ry="2" />
<text  x="980.84" y="975.5" ></text>
</g>
<g >
<title>mutex_unlock (198 samples, 0.04%)</title><rect x="715.5" y="725" width="0.6" height="15.0" fill="rgb(207,211,42)" rx="2" ry="2" />
<text  x="718.54" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (137 samples, 0.03%)</title><rect x="145.9" y="1301" width="0.3" height="15.0" fill="rgb(213,80,52)" rx="2" ry="2" />
<text  x="148.86" y="1311.5" ></text>
</g>
<g >
<title>fscrypt_file_open (75 samples, 0.02%)</title><rect x="882.4" y="917" width="0.2" height="15.0" fill="rgb(222,15,30)" rx="2" ry="2" />
<text  x="885.36" y="927.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (63 samples, 0.01%)</title><rect x="1031.5" y="869" width="0.2" height="15.0" fill="rgb(252,148,44)" rx="2" ry="2" />
<text  x="1034.49" y="879.5" ></text>
</g>
<g >
<title>[[nfnetlink]] (136 samples, 0.03%)</title><rect x="214.1" y="389" width="0.3" height="15.0" fill="rgb(232,10,23)" rx="2" ry="2" />
<text  x="217.07" y="399.5" ></text>
</g>
<g >
<title>n_tty_write (6,212 samples, 1.37%)</title><rect x="542.3" y="597" width="16.2" height="15.0" fill="rgb(238,103,28)" rx="2" ry="2" />
<text  x="545.33" y="607.5" ></text>
</g>
<g >
<title>spdlog::source_loc::source_loc (41 samples, 0.01%)</title><rect x="758.0" y="1013" width="0.2" height="15.0" fill="rgb(210,174,5)" rx="2" ry="2" />
<text  x="761.05" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (850 samples, 0.19%)</title><rect x="1032.8" y="917" width="2.2" height="15.0" fill="rgb(219,97,19)" rx="2" ry="2" />
<text  x="1035.76" y="927.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (42 samples, 0.01%)</title><rect x="1086.0" y="581" width="0.1" height="15.0" fill="rgb(238,193,7)" rx="2" ry="2" />
<text  x="1088.95" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (326 samples, 0.07%)</title><rect x="895.2" y="997" width="0.8" height="15.0" fill="rgb(209,14,32)" rx="2" ry="2" />
<text  x="898.17" y="1007.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (18,956 samples, 4.17%)</title><rect x="298.9" y="805" width="49.2" height="15.0" fill="rgb(240,178,29)" rx="2" ry="2" />
<text  x="301.88" y="815.5" >spdl..</text>
</g>
<g >
<title>[[nf_conntrack]] (218 samples, 0.05%)</title><rect x="445.8" y="709" width="0.5" height="15.0" fill="rgb(230,225,50)" rx="2" ry="2" />
<text  x="448.77" y="719.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (198 samples, 0.04%)</title><rect x="451.8" y="805" width="0.5" height="15.0" fill="rgb(208,182,39)" rx="2" ry="2" />
<text  x="454.79" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (246 samples, 0.05%)</title><rect x="272.9" y="709" width="0.6" height="15.0" fill="rgb(207,130,26)" rx="2" ry="2" />
<text  x="275.88" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1189" width="160.8" height="15.0" fill="rgb(226,38,30)" rx="2" ry="2" />
<text  x="1021.74" y="1199.5" >std::__invoke_impl&lt;v..</text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (172 samples, 0.04%)</title><rect x="535.2" y="741" width="0.5" height="15.0" fill="rgb(253,47,13)" rx="2" ry="2" />
<text  x="538.21" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (307 samples, 0.07%)</title><rect x="271.4" y="789" width="0.8" height="15.0" fill="rgb(210,128,2)" rx="2" ry="2" />
<text  x="274.38" y="799.5" ></text>
</g>
<g >
<title>mutex_lock (56 samples, 0.01%)</title><rect x="1013.6" y="853" width="0.1" height="15.0" fill="rgb(245,142,13)" rx="2" ry="2" />
<text  x="1016.56" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4,743 samples, 1.04%)</title><rect x="895.0" y="1045" width="12.4" height="15.0" fill="rgb(242,197,44)" rx="2" ry="2" />
<text  x="898.03" y="1055.5" ></text>
</g>
<g >
<title>update_rq_clock (112 samples, 0.02%)</title><rect x="725.4" y="661" width="0.3" height="15.0" fill="rgb(238,122,52)" rx="2" ry="2" />
<text  x="728.44" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (54 samples, 0.01%)</title><rect x="1139.7" y="1061" width="0.2" height="15.0" fill="rgb(209,14,11)" rx="2" ry="2" />
<text  x="1142.74" y="1071.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (91 samples, 0.02%)</title><rect x="639.4" y="885" width="0.3" height="15.0" fill="rgb(233,178,27)" rx="2" ry="2" />
<text  x="642.42" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (74 samples, 0.02%)</title><rect x="83.2" y="1301" width="0.2" height="15.0" fill="rgb(230,194,14)" rx="2" ry="2" />
<text  x="86.21" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (77 samples, 0.02%)</title><rect x="517.9" y="597" width="0.2" height="15.0" fill="rgb(220,206,46)" rx="2" ry="2" />
<text  x="520.92" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (42 samples, 0.01%)</title><rect x="970.3" y="981" width="0.1" height="15.0" fill="rgb(232,193,24)" rx="2" ry="2" />
<text  x="973.26" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_work (68 samples, 0.01%)</title><rect x="749.5" y="917" width="0.2" height="15.0" fill="rgb(253,109,19)" rx="2" ry="2" />
<text  x="752.49" y="927.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (332 samples, 0.07%)</title><rect x="1068.1" y="853" width="0.9" height="15.0" fill="rgb(205,105,11)" rx="2" ry="2" />
<text  x="1071.09" y="863.5" ></text>
</g>
<g >
<title>webserver::Channel::unregister_all (1,674 samples, 0.37%)</title><rect x="276.9" y="933" width="4.3" height="15.0" fill="rgb(241,8,21)" rx="2" ry="2" />
<text  x="279.88" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (194 samples, 0.04%)</title><rect x="275.3" y="773" width="0.5" height="15.0" fill="rgb(205,174,7)" rx="2" ry="2" />
<text  x="278.31" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (284 samples, 0.06%)</title><rect x="648.9" y="901" width="0.7" height="15.0" fill="rgb(241,37,33)" rx="2" ry="2" />
<text  x="651.85" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (77 samples, 0.02%)</title><rect x="1107.5" y="933" width="0.2" height="15.0" fill="rgb(230,65,26)" rx="2" ry="2" />
<text  x="1110.47" y="943.5" ></text>
</g>
<g >
<title>raw_local_deliver (100 samples, 0.02%)</title><rect x="398.2" y="533" width="0.3" height="15.0" fill="rgb(242,20,23)" rx="2" ry="2" />
<text  x="401.24" y="543.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (323 samples, 0.07%)</title><rect x="1023.3" y="901" width="0.9" height="15.0" fill="rgb(231,56,7)" rx="2" ry="2" />
<text  x="1026.32" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (139 samples, 0.03%)</title><rect x="195.9" y="325" width="0.4" height="15.0" fill="rgb(229,42,38)" rx="2" ry="2" />
<text  x="198.91" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (51 samples, 0.01%)</title><rect x="276.0" y="741" width="0.1" height="15.0" fill="rgb(253,71,6)" rx="2" ry="2" />
<text  x="278.98" y="751.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (328 samples, 0.07%)</title><rect x="991.5" y="981" width="0.8" height="15.0" fill="rgb(242,153,18)" rx="2" ry="2" />
<text  x="994.47" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (51 samples, 0.01%)</title><rect x="1104.7" y="725" width="0.1" height="15.0" fill="rgb(250,153,15)" rx="2" ry="2" />
<text  x="1107.70" y="735.5" ></text>
</g>
<g >
<title>xas_start (98 samples, 0.02%)</title><rect x="904.0" y="805" width="0.2" height="15.0" fill="rgb(220,196,41)" rx="2" ry="2" />
<text  x="906.95" y="815.5" ></text>
</g>
<g >
<title>update_load_avg (91 samples, 0.02%)</title><rect x="485.0" y="949" width="0.3" height="15.0" fill="rgb(235,65,3)" rx="2" ry="2" />
<text  x="488.04" y="959.5" ></text>
</g>
<g >
<title>xas_find (192 samples, 0.04%)</title><rect x="903.7" y="837" width="0.5" height="15.0" fill="rgb(227,168,3)" rx="2" ry="2" />
<text  x="906.71" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (52 samples, 0.01%)</title><rect x="295.3" y="773" width="0.2" height="15.0" fill="rgb(236,76,38)" rx="2" ry="2" />
<text  x="298.32" y="783.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (390 samples, 0.09%)</title><rect x="248.0" y="757" width="1.0" height="15.0" fill="rgb(212,185,13)" rx="2" ry="2" />
<text  x="250.97" y="767.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="310.3" y="645" width="0.1" height="15.0" fill="rgb(230,105,38)" rx="2" ry="2" />
<text  x="313.27" y="655.5" ></text>
</g>
<g >
<title>__mod_node_page_state (43 samples, 0.01%)</title><rect x="843.4" y="869" width="0.1" height="15.0" fill="rgb(243,96,48)" rx="2" ry="2" />
<text  x="846.41" y="879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,912 samples, 0.64%)</title><rect x="897.2" y="901" width="7.6" height="15.0" fill="rgb(244,10,19)" rx="2" ry="2" />
<text  x="900.21" y="911.5" ></text>
</g>
<g >
<title>tcp_data_queue (706 samples, 0.16%)</title><rect x="1085.7" y="693" width="1.9" height="15.0" fill="rgb(219,219,34)" rx="2" ry="2" />
<text  x="1088.74" y="703.5" ></text>
</g>
<g >
<title>up_read (52 samples, 0.01%)</title><rect x="334.1" y="549" width="0.1" height="15.0" fill="rgb(253,148,33)" rx="2" ry="2" />
<text  x="337.05" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (180 samples, 0.04%)</title><rect x="167.1" y="933" width="0.4" height="15.0" fill="rgb(209,182,41)" rx="2" ry="2" />
<text  x="170.07" y="943.5" ></text>
</g>
<g >
<title>psi_task_switch (472 samples, 0.10%)</title><rect x="566.9" y="597" width="1.2" height="15.0" fill="rgb(237,72,47)" rx="2" ry="2" />
<text  x="569.89" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_work (78 samples, 0.02%)</title><rect x="873.3" y="997" width="0.2" height="15.0" fill="rgb(238,59,29)" rx="2" ry="2" />
<text  x="876.27" y="1007.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (47 samples, 0.01%)</title><rect x="363.6" y="917" width="0.1" height="15.0" fill="rgb(237,86,33)" rx="2" ry="2" />
<text  x="366.59" y="927.5" ></text>
</g>
<g >
<title>webserver::EventLoop::is_in_loop_thread (45 samples, 0.01%)</title><rect x="604.7" y="869" width="0.1" height="15.0" fill="rgb(238,2,2)" rx="2" ry="2" />
<text  x="607.72" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (2,543 samples, 0.56%)</title><rect x="269.8" y="917" width="6.6" height="15.0" fill="rgb(225,43,16)" rx="2" ry="2" />
<text  x="272.76" y="927.5" ></text>
</g>
<g >
<title>__fget_files (174 samples, 0.04%)</title><rect x="251.6" y="821" width="0.5" height="15.0" fill="rgb(249,76,4)" rx="2" ry="2" />
<text  x="254.61" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (41 samples, 0.01%)</title><rect x="780.6" y="997" width="0.1" height="15.0" fill="rgb(239,143,32)" rx="2" ry="2" />
<text  x="783.58" y="1007.5" ></text>
</g>
<g >
<title>check_preempt_curr (328 samples, 0.07%)</title><rect x="724.5" y="645" width="0.9" height="15.0" fill="rgb(233,112,13)" rx="2" ry="2" />
<text  x="727.50" y="655.5" ></text>
</g>
<g >
<title>operator new (650 samples, 0.14%)</title><rect x="986.7" y="933" width="1.7" height="15.0" fill="rgb(210,171,51)" rx="2" ry="2" />
<text  x="989.67" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (192 samples, 0.04%)</title><rect x="786.7" y="1045" width="0.5" height="15.0" fill="rgb(243,31,47)" rx="2" ry="2" />
<text  x="789.68" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (68 samples, 0.01%)</title><rect x="793.2" y="997" width="0.2" height="15.0" fill="rgb(238,71,29)" rx="2" ry="2" />
<text  x="796.21" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (1,140 samples, 0.25%)</title><rect x="343.9" y="645" width="3.0" height="15.0" fill="rgb(223,174,4)" rx="2" ry="2" />
<text  x="346.94" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (41 samples, 0.01%)</title><rect x="15.3" y="1285" width="0.1" height="15.0" fill="rgb(251,118,6)" rx="2" ry="2" />
<text  x="18.34" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (861 samples, 0.19%)</title><rect x="789.6" y="1061" width="2.2" height="15.0" fill="rgb(254,113,23)" rx="2" ry="2" />
<text  x="792.61" y="1071.5" ></text>
</g>
<g >
<title>spdlog::logger::should_flush_ (97 samples, 0.02%)</title><rect x="64.0" y="1301" width="0.2" height="15.0" fill="rgb(222,16,9)" rx="2" ry="2" />
<text  x="66.99" y="1311.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (70 samples, 0.02%)</title><rect x="318.6" y="549" width="0.2" height="15.0" fill="rgb(251,150,25)" rx="2" ry="2" />
<text  x="321.61" y="559.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (61 samples, 0.01%)</title><rect x="1011.6" y="853" width="0.2" height="15.0" fill="rgb(211,42,9)" rx="2" ry="2" />
<text  x="1014.63" y="863.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::recv (9,021 samples, 1.99%)</title><rect x="236.3" y="949" width="23.4" height="15.0" fill="rgb(224,168,50)" rx="2" ry="2" />
<text  x="239.31" y="959.5" >w..</text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (64 samples, 0.01%)</title><rect x="1037.5" y="901" width="0.2" height="15.0" fill="rgb(209,32,12)" rx="2" ry="2" />
<text  x="1040.49" y="911.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (74 samples, 0.02%)</title><rect x="155.0" y="1301" width="0.2" height="15.0" fill="rgb(212,207,54)" rx="2" ry="2" />
<text  x="157.99" y="1311.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (45 samples, 0.01%)</title><rect x="874.4" y="1045" width="0.1" height="15.0" fill="rgb(221,179,27)" rx="2" ry="2" />
<text  x="877.38" y="1055.5" ></text>
</g>
<g >
<title>___slab_alloc (148 samples, 0.03%)</title><rect x="1159.2" y="885" width="0.4" height="15.0" fill="rgb(254,227,53)" rx="2" ry="2" />
<text  x="1162.23" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_work (41 samples, 0.01%)</title><rect x="685.6" y="837" width="0.1" height="15.0" fill="rgb(236,45,7)" rx="2" ry="2" />
<text  x="688.62" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (109 samples, 0.02%)</title><rect x="75.5" y="1301" width="0.3" height="15.0" fill="rgb(236,65,23)" rx="2" ry="2" />
<text  x="78.51" y="1311.5" ></text>
</g>
<g >
<title>ntohs@plt (42 samples, 0.01%)</title><rect x="357.6" y="853" width="0.1" height="15.0" fill="rgb(244,225,38)" rx="2" ry="2" />
<text  x="360.62" y="863.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (57 samples, 0.01%)</title><rect x="645.5" y="885" width="0.1" height="15.0" fill="rgb(218,84,50)" rx="2" ry="2" />
<text  x="648.48" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (112 samples, 0.02%)</title><rect x="1031.7" y="901" width="0.3" height="15.0" fill="rgb(246,214,27)" rx="2" ry="2" />
<text  x="1034.70" y="911.5" ></text>
</g>
<g >
<title>_raw_read_lock_irqsave (114 samples, 0.03%)</title><rect x="1130.5" y="933" width="0.3" height="15.0" fill="rgb(224,22,6)" rx="2" ry="2" />
<text  x="1133.46" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (309 samples, 0.07%)</title><rect x="256.3" y="869" width="0.8" height="15.0" fill="rgb(250,73,6)" rx="2" ry="2" />
<text  x="259.32" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (40 samples, 0.01%)</title><rect x="1109.6" y="853" width="0.1" height="15.0" fill="rgb(209,223,17)" rx="2" ry="2" />
<text  x="1112.59" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (514 samples, 0.11%)</title><rect x="1107.4" y="981" width="1.3" height="15.0" fill="rgb(229,74,29)" rx="2" ry="2" />
<text  x="1110.36" y="991.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (383 samples, 0.08%)</title><rect x="183.4" y="501" width="1.0" height="15.0" fill="rgb(242,18,15)" rx="2" ry="2" />
<text  x="186.39" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (161 samples, 0.04%)</title><rect x="749.8" y="965" width="0.4" height="15.0" fill="rgb(250,176,9)" rx="2" ry="2" />
<text  x="752.79" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (267 samples, 0.06%)</title><rect x="642.1" y="789" width="0.7" height="15.0" fill="rgb(221,101,53)" rx="2" ry="2" />
<text  x="645.13" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (21,290 samples, 4.69%)</title><rect x="166.7" y="965" width="55.3" height="15.0" fill="rgb(249,121,50)" rx="2" ry="2" />
<text  x="169.67" y="975.5" >std::..</text>
</g>
<g >
<title>raw_spin_rq_lock_nested (140 samples, 0.03%)</title><rect x="735.1" y="773" width="0.4" height="15.0" fill="rgb(248,50,3)" rx="2" ry="2" />
<text  x="738.15" y="783.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2,538 samples, 0.56%)</title><rect x="832.7" y="917" width="6.6" height="15.0" fill="rgb(246,112,34)" rx="2" ry="2" />
<text  x="835.72" y="927.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (820 samples, 0.18%)</title><rect x="360.7" y="853" width="2.1" height="15.0" fill="rgb(230,162,50)" rx="2" ry="2" />
<text  x="363.68" y="863.5" ></text>
</g>
<g >
<title>read_tsc (47 samples, 0.01%)</title><rect x="373.2" y="725" width="0.1" height="15.0" fill="rgb(230,154,49)" rx="2" ry="2" />
<text  x="376.22" y="735.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (46 samples, 0.01%)</title><rect x="352.0" y="853" width="0.1" height="15.0" fill="rgb(227,146,2)" rx="2" ry="2" />
<text  x="354.98" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,142 samples, 4.44%)</title><rect x="687.7" y="1013" width="52.3" height="15.0" fill="rgb(223,174,20)" rx="2" ry="2" />
<text  x="690.68" y="1023.5" >spdlo..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (122 samples, 0.03%)</title><rect x="275.4" y="725" width="0.3" height="15.0" fill="rgb(211,197,3)" rx="2" ry="2" />
<text  x="278.42" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (55 samples, 0.01%)</title><rect x="1005.5" y="901" width="0.1" height="15.0" fill="rgb(254,39,38)" rx="2" ry="2" />
<text  x="1008.46" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (65 samples, 0.01%)</title><rect x="991.8" y="933" width="0.2" height="15.0" fill="rgb(229,61,10)" rx="2" ry="2" />
<text  x="994.81" y="943.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (54 samples, 0.01%)</title><rect x="1144.2" y="933" width="0.1" height="15.0" fill="rgb(238,208,40)" rx="2" ry="2" />
<text  x="1147.17" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (64 samples, 0.01%)</title><rect x="303.9" y="661" width="0.2" height="15.0" fill="rgb(247,210,46)" rx="2" ry="2" />
<text  x="306.94" y="671.5" ></text>
</g>
<g >
<title>process_echoes (60 samples, 0.01%)</title><rect x="1050.2" y="741" width="0.1" height="15.0" fill="rgb(244,116,50)" rx="2" ry="2" />
<text  x="1053.19" y="751.5" ></text>
</g>
<g >
<title>__skb_clone (75 samples, 0.02%)</title><rect x="214.9" y="485" width="0.2" height="15.0" fill="rgb(251,33,1)" rx="2" ry="2" />
<text  x="217.94" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (114 samples, 0.03%)</title><rect x="269.0" y="853" width="0.3" height="15.0" fill="rgb(206,100,38)" rx="2" ry="2" />
<text  x="271.99" y="863.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (1,024 samples, 0.23%)</title><rect x="797.6" y="949" width="2.7" height="15.0" fill="rgb(205,158,12)" rx="2" ry="2" />
<text  x="800.62" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (197 samples, 0.04%)</title><rect x="1034.1" y="789" width="0.5" height="15.0" fill="rgb(228,202,15)" rx="2" ry="2" />
<text  x="1037.06" y="799.5" ></text>
</g>
<g >
<title>__memchr_avx2 (142 samples, 0.03%)</title><rect x="761.1" y="1013" width="0.4" height="15.0" fill="rgb(228,21,8)" rx="2" ry="2" />
<text  x="764.12" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,695 samples, 0.37%)</title><rect x="734.2" y="853" width="4.4" height="15.0" fill="rgb(219,142,46)" rx="2" ry="2" />
<text  x="737.16" y="863.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (77 samples, 0.02%)</title><rect x="917.3" y="741" width="0.2" height="15.0" fill="rgb(216,222,25)" rx="2" ry="2" />
<text  x="920.34" y="751.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (856 samples, 0.19%)</title><rect x="697.9" y="933" width="2.2" height="15.0" fill="rgb(227,35,16)" rx="2" ry="2" />
<text  x="700.85" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (52 samples, 0.01%)</title><rect x="150.8" y="1301" width="0.1" height="15.0" fill="rgb(212,198,4)" rx="2" ry="2" />
<text  x="153.80" y="1311.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::function&lt;void  (56 samples, 0.01%)</title><rect x="1115.4" y="997" width="0.1" height="15.0" fill="rgb(235,27,30)" rx="2" ry="2" />
<text  x="1118.37" y="1007.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (143 samples, 0.03%)</title><rect x="1168.4" y="1061" width="0.4" height="15.0" fill="rgb(227,61,34)" rx="2" ry="2" />
<text  x="1171.43" y="1071.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (475 samples, 0.10%)</title><rect x="233.8" y="901" width="1.3" height="15.0" fill="rgb(219,164,53)" rx="2" ry="2" />
<text  x="236.84" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (41 samples, 0.01%)</title><rect x="282.2" y="853" width="0.1" height="15.0" fill="rgb(245,158,40)" rx="2" ry="2" />
<text  x="285.17" y="863.5" ></text>
</g>
<g >
<title>enqueue_task_fair (115 samples, 0.03%)</title><rect x="713.5" y="613" width="0.3" height="15.0" fill="rgb(250,215,40)" rx="2" ry="2" />
<text  x="716.52" y="623.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (1,483 samples, 0.33%)</title><rect x="277.3" y="885" width="3.9" height="15.0" fill="rgb(212,0,6)" rx="2" ry="2" />
<text  x="280.34" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt;*, std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt; (45 samples, 0.01%)</title><rect x="42.7" y="1301" width="0.1" height="15.0" fill="rgb(228,85,43)" rx="2" ry="2" />
<text  x="45.73" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (143 samples, 0.03%)</title><rect x="693.1" y="933" width="0.4" height="15.0" fill="rgb(222,5,26)" rx="2" ry="2" />
<text  x="696.09" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (206 samples, 0.05%)</title><rect x="913.3" y="1029" width="0.6" height="15.0" fill="rgb(222,76,36)" rx="2" ry="2" />
<text  x="916.32" y="1039.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (592 samples, 0.13%)</title><rect x="1005.2" y="949" width="1.6" height="15.0" fill="rgb(245,184,1)" rx="2" ry="2" />
<text  x="1008.21" y="959.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (162 samples, 0.04%)</title><rect x="112.0" y="1301" width="0.4" height="15.0" fill="rgb(251,108,3)" rx="2" ry="2" />
<text  x="115.02" y="1311.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (49 samples, 0.01%)</title><rect x="713.9" y="613" width="0.2" height="15.0" fill="rgb(224,49,29)" rx="2" ry="2" />
<text  x="716.94" y="623.5" ></text>
</g>
<g >
<title>reweight_entity (45 samples, 0.01%)</title><rect x="565.6" y="581" width="0.1" height="15.0" fill="rgb(238,61,41)" rx="2" ry="2" />
<text  x="568.57" y="591.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (272 samples, 0.06%)</title><rect x="530.0" y="693" width="0.7" height="15.0" fill="rgb(208,225,20)" rx="2" ry="2" />
<text  x="533.01" y="703.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (345 samples, 0.08%)</title><rect x="331.5" y="453" width="0.9" height="15.0" fill="rgb(253,141,25)" rx="2" ry="2" />
<text  x="334.51" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (81 samples, 0.02%)</title><rect x="95.3" y="1301" width="0.2" height="15.0" fill="rgb(230,219,47)" rx="2" ry="2" />
<text  x="98.29" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (64 samples, 0.01%)</title><rect x="1052.0" y="677" width="0.2" height="15.0" fill="rgb(217,29,8)" rx="2" ry="2" />
<text  x="1055.02" y="687.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (79 samples, 0.02%)</title><rect x="298.5" y="757" width="0.2" height="15.0" fill="rgb(226,28,2)" rx="2" ry="2" />
<text  x="301.48" y="767.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (77 samples, 0.02%)</title><rect x="646.7" y="853" width="0.2" height="15.0" fill="rgb(243,112,18)" rx="2" ry="2" />
<text  x="649.71" y="863.5" ></text>
</g>
<g >
<title>native_write_msr (58 samples, 0.01%)</title><rect x="556.0" y="453" width="0.2" height="15.0" fill="rgb(222,71,23)" rx="2" ry="2" />
<text  x="559.02" y="463.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (49 samples, 0.01%)</title><rect x="328.6" y="469" width="0.1" height="15.0" fill="rgb(237,60,27)" rx="2" ry="2" />
<text  x="331.59" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (385 samples, 0.08%)</title><rect x="971.6" y="965" width="1.0" height="15.0" fill="rgb(223,200,26)" rx="2" ry="2" />
<text  x="974.63" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (628 samples, 0.14%)</title><rect x="527.6" y="693" width="1.7" height="15.0" fill="rgb(212,48,36)" rx="2" ry="2" />
<text  x="530.63" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (54 samples, 0.01%)</title><rect x="307.3" y="629" width="0.1" height="15.0" fill="rgb(207,193,39)" rx="2" ry="2" />
<text  x="310.29" y="639.5" ></text>
</g>
<g >
<title>__ksize (39 samples, 0.01%)</title><rect x="1104.2" y="709" width="0.1" height="15.0" fill="rgb(254,48,35)" rx="2" ry="2" />
<text  x="1107.25" y="719.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (67 samples, 0.01%)</title><rect x="569.7" y="661" width="0.2" height="15.0" fill="rgb(248,200,0)" rx="2" ry="2" />
<text  x="572.75" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (148 samples, 0.03%)</title><rect x="258.1" y="789" width="0.4" height="15.0" fill="rgb(233,42,2)" rx="2" ry="2" />
<text  x="261.15" y="799.5" ></text>
</g>
<g >
<title>__fget_light (58 samples, 0.01%)</title><rect x="754.2" y="933" width="0.2" height="15.0" fill="rgb(241,41,47)" rx="2" ry="2" />
<text  x="757.21" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;::_M_ptr (74 samples, 0.02%)</title><rect x="36.9" y="1301" width="0.2" height="15.0" fill="rgb(241,59,3)" rx="2" ry="2" />
<text  x="39.88" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (50 samples, 0.01%)</title><rect x="695.3" y="901" width="0.1" height="15.0" fill="rgb(237,207,40)" rx="2" ry="2" />
<text  x="698.27" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (130 samples, 0.03%)</title><rect x="1108.1" y="901" width="0.4" height="15.0" fill="rgb(211,60,45)" rx="2" ry="2" />
<text  x="1111.14" y="911.5" ></text>
</g>
<g >
<title>insert_work (69 samples, 0.02%)</title><rect x="548.4" y="533" width="0.2" height="15.0" fill="rgb(210,29,54)" rx="2" ry="2" />
<text  x="551.43" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,503 samples, 0.77%)</title><rect x="1008.1" y="901" width="9.1" height="15.0" fill="rgb(251,208,34)" rx="2" ry="2" />
<text  x="1011.12" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_end (47 samples, 0.01%)</title><rect x="73.8" y="1301" width="0.2" height="15.0" fill="rgb(215,192,51)" rx="2" ry="2" />
<text  x="76.83" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (217 samples, 0.05%)</title><rect x="54.5" y="1301" width="0.6" height="15.0" fill="rgb(247,1,54)" rx="2" ry="2" />
<text  x="57.54" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (249 samples, 0.05%)</title><rect x="533.0" y="741" width="0.6" height="15.0" fill="rgb(222,170,45)" rx="2" ry="2" />
<text  x="535.96" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (117 samples, 0.03%)</title><rect x="525.9" y="741" width="0.3" height="15.0" fill="rgb(228,38,52)" rx="2" ry="2" />
<text  x="528.91" y="751.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::parse_request_line (3,199 samples, 0.70%)</title><rect x="785.9" y="1077" width="8.3" height="15.0" fill="rgb(234,210,23)" rx="2" ry="2" />
<text  x="788.85" y="1087.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (67 samples, 0.01%)</title><rect x="617.8" y="885" width="0.2" height="15.0" fill="rgb(236,66,20)" rx="2" ry="2" />
<text  x="620.78" y="895.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,463 samples, 0.32%)</title><rect x="734.8" y="789" width="3.8" height="15.0" fill="rgb(248,180,5)" rx="2" ry="2" />
<text  x="737.77" y="799.5" ></text>
</g>
<g >
<title>is_cpu_allowed (113 samples, 0.02%)</title><rect x="945.1" y="629" width="0.3" height="15.0" fill="rgb(207,22,20)" rx="2" ry="2" />
<text  x="948.09" y="639.5" ></text>
</g>
<g >
<title>cp_new_stat (373 samples, 0.08%)</title><rect x="852.8" y="997" width="1.0" height="15.0" fill="rgb(241,1,12)" rx="2" ry="2" />
<text  x="855.80" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (368 samples, 0.08%)</title><rect x="625.1" y="933" width="1.0" height="15.0" fill="rgb(249,207,9)" rx="2" ry="2" />
<text  x="628.13" y="943.5" ></text>
</g>
<g >
<title>memset_erms (123 samples, 0.03%)</title><rect x="889.9" y="949" width="0.3" height="15.0" fill="rgb(221,106,18)" rx="2" ry="2" />
<text  x="892.85" y="959.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,162 samples, 0.48%)</title><rect x="1094.9" y="437" width="5.6" height="15.0" fill="rgb(226,197,50)" rx="2" ry="2" />
<text  x="1097.91" y="447.5" ></text>
</g>
<g >
<title>dst_release (46 samples, 0.01%)</title><rect x="405.1" y="501" width="0.2" height="15.0" fill="rgb(217,172,19)" rx="2" ry="2" />
<text  x="408.14" y="511.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (250 samples, 0.06%)</title><rect x="308.2" y="709" width="0.7" height="15.0" fill="rgb(225,14,38)" rx="2" ry="2" />
<text  x="311.23" y="719.5" ></text>
</g>
<g >
<title>task_h_load (41 samples, 0.01%)</title><rect x="682.6" y="757" width="0.1" height="15.0" fill="rgb(226,110,10)" rx="2" ry="2" />
<text  x="685.57" y="767.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (85 samples, 0.02%)</title><rect x="310.2" y="677" width="0.3" height="15.0" fill="rgb(226,133,22)" rx="2" ry="2" />
<text  x="313.23" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (88 samples, 0.02%)</title><rect x="990.0" y="981" width="0.2" height="15.0" fill="rgb(253,8,44)" rx="2" ry="2" />
<text  x="992.97" y="991.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,314 samples, 0.29%)</title><rect x="353.8" y="805" width="3.4" height="15.0" fill="rgb(237,56,3)" rx="2" ry="2" />
<text  x="356.76" y="815.5" ></text>
</g>
<g >
<title>psi_task_change (742 samples, 0.16%)</title><rect x="1127.6" y="837" width="2.0" height="15.0" fill="rgb(243,181,5)" rx="2" ry="2" />
<text  x="1130.63" y="847.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (176 samples, 0.04%)</title><rect x="1109.8" y="805" width="0.5" height="15.0" fill="rgb(205,104,11)" rx="2" ry="2" />
<text  x="1112.80" y="815.5" ></text>
</g>
<g >
<title>set_task_cpu (59 samples, 0.01%)</title><rect x="573.4" y="629" width="0.2" height="15.0" fill="rgb(248,70,11)" rx="2" ry="2" />
<text  x="576.41" y="639.5" ></text>
</g>
<g >
<title>__schedule (72 samples, 0.02%)</title><rect x="1049.1" y="661" width="0.2" height="15.0" fill="rgb(234,2,53)" rx="2" ry="2" />
<text  x="1052.09" y="671.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (230 samples, 0.05%)</title><rect x="768.3" y="1045" width="0.6" height="15.0" fill="rgb(206,113,49)" rx="2" ry="2" />
<text  x="771.29" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (137 samples, 0.03%)</title><rect x="132.2" y="1301" width="0.3" height="15.0" fill="rgb(250,101,18)" rx="2" ry="2" />
<text  x="135.15" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3,918 samples, 0.86%)</title><rect x="1120.3" y="933" width="10.2" height="15.0" fill="rgb(238,146,38)" rx="2" ry="2" />
<text  x="1123.28" y="943.5" ></text>
</g>
<g >
<title>__fsnotify_parent (102 samples, 0.02%)</title><rect x="539.5" y="629" width="0.3" height="15.0" fill="rgb(208,75,38)" rx="2" ry="2" />
<text  x="542.52" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator* (68 samples, 0.01%)</title><rect x="768.1" y="1045" width="0.2" height="15.0" fill="rgb(218,199,29)" rx="2" ry="2" />
<text  x="771.10" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::function&lt;void  (467 samples, 0.10%)</title><rect x="624.9" y="1029" width="1.2" height="15.0" fill="rgb(252,216,20)" rx="2" ry="2" />
<text  x="627.88" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::new_allocator (100 samples, 0.02%)</title><rect x="42.3" y="1301" width="0.2" height="15.0" fill="rgb(217,225,27)" rx="2" ry="2" />
<text  x="45.26" y="1311.5" ></text>
</g>
<g >
<title>enqueue_entity (436 samples, 0.10%)</title><rect x="205.9" y="69" width="1.1" height="15.0" fill="rgb(233,155,23)" rx="2" ry="2" />
<text  x="208.88" y="79.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (99 samples, 0.02%)</title><rect x="1101.4" y="629" width="0.3" height="15.0" fill="rgb(250,101,18)" rx="2" ry="2" />
<text  x="1104.41" y="639.5" ></text>
</g>
<g >
<title>update_curr (106 samples, 0.02%)</title><rect x="1056.1" y="613" width="0.2" height="15.0" fill="rgb(215,188,18)" rx="2" ry="2" />
<text  x="1059.07" y="623.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (318 samples, 0.07%)</title><rect x="660.2" y="661" width="0.8" height="15.0" fill="rgb(233,136,7)" rx="2" ry="2" />
<text  x="663.19" y="671.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21,482 samples, 4.73%)</title><rect x="292.6" y="901" width="55.8" height="15.0" fill="rgb(248,209,33)" rx="2" ry="2" />
<text  x="295.61" y="911.5" >spdlo..</text>
</g>
<g >
<title>free_pgd_range (63 samples, 0.01%)</title><rect x="827.9" y="949" width="0.2" height="15.0" fill="rgb(243,202,18)" rx="2" ry="2" />
<text  x="830.90" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (576 samples, 0.13%)</title><rect x="696.1" y="853" width="1.5" height="15.0" fill="rgb(224,40,15)" rx="2" ry="2" />
<text  x="699.09" y="863.5" ></text>
</g>
<g >
<title>[[br_netfilter]] (155 samples, 0.03%)</title><rect x="442.7" y="565" width="0.4" height="15.0" fill="rgb(227,195,12)" rx="2" ry="2" />
<text  x="445.68" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (677 samples, 0.15%)</title><rect x="783.9" y="1013" width="1.7" height="15.0" fill="rgb(221,67,33)" rx="2" ry="2" />
<text  x="786.88" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (223 samples, 0.05%)</title><rect x="895.4" y="917" width="0.5" height="15.0" fill="rgb(223,9,46)" rx="2" ry="2" />
<text  x="898.36" y="927.5" ></text>
</g>
<g >
<title>nf_hook_slow (250 samples, 0.06%)</title><rect x="211.2" y="293" width="0.6" height="15.0" fill="rgb(222,118,30)" rx="2" ry="2" />
<text  x="214.19" y="303.5" ></text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (41 samples, 0.01%)</title><rect x="1136.3" y="965" width="0.2" height="15.0" fill="rgb(245,179,24)" rx="2" ry="2" />
<text  x="1139.34" y="975.5" ></text>
</g>
<g >
<title>set_next_task_idle (40 samples, 0.01%)</title><rect x="1066.7" y="741" width="0.1" height="15.0" fill="rgb(208,65,3)" rx="2" ry="2" />
<text  x="1069.70" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (101 samples, 0.02%)</title><rect x="775.9" y="837" width="0.3" height="15.0" fill="rgb(251,147,20)" rx="2" ry="2" />
<text  x="778.91" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits_inc (44 samples, 0.01%)</title><rect x="1025.2" y="885" width="0.1" height="15.0" fill="rgb(239,119,30)" rx="2" ry="2" />
<text  x="1028.19" y="895.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::insert&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (1,200 samples, 0.26%)</title><rect x="587.0" y="853" width="3.1" height="15.0" fill="rgb(237,177,46)" rx="2" ry="2" />
<text  x="589.96" y="863.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1253" width="860.0" height="15.0" fill="rgb(223,96,26)" rx="2" ry="2" />
<text  x="161.66" y="1263.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,561 samples, 1.44%)</title><rect x="852.4" y="1045" width="17.1" height="15.0" fill="rgb(243,213,16)" rx="2" ry="2" />
<text  x="855.44" y="1055.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (65 samples, 0.01%)</title><rect x="355.8" y="789" width="0.1" height="15.0" fill="rgb(248,217,54)" rx="2" ry="2" />
<text  x="358.78" y="799.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (50 samples, 0.01%)</title><rect x="1066.3" y="741" width="0.1" height="15.0" fill="rgb(230,147,3)" rx="2" ry="2" />
<text  x="1069.28" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (55 samples, 0.01%)</title><rect x="1006.5" y="917" width="0.2" height="15.0" fill="rgb(253,74,10)" rx="2" ry="2" />
<text  x="1009.54" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (94 samples, 0.02%)</title><rect x="772.4" y="997" width="0.3" height="15.0" fill="rgb(233,34,24)" rx="2" ry="2" />
<text  x="775.44" y="1007.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (46 samples, 0.01%)</title><rect x="712.9" y="613" width="0.1" height="15.0" fill="rgb(234,9,47)" rx="2" ry="2" />
<text  x="715.91" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1221" width="160.8" height="15.0" fill="rgb(252,86,20)" rx="2" ry="2" />
<text  x="1021.74" y="1231.5" >std::_Function_handl..</text>
</g>
<g >
<title>enqueue_to_backlog (73 samples, 0.02%)</title><rect x="1092.1" y="565" width="0.1" height="15.0" fill="rgb(221,181,24)" rx="2" ry="2" />
<text  x="1095.05" y="575.5" ></text>
</g>
<g >
<title>vma_link (640 samples, 0.14%)</title><rect x="815.6" y="949" width="1.7" height="15.0" fill="rgb(228,14,42)" rx="2" ry="2" />
<text  x="818.61" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (698 samples, 0.15%)</title><rect x="907.6" y="1013" width="1.8" height="15.0" fill="rgb(205,67,9)" rx="2" ry="2" />
<text  x="910.63" y="1023.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (499 samples, 0.11%)</title><rect x="769.8" y="997" width="1.3" height="15.0" fill="rgb(231,69,19)" rx="2" ry="2" />
<text  x="772.79" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (182 samples, 0.04%)</title><rect x="533.1" y="709" width="0.5" height="15.0" fill="rgb(249,167,21)" rx="2" ry="2" />
<text  x="536.13" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (160 samples, 0.04%)</title><rect x="989.0" y="997" width="0.4" height="15.0" fill="rgb(214,120,17)" rx="2" ry="2" />
<text  x="991.96" y="1007.5" ></text>
</g>
<g >
<title>psi_group_change (299 samples, 0.07%)</title><rect x="574.9" y="581" width="0.8" height="15.0" fill="rgb(245,195,0)" rx="2" ry="2" />
<text  x="577.90" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (804 samples, 0.18%)</title><rect x="769.0" y="1045" width="2.1" height="15.0" fill="rgb(231,123,15)" rx="2" ry="2" />
<text  x="772.03" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (59 samples, 0.01%)</title><rect x="307.3" y="645" width="0.1" height="15.0" fill="rgb(205,8,27)" rx="2" ry="2" />
<text  x="310.28" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (129 samples, 0.03%)</title><rect x="639.0" y="933" width="0.3" height="15.0" fill="rgb(217,100,54)" rx="2" ry="2" />
<text  x="641.96" y="943.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (140 samples, 0.03%)</title><rect x="1026.7" y="981" width="0.3" height="15.0" fill="rgb(251,195,44)" rx="2" ry="2" />
<text  x="1029.66" y="991.5" ></text>
</g>
<g >
<title>__schedule (41 samples, 0.01%)</title><rect x="213.0" y="389" width="0.1" height="15.0" fill="rgb(226,96,4)" rx="2" ry="2" />
<text  x="215.96" y="399.5" ></text>
</g>
<g >
<title>[web_server] (533 samples, 0.12%)</title><rect x="157.2" y="1317" width="1.3" height="15.0" fill="rgb(206,51,35)" rx="2" ry="2" />
<text  x="160.15" y="1327.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (50 samples, 0.01%)</title><rect x="557.2" y="565" width="0.1" height="15.0" fill="rgb(224,42,15)" rx="2" ry="2" />
<text  x="560.21" y="575.5" ></text>
</g>
<g >
<title>start_thread (331,015 samples, 72.89%)</title><rect x="158.6" y="1301" width="860.1" height="15.0" fill="rgb(212,177,39)" rx="2" ry="2" />
<text  x="161.65" y="1311.5" >start_thread</text>
</g>
<g >
<title>perf_iterate_sb (2,541 samples, 0.56%)</title><rect x="806.8" y="933" width="6.6" height="15.0" fill="rgb(254,169,49)" rx="2" ry="2" />
<text  x="809.82" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (426 samples, 0.09%)</title><rect x="532.5" y="789" width="1.1" height="15.0" fill="rgb(244,229,1)" rx="2" ry="2" />
<text  x="535.54" y="799.5" ></text>
</g>
<g >
<title>accept4 (151 samples, 0.03%)</title><rect x="1179.7" y="1317" width="0.4" height="15.0" fill="rgb(206,208,5)" rx="2" ry="2" />
<text  x="1182.68" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (42 samples, 0.01%)</title><rect x="297.4" y="581" width="0.1" height="15.0" fill="rgb(208,14,17)" rx="2" ry="2" />
<text  x="300.39" y="591.5" ></text>
</g>
<g >
<title>cpumask_next (57 samples, 0.01%)</title><rect x="837.7" y="885" width="0.1" height="15.0" fill="rgb(243,130,15)" rx="2" ry="2" />
<text  x="840.69" y="895.5" ></text>
</g>
<g >
<title>mark_wake_futex (61 samples, 0.01%)</title><rect x="680.8" y="805" width="0.2" height="15.0" fill="rgb(240,7,9)" rx="2" ry="2" />
<text  x="683.82" y="815.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (189 samples, 0.04%)</title><rect x="913.3" y="1013" width="0.5" height="15.0" fill="rgb(209,109,2)" rx="2" ry="2" />
<text  x="916.35" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,714 samples, 1.92%)</title><rect x="1145.8" y="1045" width="22.6" height="15.0" fill="rgb(214,107,46)" rx="2" ry="2" />
<text  x="1148.78" y="1055.5" >d..</text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (43 samples, 0.01%)</title><rect x="29.2" y="1301" width="0.1" height="15.0" fill="rgb(209,53,43)" rx="2" ry="2" />
<text  x="32.22" y="1311.5" ></text>
</g>
<g >
<title>operator new (439 samples, 0.10%)</title><rect x="1000.0" y="869" width="1.2" height="15.0" fill="rgb(206,88,17)" rx="2" ry="2" />
<text  x="1003.05" y="879.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::load (83 samples, 0.02%)</title><rect x="162.3" y="1013" width="0.2" height="15.0" fill="rgb(211,101,22)" rx="2" ry="2" />
<text  x="165.28" y="1023.5" ></text>
</g>
<g >
<title>filemap_map_pages (1,353 samples, 0.30%)</title><rect x="900.7" y="853" width="3.5" height="15.0" fill="rgb(223,51,39)" rx="2" ry="2" />
<text  x="903.69" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (74 samples, 0.02%)</title><rect x="450.4" y="709" width="0.2" height="15.0" fill="rgb(215,195,24)" rx="2" ry="2" />
<text  x="453.36" y="719.5" ></text>
</g>
<g >
<title>_int_free (84 samples, 0.02%)</title><rect x="147.6" y="1301" width="0.2" height="15.0" fill="rgb(210,36,2)" rx="2" ry="2" />
<text  x="150.61" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (873 samples, 0.19%)</title><rect x="760.0" y="1061" width="2.3" height="15.0" fill="rgb(210,146,52)" rx="2" ry="2" />
<text  x="763.00" y="1071.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (106 samples, 0.02%)</title><rect x="303.4" y="709" width="0.3" height="15.0" fill="rgb(227,0,10)" rx="2" ry="2" />
<text  x="306.38" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (189 samples, 0.04%)</title><rect x="408.0" y="453" width="0.5" height="15.0" fill="rgb(253,156,25)" rx="2" ry="2" />
<text  x="410.97" y="463.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2,082 samples, 0.46%)</title><rect x="1063.8" y="901" width="5.4" height="15.0" fill="rgb(226,82,53)" rx="2" ry="2" />
<text  x="1066.76" y="911.5" ></text>
</g>
<g >
<title>__virt_addr_valid (99 samples, 0.02%)</title><rect x="1045.5" y="741" width="0.2" height="15.0" fill="rgb(219,166,7)" rx="2" ry="2" />
<text  x="1048.45" y="751.5" ></text>
</g>
<g >
<title>pty_write (462 samples, 0.10%)</title><rect x="545.1" y="565" width="1.2" height="15.0" fill="rgb(217,92,40)" rx="2" ry="2" />
<text  x="548.06" y="575.5" ></text>
</g>
<g >
<title>new_do_write (820 samples, 0.18%)</title><rect x="1187.1" y="1253" width="2.2" height="15.0" fill="rgb(217,228,14)" rx="2" ry="2" />
<text  x="1190.13" y="1263.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (40 samples, 0.01%)</title><rect x="1001.4" y="885" width="0.1" height="15.0" fill="rgb(252,46,20)" rx="2" ry="2" />
<text  x="1004.42" y="895.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (86 samples, 0.02%)</title><rect x="791.1" y="949" width="0.2" height="15.0" fill="rgb(242,193,46)" rx="2" ry="2" />
<text  x="794.11" y="959.5" ></text>
</g>
<g >
<title>cpumask_next (46 samples, 0.01%)</title><rect x="947.8" y="613" width="0.1" height="15.0" fill="rgb(205,196,20)" rx="2" ry="2" />
<text  x="950.78" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (114 samples, 0.03%)</title><rect x="970.7" y="997" width="0.3" height="15.0" fill="rgb(208,94,44)" rx="2" ry="2" />
<text  x="973.67" y="1007.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (52 samples, 0.01%)</title><rect x="235.1" y="885" width="0.1" height="15.0" fill="rgb(232,81,9)" rx="2" ry="2" />
<text  x="238.11" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (69 samples, 0.02%)</title><rect x="122.4" y="1301" width="0.2" height="15.0" fill="rgb(218,193,39)" rx="2" ry="2" />
<text  x="125.43" y="1311.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,912 samples, 0.42%)</title><rect x="672.8" y="789" width="4.9" height="15.0" fill="rgb(230,178,31)" rx="2" ry="2" />
<text  x="675.77" y="799.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (117 samples, 0.03%)</title><rect x="913.5" y="997" width="0.3" height="15.0" fill="rgb(236,17,7)" rx="2" ry="2" />
<text  x="916.47" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (46 samples, 0.01%)</title><rect x="532.8" y="661" width="0.1" height="15.0" fill="rgb(230,84,49)" rx="2" ry="2" />
<text  x="535.77" y="671.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::on_request (41,032 samples, 9.03%)</title><rect x="912.0" y="1061" width="106.6" height="15.0" fill="rgb(206,57,19)" rx="2" ry="2" />
<text  x="915.02" y="1071.5" >webserver::Ht..</text>
</g>
<g >
<title>epoll_wait (393 samples, 0.09%)</title><rect x="162.9" y="1093" width="1.1" height="15.0" fill="rgb(243,106,2)" rx="2" ry="2" />
<text  x="165.94" y="1103.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (442 samples, 0.10%)</title><rect x="456.1" y="805" width="1.1" height="15.0" fill="rgb(224,25,19)" rx="2" ry="2" />
<text  x="459.09" y="815.5" ></text>
</g>
<g >
<title>__memchr_avx2 (149 samples, 0.03%)</title><rect x="788.6" y="1013" width="0.3" height="15.0" fill="rgb(242,202,45)" rx="2" ry="2" />
<text  x="791.56" y="1023.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (1,257 samples, 0.28%)</title><rect x="730.5" y="949" width="3.3" height="15.0" fill="rgb(206,226,0)" rx="2" ry="2" />
<text  x="733.53" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (42 samples, 0.01%)</title><rect x="739.5" y="949" width="0.1" height="15.0" fill="rgb(223,99,48)" rx="2" ry="2" />
<text  x="742.52" y="959.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (45 samples, 0.01%)</title><rect x="704.6" y="837" width="0.1" height="15.0" fill="rgb(245,103,54)" rx="2" ry="2" />
<text  x="707.57" y="847.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,623 samples, 0.58%)</title><rect x="1051.8" y="693" width="6.9" height="15.0" fill="rgb(219,45,50)" rx="2" ry="2" />
<text  x="1054.85" y="703.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (639 samples, 0.14%)</title><rect x="954.7" y="773" width="1.7" height="15.0" fill="rgb(234,33,36)" rx="2" ry="2" />
<text  x="957.71" y="783.5" ></text>
</g>
<g >
<title>enqueue_task_fair (232 samples, 0.05%)</title><rect x="966.1" y="709" width="0.6" height="15.0" fill="rgb(222,152,21)" rx="2" ry="2" />
<text  x="969.07" y="719.5" ></text>
</g>
<g >
<title>fsnotify (68 samples, 0.01%)</title><rect x="1134.5" y="981" width="0.2" height="15.0" fill="rgb(221,37,30)" rx="2" ry="2" />
<text  x="1137.54" y="991.5" ></text>
</g>
<g >
<title>map_id_range_down (85 samples, 0.02%)</title><rect x="859.1" y="885" width="0.2" height="15.0" fill="rgb(223,135,1)" rx="2" ry="2" />
<text  x="862.07" y="895.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (41 samples, 0.01%)</title><rect x="215.7" y="485" width="0.1" height="15.0" fill="rgb(208,78,31)" rx="2" ry="2" />
<text  x="218.66" y="495.5" ></text>
</g>
<g >
<title>_IO_no_init (96 samples, 0.02%)</title><rect x="353.3" y="805" width="0.2" height="15.0" fill="rgb(218,111,24)" rx="2" ry="2" />
<text  x="356.26" y="815.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (57 samples, 0.01%)</title><rect x="1112.2" y="1013" width="0.2" height="15.0" fill="rgb(251,98,38)" rx="2" ry="2" />
<text  x="1115.20" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::get_container&lt;fmt::v8::detail::buffer&lt;char&gt; &gt; (78 samples, 0.02%)</title><rect x="148.9" y="1301" width="0.2" height="15.0" fill="rgb(247,59,51)" rx="2" ry="2" />
<text  x="151.92" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (216 samples, 0.05%)</title><rect x="966.7" y="709" width="0.6" height="15.0" fill="rgb(236,1,53)" rx="2" ry="2" />
<text  x="969.71" y="719.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (207 samples, 0.05%)</title><rect x="978.4" y="981" width="0.6" height="15.0" fill="rgb(227,119,24)" rx="2" ry="2" />
<text  x="981.43" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (66 samples, 0.01%)</title><rect x="1107.5" y="917" width="0.2" height="15.0" fill="rgb(239,121,4)" rx="2" ry="2" />
<text  x="1110.49" y="927.5" ></text>
</g>
<g >
<title>d_instantiate (316 samples, 0.07%)</title><rect x="1165.5" y="949" width="0.8" height="15.0" fill="rgb(240,208,17)" rx="2" ry="2" />
<text  x="1168.50" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (73 samples, 0.02%)</title><rect x="700.2" y="853" width="0.2" height="15.0" fill="rgb(249,184,9)" rx="2" ry="2" />
<text  x="703.17" y="863.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (75 samples, 0.02%)</title><rect x="303.4" y="661" width="0.2" height="15.0" fill="rgb(218,82,22)" rx="2" ry="2" />
<text  x="306.45" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (45 samples, 0.01%)</title><rect x="277.0" y="869" width="0.1" height="15.0" fill="rgb(209,107,32)" rx="2" ry="2" />
<text  x="279.96" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (85 samples, 0.02%)</title><rect x="646.2" y="933" width="0.2" height="15.0" fill="rgb(226,97,29)" rx="2" ry="2" />
<text  x="649.17" y="943.5" ></text>
</g>
<g >
<title>[[stack]] (7,929 samples, 1.75%)</title><rect x="13.5" y="1317" width="20.6" height="15.0" fill="rgb(229,195,35)" rx="2" ry="2" />
<text  x="16.45" y="1327.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (76 samples, 0.02%)</title><rect x="786.3" y="1013" width="0.2" height="15.0" fill="rgb(223,149,17)" rx="2" ry="2" />
<text  x="789.27" y="1023.5" ></text>
</g>
<g >
<title>ret_from_fork (39 samples, 0.01%)</title><rect x="158.5" y="1301" width="0.1" height="15.0" fill="rgb(210,68,8)" rx="2" ry="2" />
<text  x="161.54" y="1311.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,587 samples, 0.57%)</title><rect x="1093.9" y="485" width="6.7" height="15.0" fill="rgb(221,187,23)" rx="2" ry="2" />
<text  x="1096.89" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (707 samples, 0.16%)</title><rect x="605.8" y="901" width="1.8" height="15.0" fill="rgb(213,0,6)" rx="2" ry="2" />
<text  x="608.80" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (406 samples, 0.09%)</title><rect x="781.5" y="1013" width="1.0" height="15.0" fill="rgb(211,17,47)" rx="2" ry="2" />
<text  x="784.48" y="1023.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (45 samples, 0.01%)</title><rect x="19.8" y="1301" width="0.1" height="15.0" fill="rgb(234,126,1)" rx="2" ry="2" />
<text  x="22.76" y="1311.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (300 samples, 0.07%)</title><rect x="1111.2" y="1013" width="0.8" height="15.0" fill="rgb(251,203,26)" rx="2" ry="2" />
<text  x="1114.17" y="1023.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (165 samples, 0.04%)</title><rect x="1133.0" y="901" width="0.5" height="15.0" fill="rgb(231,95,54)" rx="2" ry="2" />
<text  x="1136.03" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;bool, std::shared_ptr&lt;webserver::TcpSocket&gt; &gt;::~pair (10,255 samples, 2.26%)</title><rect x="1079.1" y="1093" width="26.6" height="15.0" fill="rgb(221,81,54)" rx="2" ry="2" />
<text  x="1082.10" y="1103.5" >s..</text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (143 samples, 0.03%)</title><rect x="512.8" y="949" width="0.4" height="15.0" fill="rgb(206,157,54)" rx="2" ry="2" />
<text  x="515.79" y="959.5" ></text>
</g>
<g >
<title>down_write_killable (300 samples, 0.07%)</title><rect x="844.9" y="981" width="0.8" height="15.0" fill="rgb(215,10,27)" rx="2" ry="2" />
<text  x="847.91" y="991.5" ></text>
</g>
<g >
<title>__vma_link_file (68 samples, 0.01%)</title><rect x="816.6" y="933" width="0.2" height="15.0" fill="rgb(242,4,21)" rx="2" ry="2" />
<text  x="819.61" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (97 samples, 0.02%)</title><rect x="1035.3" y="885" width="0.3" height="15.0" fill="rgb(221,165,28)" rx="2" ry="2" />
<text  x="1038.33" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_free (101 samples, 0.02%)</title><rect x="740.5" y="981" width="0.2" height="15.0" fill="rgb(229,169,26)" rx="2" ry="2" />
<text  x="743.47" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::visit_format_arg&lt;fmt::v8::detail::default_arg_formatter&lt;char&gt;, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt; (202 samples, 0.04%)</title><rect x="297.0" y="757" width="0.5" height="15.0" fill="rgb(253,23,8)" rx="2" ry="2" />
<text  x="300.02" y="767.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ios (364 samples, 0.08%)</title><rect x="973.3" y="1029" width="0.9" height="15.0" fill="rgb(240,165,18)" rx="2" ry="2" />
<text  x="976.27" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (51 samples, 0.01%)</title><rect x="270.9" y="789" width="0.1" height="15.0" fill="rgb(205,169,50)" rx="2" ry="2" />
<text  x="273.91" y="799.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (84 samples, 0.02%)</title><rect x="532.7" y="725" width="0.2" height="15.0" fill="rgb(220,119,47)" rx="2" ry="2" />
<text  x="535.69" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (150 samples, 0.03%)</title><rect x="767.2" y="981" width="0.4" height="15.0" fill="rgb(238,209,18)" rx="2" ry="2" />
<text  x="770.16" y="991.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (42,623 samples, 9.39%)</title><rect x="511.4" y="1077" width="110.8" height="15.0" fill="rgb(214,78,44)" rx="2" ry="2" />
<text  x="514.44" y="1087.5" >std::_Functio..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (42 samples, 0.01%)</title><rect x="623.6" y="1029" width="0.1" height="15.0" fill="rgb(250,41,19)" rx="2" ry="2" />
<text  x="626.57" y="1039.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (66 samples, 0.01%)</title><rect x="344.6" y="565" width="0.2" height="15.0" fill="rgb(244,135,18)" rx="2" ry="2" />
<text  x="347.64" y="575.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (8,450 samples, 1.86%)</title><rect x="1041.2" y="965" width="21.9" height="15.0" fill="rgb(212,17,41)" rx="2" ry="2" />
<text  x="1044.17" y="975.5" >s..</text>
</g>
<g >
<title>ksys_mmap_pgoff (9,191 samples, 2.02%)</title><rect x="795.7" y="1013" width="23.9" height="15.0" fill="rgb(242,36,11)" rx="2" ry="2" />
<text  x="798.70" y="1023.5" >k..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (61 samples, 0.01%)</title><rect x="301.9" y="757" width="0.1" height="15.0" fill="rgb(207,76,52)" rx="2" ry="2" />
<text  x="304.88" y="767.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (60 samples, 0.01%)</title><rect x="413.3" y="373" width="0.2" height="15.0" fill="rgb(223,160,17)" rx="2" ry="2" />
<text  x="416.35" y="383.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::send (7,607 samples, 1.67%)</title><rect x="998.9" y="1029" width="19.7" height="15.0" fill="rgb(230,98,27)" rx="2" ry="2" />
<text  x="1001.87" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (330 samples, 0.07%)</title><rect x="1005.7" y="901" width="0.8" height="15.0" fill="rgb(225,6,47)" rx="2" ry="2" />
<text  x="1008.67" y="911.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (148 samples, 0.03%)</title><rect x="978.0" y="981" width="0.4" height="15.0" fill="rgb(239,221,14)" rx="2" ry="2" />
<text  x="981.00" y="991.5" ></text>
</g>
<g >
<title>[web_server] (89 samples, 0.02%)</title><rect x="149.7" y="1269" width="0.2" height="15.0" fill="rgb(223,84,1)" rx="2" ry="2" />
<text  x="152.66" y="1279.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (55 samples, 0.01%)</title><rect x="1034.4" y="757" width="0.1" height="15.0" fill="rgb(245,26,35)" rx="2" ry="2" />
<text  x="1037.39" y="767.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (69 samples, 0.02%)</title><rect x="953.5" y="693" width="0.2" height="15.0" fill="rgb(214,153,0)" rx="2" ry="2" />
<text  x="956.48" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (51 samples, 0.01%)</title><rect x="930.4" y="773" width="0.1" height="15.0" fill="rgb(221,201,5)" rx="2" ry="2" />
<text  x="933.38" y="783.5" ></text>
</g>
<g >
<title>reweight_entity (89 samples, 0.02%)</title><rect x="484.5" y="949" width="0.2" height="15.0" fill="rgb(227,93,33)" rx="2" ry="2" />
<text  x="487.50" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output2 (752 samples, 0.17%)</title><rect x="414.4" y="437" width="1.9" height="15.0" fill="rgb(241,220,4)" rx="2" ry="2" />
<text  x="417.39" y="447.5" ></text>
</g>
<g >
<title>rb_insert_color (54 samples, 0.01%)</title><rect x="601.7" y="757" width="0.2" height="15.0" fill="rgb(241,159,19)" rx="2" ry="2" />
<text  x="604.71" y="767.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (58 samples, 0.01%)</title><rect x="1074.6" y="901" width="0.1" height="15.0" fill="rgb(224,227,49)" rx="2" ry="2" />
<text  x="1077.57" y="911.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (20,980 samples, 4.62%)</title><rect x="1021.1" y="1029" width="54.5" height="15.0" fill="rgb(236,173,32)" rx="2" ry="2" />
<text  x="1024.08" y="1039.5" >spdlo..</text>
</g>
<g >
<title>__libc_disable_asynccancel (58 samples, 0.01%)</title><rect x="537.5" y="693" width="0.2" height="15.0" fill="rgb(226,11,46)" rx="2" ry="2" />
<text  x="540.53" y="703.5" ></text>
</g>
<g >
<title>queue_work_on (3,237 samples, 0.71%)</title><rect x="717.4" y="709" width="8.4" height="15.0" fill="rgb(211,150,46)" rx="2" ry="2" />
<text  x="720.42" y="719.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (78 samples, 0.02%)</title><rect x="1132.6" y="885" width="0.2" height="15.0" fill="rgb(242,79,4)" rx="2" ry="2" />
<text  x="1135.58" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_S_do_relocate (133 samples, 0.03%)</title><rect x="508.9" y="1061" width="0.4" height="15.0" fill="rgb(219,46,4)" rx="2" ry="2" />
<text  x="511.94" y="1071.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (329 samples, 0.07%)</title><rect x="312.2" y="741" width="0.8" height="15.0" fill="rgb(227,168,46)" rx="2" ry="2" />
<text  x="315.19" y="751.5" ></text>
</g>
<g >
<title>vmacache_find (56 samples, 0.01%)</title><rect x="897.9" y="869" width="0.1" height="15.0" fill="rgb(254,151,53)" rx="2" ry="2" />
<text  x="900.87" y="879.5" ></text>
</g>
<g >
<title>pick_next_task_fair (143 samples, 0.03%)</title><rect x="960.9" y="709" width="0.3" height="15.0" fill="rgb(214,24,9)" rx="2" ry="2" />
<text  x="963.87" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (49 samples, 0.01%)</title><rect x="772.9" y="981" width="0.2" height="15.0" fill="rgb(214,184,49)" rx="2" ry="2" />
<text  x="775.94" y="991.5" ></text>
</g>
<g >
<title>ip_send_unicast_reply (46 samples, 0.01%)</title><rect x="439.7" y="501" width="0.2" height="15.0" fill="rgb(243,103,8)" rx="2" ry="2" />
<text  x="442.73" y="511.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (18,551 samples, 4.08%)</title><rect x="299.6" y="789" width="48.2" height="15.0" fill="rgb(244,36,53)" rx="2" ry="2" />
<text  x="302.55" y="799.5" >spdl..</text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (168 samples, 0.04%)</title><rect x="699.6" y="917" width="0.4" height="15.0" fill="rgb(244,147,16)" rx="2" ry="2" />
<text  x="702.60" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (39 samples, 0.01%)</title><rect x="994.4" y="917" width="0.1" height="15.0" fill="rgb(236,87,19)" rx="2" ry="2" />
<text  x="997.37" y="927.5" ></text>
</g>
<g >
<title>futex_wake (1,495 samples, 0.33%)</title><rect x="1070.0" y="837" width="3.8" height="15.0" fill="rgb(245,214,0)" rx="2" ry="2" />
<text  x="1072.96" y="847.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (62 samples, 0.01%)</title><rect x="584.2" y="869" width="0.1" height="15.0" fill="rgb(214,179,52)" rx="2" ry="2" />
<text  x="587.15" y="879.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (60 samples, 0.01%)</title><rect x="232.7" y="821" width="0.1" height="15.0" fill="rgb(230,67,8)" rx="2" ry="2" />
<text  x="235.67" y="831.5" ></text>
</g>
<g >
<title>dnotify_flush (39 samples, 0.01%)</title><rect x="172.9" y="645" width="0.1" height="15.0" fill="rgb(224,147,9)" rx="2" ry="2" />
<text  x="175.94" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (1,305 samples, 0.29%)</title><rect x="999.2" y="1013" width="3.4" height="15.0" fill="rgb(212,168,11)" rx="2" ry="2" />
<text  x="1002.22" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (102 samples, 0.02%)</title><rect x="271.9" y="773" width="0.3" height="15.0" fill="rgb(236,43,44)" rx="2" ry="2" />
<text  x="274.90" y="783.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (65 samples, 0.01%)</title><rect x="745.1" y="997" width="0.1" height="15.0" fill="rgb(228,37,49)" rx="2" ry="2" />
<text  x="748.06" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (121 samples, 0.03%)</title><rect x="518.9" y="741" width="0.3" height="15.0" fill="rgb(250,55,27)" rx="2" ry="2" />
<text  x="521.92" y="751.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (93 samples, 0.02%)</title><rect x="210.8" y="213" width="0.2" height="15.0" fill="rgb(228,166,28)" rx="2" ry="2" />
<text  x="213.80" y="223.5" ></text>
</g>
<g >
<title>iterate_groups (44 samples, 0.01%)</title><rect x="341.2" y="549" width="0.1" height="15.0" fill="rgb(238,159,28)" rx="2" ry="2" />
<text  x="344.16" y="559.5" ></text>
</g>
<g >
<title>find_vma (401 samples, 0.09%)</title><rect x="824.5" y="965" width="1.1" height="15.0" fill="rgb(251,168,26)" rx="2" ry="2" />
<text  x="827.54" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (51 samples, 0.01%)</title><rect x="30.4" y="1301" width="0.1" height="15.0" fill="rgb(246,110,38)" rx="2" ry="2" />
<text  x="33.37" y="1311.5" ></text>
</g>
<g >
<title>set_task_cpu (65 samples, 0.01%)</title><rect x="328.6" y="485" width="0.1" height="15.0" fill="rgb(227,105,48)" rx="2" ry="2" />
<text  x="331.55" y="495.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (100 samples, 0.02%)</title><rect x="912.9" y="997" width="0.3" height="15.0" fill="rgb(239,139,26)" rx="2" ry="2" />
<text  x="915.90" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (43 samples, 0.01%)</title><rect x="309.2" y="725" width="0.1" height="15.0" fill="rgb(227,154,16)" rx="2" ry="2" />
<text  x="312.19" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (396 samples, 0.09%)</title><rect x="787.9" y="1045" width="1.1" height="15.0" fill="rgb(218,20,21)" rx="2" ry="2" />
<text  x="790.93" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (891 samples, 0.20%)</title><rect x="907.5" y="1045" width="2.3" height="15.0" fill="rgb(214,181,47)" rx="2" ry="2" />
<text  x="910.52" y="1055.5" ></text>
</g>
<g >
<title>__fget_light (66 samples, 0.01%)</title><rect x="285.7" y="805" width="0.2" height="15.0" fill="rgb(228,145,21)" rx="2" ry="2" />
<text  x="288.69" y="815.5" ></text>
</g>
<g >
<title>__wake_up_common (4,522 samples, 1.00%)</title><rect x="1119.1" y="965" width="11.7" height="15.0" fill="rgb(235,43,40)" rx="2" ry="2" />
<text  x="1122.10" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (40 samples, 0.01%)</title><rect x="783.7" y="1013" width="0.1" height="15.0" fill="rgb(239,8,29)" rx="2" ry="2" />
<text  x="786.73" y="1023.5" ></text>
</g>
<g >
<title>ktime_get (69 samples, 0.02%)</title><rect x="373.2" y="741" width="0.1" height="15.0" fill="rgb(239,16,47)" rx="2" ry="2" />
<text  x="376.16" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (176 samples, 0.04%)</title><rect x="578.6" y="917" width="0.5" height="15.0" fill="rgb(225,158,33)" rx="2" ry="2" />
<text  x="581.64" y="927.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (104 samples, 0.02%)</title><rect x="952.8" y="677" width="0.3" height="15.0" fill="rgb(218,30,10)" rx="2" ry="2" />
<text  x="955.81" y="687.5" ></text>
</g>
<g >
<title>__check_object_size (175 samples, 0.04%)</title><rect x="653.5" y="741" width="0.5" height="15.0" fill="rgb(208,9,4)" rx="2" ry="2" />
<text  x="656.51" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Rb_tree_impl (62 samples, 0.01%)</title><rect x="1144.7" y="1045" width="0.1" height="15.0" fill="rgb(210,38,16)" rx="2" ry="2" />
<text  x="1147.67" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt; &gt; (42 samples, 0.01%)</title><rect x="226.2" y="1093" width="0.1" height="15.0" fill="rgb(233,191,33)" rx="2" ry="2" />
<text  x="229.18" y="1103.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (75 samples, 0.02%)</title><rect x="198.7" y="229" width="0.2" height="15.0" fill="rgb(210,126,43)" rx="2" ry="2" />
<text  x="201.69" y="239.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (85 samples, 0.02%)</title><rect x="278.7" y="773" width="0.3" height="15.0" fill="rgb(249,131,11)" rx="2" ry="2" />
<text  x="281.75" y="783.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (40 samples, 0.01%)</title><rect x="963.3" y="773" width="0.1" height="15.0" fill="rgb(238,96,29)" rx="2" ry="2" />
<text  x="966.34" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (74 samples, 0.02%)</title><rect x="303.0" y="741" width="0.2" height="15.0" fill="rgb(250,80,45)" rx="2" ry="2" />
<text  x="306.04" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (144 samples, 0.03%)</title><rect x="291.9" y="821" width="0.3" height="15.0" fill="rgb(225,109,22)" rx="2" ry="2" />
<text  x="294.87" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_const_cast (64 samples, 0.01%)</title><rect x="780.7" y="997" width="0.2" height="15.0" fill="rgb(238,186,22)" rx="2" ry="2" />
<text  x="783.72" y="1007.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (235 samples, 0.05%)</title><rect x="694.4" y="917" width="0.6" height="15.0" fill="rgb(247,16,43)" rx="2" ry="2" />
<text  x="697.43" y="927.5" ></text>
</g>
<g >
<title>lock_sock_nested (91 samples, 0.02%)</title><rect x="240.5" y="821" width="0.2" height="15.0" fill="rgb(253,75,37)" rx="2" ry="2" />
<text  x="243.50" y="831.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (84 samples, 0.02%)</title><rect x="271.9" y="741" width="0.3" height="15.0" fill="rgb(239,211,30)" rx="2" ry="2" />
<text  x="274.94" y="751.5" ></text>
</g>
<g >
<title>std::bind&lt;void  (214 samples, 0.05%)</title><rect x="605.2" y="901" width="0.6" height="15.0" fill="rgb(249,55,19)" rx="2" ry="2" />
<text  x="608.25" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::~vector (134 samples, 0.03%)</title><rect x="226.1" y="1109" width="0.4" height="15.0" fill="rgb(224,17,41)" rx="2" ry="2" />
<text  x="229.10" y="1119.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr&lt;webserver::HttpHandler, void&gt; (337 samples, 0.07%)</title><rect x="1105.7" y="1093" width="0.9" height="15.0" fill="rgb(230,84,9)" rx="2" ry="2" />
<text  x="1108.74" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (88 samples, 0.02%)</title><rect x="743.0" y="1029" width="0.2" height="15.0" fill="rgb(248,159,47)" rx="2" ry="2" />
<text  x="746.01" y="1039.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (8,382 samples, 1.85%)</title><rect x="706.0" y="757" width="21.8" height="15.0" fill="rgb(238,182,21)" rx="2" ry="2" />
<text  x="709.01" y="767.5" >f..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (40 samples, 0.01%)</title><rect x="727.0" y="709" width="0.1" height="15.0" fill="rgb(214,99,54)" rx="2" ry="2" />
<text  x="730.01" y="719.5" ></text>
</g>
<g >
<title>task_work_run (17,835 samples, 3.93%)</title><rect x="174.9" y="645" width="46.3" height="15.0" fill="rgb(216,31,42)" rx="2" ry="2" />
<text  x="177.88" y="655.5" >task..</text>
</g>
<g >
<title>do_futex (1,464 samples, 0.32%)</title><rect x="1064.2" y="837" width="3.8" height="15.0" fill="rgb(214,38,11)" rx="2" ry="2" />
<text  x="1067.25" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (127 samples, 0.03%)</title><rect x="579.6" y="901" width="0.3" height="15.0" fill="rgb(241,89,51)" rx="2" ry="2" />
<text  x="582.56" y="911.5" ></text>
</g>
<g >
<title>__get_user_4 (100 samples, 0.02%)</title><rect x="1155.1" y="965" width="0.3" height="15.0" fill="rgb(243,55,6)" rx="2" ry="2" />
<text  x="1158.15" y="975.5" ></text>
</g>
<g >
<title>pty_write_room (78 samples, 0.02%)</title><rect x="557.7" y="581" width="0.2" height="15.0" fill="rgb(233,12,40)" rx="2" ry="2" />
<text  x="560.67" y="591.5" ></text>
</g>
<g >
<title>fmt::v8::detail::get_arg&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, int&gt; (120 samples, 0.03%)</title><rect x="518.3" y="789" width="0.4" height="15.0" fill="rgb(209,32,28)" rx="2" ry="2" />
<text  x="521.34" y="799.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (70 samples, 0.02%)</title><rect x="698.1" y="805" width="0.2" height="15.0" fill="rgb(230,188,54)" rx="2" ry="2" />
<text  x="701.13" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (65 samples, 0.01%)</title><rect x="270.9" y="837" width="0.2" height="15.0" fill="rgb(254,72,16)" rx="2" ry="2" />
<text  x="273.89" y="847.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (61 samples, 0.01%)</title><rect x="725.1" y="613" width="0.2" height="15.0" fill="rgb(248,54,16)" rx="2" ry="2" />
<text  x="728.11" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (236 samples, 0.05%)</title><rect x="789.0" y="1045" width="0.6" height="15.0" fill="rgb(254,133,15)" rx="2" ry="2" />
<text  x="791.99" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (527 samples, 0.12%)</title><rect x="696.2" y="837" width="1.4" height="15.0" fill="rgb(211,3,5)" rx="2" ry="2" />
<text  x="699.21" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (9,033 samples, 1.99%)</title><rect x="822.7" y="1013" width="23.4" height="15.0" fill="rgb(206,89,38)" rx="2" ry="2" />
<text  x="825.68" y="1023.5" >_..</text>
</g>
<g >
<title>__GI___libc_free (83 samples, 0.02%)</title><rect x="349.7" y="757" width="0.3" height="15.0" fill="rgb(209,163,17)" rx="2" ry="2" />
<text  x="352.74" y="767.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (136 samples, 0.03%)</title><rect x="1039.2" y="885" width="0.4" height="15.0" fill="rgb(211,130,46)" rx="2" ry="2" />
<text  x="1042.24" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (5,417 samples, 1.19%)</title><rect x="197.1" y="261" width="14.1" height="15.0" fill="rgb(235,26,11)" rx="2" ry="2" />
<text  x="200.12" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (125 samples, 0.03%)</title><rect x="135.3" y="1301" width="0.4" height="15.0" fill="rgb(232,32,35)" rx="2" ry="2" />
<text  x="138.33" y="1311.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (5,794 samples, 1.28%)</title><rect x="653.1" y="757" width="15.1" height="15.0" fill="rgb(238,60,32)" rx="2" ry="2" />
<text  x="656.14" y="767.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (44 samples, 0.01%)</title><rect x="391.3" y="661" width="0.1" height="15.0" fill="rgb(247,226,13)" rx="2" ry="2" />
<text  x="394.28" y="671.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (562 samples, 0.12%)</title><rect x="641.7" y="821" width="1.4" height="15.0" fill="rgb(241,65,25)" rx="2" ry="2" />
<text  x="644.68" y="831.5" ></text>
</g>
<g >
<title>lock_sock_nested (56 samples, 0.01%)</title><rect x="365.9" y="821" width="0.2" height="15.0" fill="rgb(233,50,41)" rx="2" ry="2" />
<text  x="368.93" y="831.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (119 samples, 0.03%)</title><rect x="1031.7" y="917" width="0.3" height="15.0" fill="rgb(233,168,0)" rx="2" ry="2" />
<text  x="1034.68" y="927.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (469 samples, 0.10%)</title><rect x="829.4" y="933" width="1.3" height="15.0" fill="rgb(239,1,20)" rx="2" ry="2" />
<text  x="832.45" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (51 samples, 0.01%)</title><rect x="1105.5" y="917" width="0.2" height="15.0" fill="rgb(252,196,40)" rx="2" ry="2" />
<text  x="1108.53" y="927.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (138 samples, 0.03%)</title><rect x="443.1" y="565" width="0.3" height="15.0" fill="rgb(233,200,54)" rx="2" ry="2" />
<text  x="446.08" y="575.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (164 samples, 0.04%)</title><rect x="647.7" y="885" width="0.5" height="15.0" fill="rgb(237,153,17)" rx="2" ry="2" />
<text  x="650.73" y="895.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (303 samples, 0.07%)</title><rect x="325.7" y="485" width="0.8" height="15.0" fill="rgb(221,154,24)" rx="2" ry="2" />
<text  x="328.71" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (115 samples, 0.03%)</title><rect x="131.7" y="1301" width="0.3" height="15.0" fill="rgb(209,163,15)" rx="2" ry="2" />
<text  x="134.70" y="1311.5" ></text>
</g>
<g >
<title>down_read (48 samples, 0.01%)</title><rect x="657.4" y="725" width="0.1" height="15.0" fill="rgb(216,135,7)" rx="2" ry="2" />
<text  x="660.39" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock (43 samples, 0.01%)</title><rect x="677.4" y="725" width="0.2" height="15.0" fill="rgb(241,130,15)" rx="2" ry="2" />
<text  x="680.45" y="735.5" ></text>
</g>
<g >
<title>fput_many (70 samples, 0.02%)</title><rect x="173.0" y="645" width="0.2" height="15.0" fill="rgb(250,145,27)" rx="2" ry="2" />
<text  x="176.05" y="655.5" ></text>
</g>
<g >
<title>psi_group_change (43 samples, 0.01%)</title><rect x="711.8" y="613" width="0.1" height="15.0" fill="rgb(211,204,33)" rx="2" ry="2" />
<text  x="714.79" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (67 samples, 0.01%)</title><rect x="941.1" y="693" width="0.2" height="15.0" fill="rgb(250,135,51)" rx="2" ry="2" />
<text  x="944.11" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::detail::equal2 (39 samples, 0.01%)</title><rect x="49.9" y="1301" width="0.1" height="15.0" fill="rgb(209,25,51)" rx="2" ry="2" />
<text  x="52.86" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,696 samples, 0.59%)</title><rect x="672.3" y="853" width="7.0" height="15.0" fill="rgb(211,53,43)" rx="2" ry="2" />
<text  x="675.32" y="863.5" ></text>
</g>
<g >
<title>net_rx_action (3,260 samples, 0.72%)</title><rect x="1092.9" y="597" width="8.5" height="15.0" fill="rgb(237,34,12)" rx="2" ry="2" />
<text  x="1095.93" y="607.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (75 samples, 0.02%)</title><rect x="428.5" y="373" width="0.2" height="15.0" fill="rgb(209,46,27)" rx="2" ry="2" />
<text  x="431.48" y="383.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (2,626 samples, 0.58%)</title><rect x="570.4" y="773" width="6.8" height="15.0" fill="rgb(233,152,10)" rx="2" ry="2" />
<text  x="573.38" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::deallocate (465 samples, 0.10%)</title><rect x="224.7" y="1029" width="1.3" height="15.0" fill="rgb(211,70,3)" rx="2" ry="2" />
<text  x="227.74" y="1039.5" ></text>
</g>
<g >
<title>webserver::HttpServer::acceptor (61,844 samples, 13.62%)</title><rect x="1018.8" y="1109" width="160.7" height="15.0" fill="rgb(205,15,17)" rx="2" ry="2" />
<text  x="1021.83" y="1119.5" >webserver::HttpServe..</text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (477 samples, 0.11%)</title><rect x="1023.0" y="949" width="1.2" height="15.0" fill="rgb(238,217,34)" rx="2" ry="2" />
<text  x="1025.99" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate (827 samples, 0.18%)</title><rect x="777.7" y="981" width="2.1" height="15.0" fill="rgb(253,31,49)" rx="2" ry="2" />
<text  x="780.66" y="991.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (39 samples, 0.01%)</title><rect x="842.6" y="917" width="0.1" height="15.0" fill="rgb(238,169,31)" rx="2" ry="2" />
<text  x="845.59" y="927.5" ></text>
</g>
<g >
<title>__tcp_close (7,641 samples, 1.68%)</title><rect x="1085.2" y="757" width="19.9" height="15.0" fill="rgb(227,60,34)" rx="2" ry="2" />
<text  x="1088.24" y="767.5" ></text>
</g>
<g >
<title>update_curr (96 samples, 0.02%)</title><rect x="329.8" y="421" width="0.2" height="15.0" fill="rgb(223,131,35)" rx="2" ry="2" />
<text  x="332.78" y="431.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (64 samples, 0.01%)</title><rect x="697.7" y="933" width="0.2" height="15.0" fill="rgb(218,79,0)" rx="2" ry="2" />
<text  x="700.69" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (121 samples, 0.03%)</title><rect x="580.9" y="853" width="0.3" height="15.0" fill="rgb(207,180,22)" rx="2" ry="2" />
<text  x="583.93" y="863.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (5,083 samples, 1.12%)</title><rect x="522.6" y="805" width="13.3" height="15.0" fill="rgb(208,117,1)" rx="2" ry="2" />
<text  x="525.65" y="815.5" ></text>
</g>
<g >
<title>futex_wait (1,556 samples, 0.34%)</title><rect x="958.5" y="773" width="4.1" height="15.0" fill="rgb(225,211,53)" rx="2" ry="2" />
<text  x="961.53" y="783.5" ></text>
</g>
<g >
<title>ttwu_do_activate (471 samples, 0.10%)</title><rect x="345.5" y="597" width="1.2" height="15.0" fill="rgb(244,128,4)" rx="2" ry="2" />
<text  x="348.47" y="607.5" ></text>
</g>
<g >
<title>link_path_walk (996 samples, 0.22%)</title><rect x="885.4" y="949" width="2.6" height="15.0" fill="rgb(245,123,2)" rx="2" ry="2" />
<text  x="888.44" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::registry::get_default_raw (106 samples, 0.02%)</title><rect x="59.6" y="1301" width="0.2" height="15.0" fill="rgb(239,204,0)" rx="2" ry="2" />
<text  x="62.55" y="1311.5" ></text>
</g>
<g >
<title>adjust_pointer&lt;void&gt; (44 samples, 0.01%)</title><rect x="976.4" y="933" width="0.1" height="15.0" fill="rgb(212,141,35)" rx="2" ry="2" />
<text  x="979.35" y="943.5" ></text>
</g>
<g >
<title>update_load_avg (155 samples, 0.03%)</title><rect x="330.0" y="421" width="0.4" height="15.0" fill="rgb(238,211,32)" rx="2" ry="2" />
<text  x="333.03" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (39 samples, 0.01%)</title><rect x="538.0" y="661" width="0.2" height="15.0" fill="rgb(242,88,36)" rx="2" ry="2" />
<text  x="541.05" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (83 samples, 0.02%)</title><rect x="930.3" y="837" width="0.2" height="15.0" fill="rgb(208,39,12)" rx="2" ry="2" />
<text  x="933.31" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::appender::back_insert_iterator (83 samples, 0.02%)</title><rect x="45.5" y="1301" width="0.2" height="15.0" fill="rgb(209,214,47)" rx="2" ry="2" />
<text  x="48.46" y="1311.5" ></text>
</g>
<g >
<title>__schedule (3,446 samples, 0.76%)</title><rect x="481.0" y="981" width="9.0" height="15.0" fill="rgb(244,158,47)" rx="2" ry="2" />
<text  x="484.03" y="991.5" ></text>
</g>
<g >
<title>security_inode_permission (223 samples, 0.05%)</title><rect x="859.4" y="933" width="0.5" height="15.0" fill="rgb(220,119,27)" rx="2" ry="2" />
<text  x="862.36" y="943.5" ></text>
</g>
<g >
<title>__memchr_avx2 (108 samples, 0.02%)</title><rect x="1022.2" y="965" width="0.3" height="15.0" fill="rgb(214,221,2)" rx="2" ry="2" />
<text  x="1025.25" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_work (131 samples, 0.03%)</title><rect x="1062.0" y="805" width="0.3" height="15.0" fill="rgb(243,151,33)" rx="2" ry="2" />
<text  x="1064.99" y="815.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (610 samples, 0.13%)</title><rect x="602.0" y="789" width="1.5" height="15.0" fill="rgb(210,129,46)" rx="2" ry="2" />
<text  x="604.95" y="799.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (5,947 samples, 1.31%)</title><rect x="1044.8" y="773" width="15.4" height="15.0" fill="rgb(230,74,6)" rx="2" ry="2" />
<text  x="1047.78" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (347 samples, 0.08%)</title><rect x="534.8" y="773" width="0.9" height="15.0" fill="rgb(224,193,33)" rx="2" ry="2" />
<text  x="537.84" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (469 samples, 0.10%)</title><rect x="395.3" y="597" width="1.2" height="15.0" fill="rgb(254,46,35)" rx="2" ry="2" />
<text  x="398.31" y="607.5" ></text>
</g>
<g >
<title>tcp_current_mss (432 samples, 0.10%)</title><rect x="458.2" y="789" width="1.1" height="15.0" fill="rgb(236,118,37)" rx="2" ry="2" />
<text  x="461.17" y="799.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (515 samples, 0.11%)</title><rect x="1085.8" y="661" width="1.4" height="15.0" fill="rgb(243,150,22)" rx="2" ry="2" />
<text  x="1088.84" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_free (46 samples, 0.01%)</title><rect x="259.2" y="837" width="0.1" height="15.0" fill="rgb(205,83,8)" rx="2" ry="2" />
<text  x="262.17" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,999 samples, 0.44%)</title><rect x="570.9" y="709" width="5.1" height="15.0" fill="rgb(215,28,42)" rx="2" ry="2" />
<text  x="573.85" y="719.5" ></text>
</g>
<g >
<title>_int_malloc (133 samples, 0.03%)</title><rect x="609.4" y="773" width="0.4" height="15.0" fill="rgb(254,73,52)" rx="2" ry="2" />
<text  x="612.43" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (83 samples, 0.02%)</title><rect x="191.8" y="453" width="0.2" height="15.0" fill="rgb(241,221,19)" rx="2" ry="2" />
<text  x="194.75" y="463.5" ></text>
</g>
<g >
<title>do_softirq (7,190 samples, 1.58%)</title><rect x="194.3" y="421" width="18.7" height="15.0" fill="rgb(213,134,39)" rx="2" ry="2" />
<text  x="197.27" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (10,236 samples, 2.25%)</title><rect x="1079.1" y="1061" width="26.6" height="15.0" fill="rgb(232,82,38)" rx="2" ry="2" />
<text  x="1082.15" y="1071.5" >s..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (87 samples, 0.02%)</title><rect x="203.2" y="117" width="0.2" height="15.0" fill="rgb(209,209,27)" rx="2" ry="2" />
<text  x="206.21" y="127.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4,621 samples, 1.02%)</title><rect x="199.0" y="229" width="12.0" height="15.0" fill="rgb(220,107,28)" rx="2" ry="2" />
<text  x="202.04" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check (42 samples, 0.01%)</title><rect x="789.7" y="1045" width="0.1" height="15.0" fill="rgb(226,77,9)" rx="2" ry="2" />
<text  x="792.69" y="1055.5" ></text>
</g>
<g >
<title>check_preempt_curr (295 samples, 0.06%)</title><rect x="436.2" y="389" width="0.8" height="15.0" fill="rgb(226,74,42)" rx="2" ry="2" />
<text  x="439.21" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (353 samples, 0.08%)</title><rect x="1040.1" y="933" width="1.0" height="15.0" fill="rgb(246,54,47)" rx="2" ry="2" />
<text  x="1043.14" y="943.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (259 samples, 0.06%)</title><rect x="810.5" y="869" width="0.7" height="15.0" fill="rgb(248,155,38)" rx="2" ry="2" />
<text  x="813.50" y="879.5" ></text>
</g>
<g >
<title>do_set_pte (540 samples, 0.12%)</title><rect x="901.6" y="837" width="1.4" height="15.0" fill="rgb(228,95,13)" rx="2" ry="2" />
<text  x="904.62" y="847.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (47 samples, 0.01%)</title><rect x="263.5" y="789" width="0.2" height="15.0" fill="rgb(222,208,3)" rx="2" ry="2" />
<text  x="266.53" y="799.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (104 samples, 0.02%)</title><rect x="198.4" y="229" width="0.3" height="15.0" fill="rgb(226,99,40)" rx="2" ry="2" />
<text  x="201.40" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (474 samples, 0.10%)</title><rect x="179.5" y="597" width="1.3" height="15.0" fill="rgb(207,45,32)" rx="2" ry="2" />
<text  x="182.53" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (117 samples, 0.03%)</title><rect x="929.7" y="901" width="0.3" height="15.0" fill="rgb(210,167,18)" rx="2" ry="2" />
<text  x="932.71" y="911.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (124 samples, 0.03%)</title><rect x="564.4" y="597" width="0.3" height="15.0" fill="rgb(234,218,26)" rx="2" ry="2" />
<text  x="567.38" y="607.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (42 samples, 0.01%)</title><rect x="492.7" y="1045" width="0.1" height="15.0" fill="rgb(216,210,38)" rx="2" ry="2" />
<text  x="495.71" y="1055.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (45 samples, 0.01%)</title><rect x="738.3" y="741" width="0.1" height="15.0" fill="rgb(233,124,33)" rx="2" ry="2" />
<text  x="741.27" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt;, true&gt;::_M_get (66 samples, 0.01%)</title><rect x="98.0" y="1301" width="0.2" height="15.0" fill="rgb(251,193,32)" rx="2" ry="2" />
<text  x="101.02" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (53 samples, 0.01%)</title><rect x="629.7" y="1045" width="0.1" height="15.0" fill="rgb(233,9,31)" rx="2" ry="2" />
<text  x="632.70" y="1055.5" ></text>
</g>
<g >
<title>std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt;::pair&lt;int&amp;, true&gt; (67 samples, 0.01%)</title><rect x="585.8" y="837" width="0.2" height="15.0" fill="rgb(229,151,37)" rx="2" ry="2" />
<text  x="588.82" y="847.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (56 samples, 0.01%)</title><rect x="210.3" y="181" width="0.2" height="15.0" fill="rgb(221,103,28)" rx="2" ry="2" />
<text  x="213.35" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (41 samples, 0.01%)</title><rect x="584.3" y="901" width="0.1" height="15.0" fill="rgb(234,107,38)" rx="2" ry="2" />
<text  x="587.34" y="911.5" ></text>
</g>
<g >
<title>__ip_local_out (3,459 samples, 0.76%)</title><rect x="378.4" y="725" width="9.0" height="15.0" fill="rgb(235,155,33)" rx="2" ry="2" />
<text  x="381.37" y="735.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (1,074 samples, 0.24%)</title><rect x="294.8" y="805" width="2.7" height="15.0" fill="rgb(254,191,53)" rx="2" ry="2" />
<text  x="297.75" y="815.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (78 samples, 0.02%)</title><rect x="1054.7" y="661" width="0.2" height="15.0" fill="rgb(241,103,19)" rx="2" ry="2" />
<text  x="1057.74" y="671.5" ></text>
</g>
<g >
<title>enqueue_task (2,823 samples, 0.62%)</title><rect x="428.8" y="389" width="7.3" height="15.0" fill="rgb(223,136,49)" rx="2" ry="2" />
<text  x="431.80" y="399.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (64 samples, 0.01%)</title><rect x="1099.7" y="293" width="0.1" height="15.0" fill="rgb(230,96,35)" rx="2" ry="2" />
<text  x="1102.68" y="303.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (143 samples, 0.03%)</title><rect x="355.9" y="789" width="0.4" height="15.0" fill="rgb(252,224,54)" rx="2" ry="2" />
<text  x="358.95" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,102 samples, 0.24%)</title><rect x="870.7" y="1045" width="2.9" height="15.0" fill="rgb(247,98,14)" rx="2" ry="2" />
<text  x="873.70" y="1055.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, webserver::EventLoop*&amp;&gt; (1,224 samples, 0.27%)</title><rect x="1141.2" y="1029" width="3.2" height="15.0" fill="rgb(223,56,27)" rx="2" ry="2" />
<text  x="1144.21" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (84 samples, 0.02%)</title><rect x="531.9" y="725" width="0.3" height="15.0" fill="rgb(224,27,47)" rx="2" ry="2" />
<text  x="534.95" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (63 samples, 0.01%)</title><rect x="513.2" y="901" width="0.2" height="15.0" fill="rgb(240,104,24)" rx="2" ry="2" />
<text  x="516.23" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_free (440 samples, 0.10%)</title><rect x="245.8" y="805" width="1.2" height="15.0" fill="rgb(225,228,18)" rx="2" ry="2" />
<text  x="248.84" y="815.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,240 samples, 0.27%)</title><rect x="774.1" y="965" width="3.3" height="15.0" fill="rgb(233,132,27)" rx="2" ry="2" />
<text  x="777.15" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (720 samples, 0.16%)</title><rect x="559.1" y="661" width="1.9" height="15.0" fill="rgb(242,54,40)" rx="2" ry="2" />
<text  x="562.15" y="671.5" ></text>
</g>
<g >
<title>psi_flags_change (47 samples, 0.01%)</title><rect x="724.3" y="613" width="0.1" height="15.0" fill="rgb(206,128,0)" rx="2" ry="2" />
<text  x="727.30" y="623.5" ></text>
</g>
<g >
<title>raw_local_deliver (44 samples, 0.01%)</title><rect x="197.0" y="261" width="0.1" height="15.0" fill="rgb(241,2,41)" rx="2" ry="2" />
<text  x="200.01" y="271.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (2,794 samples, 0.62%)</title><rect x="285.1" y="901" width="7.3" height="15.0" fill="rgb(207,135,50)" rx="2" ry="2" />
<text  x="288.09" y="911.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (43 samples, 0.01%)</title><rect x="1037.2" y="917" width="0.1" height="15.0" fill="rgb(237,14,31)" rx="2" ry="2" />
<text  x="1040.23" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (701 samples, 0.15%)</title><rect x="924.9" y="837" width="1.9" height="15.0" fill="rgb(254,194,34)" rx="2" ry="2" />
<text  x="927.94" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (39 samples, 0.01%)</title><rect x="751.0" y="1013" width="0.1" height="15.0" fill="rgb(249,41,36)" rx="2" ry="2" />
<text  x="754.04" y="1023.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (87 samples, 0.02%)</title><rect x="938.5" y="709" width="0.3" height="15.0" fill="rgb(226,188,32)" rx="2" ry="2" />
<text  x="941.54" y="719.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (310 samples, 0.07%)</title><rect x="586.2" y="853" width="0.8" height="15.0" fill="rgb(249,143,54)" rx="2" ry="2" />
<text  x="589.16" y="863.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (513 samples, 0.11%)</title><rect x="265.8" y="821" width="1.4" height="15.0" fill="rgb(216,126,10)" rx="2" ry="2" />
<text  x="268.84" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (65 samples, 0.01%)</title><rect x="40.6" y="1301" width="0.2" height="15.0" fill="rgb(234,129,12)" rx="2" ry="2" />
<text  x="43.65" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char const  (21,233 samples, 4.68%)</title><rect x="914.4" y="997" width="55.2" height="15.0" fill="rgb(226,195,54)" rx="2" ry="2" />
<text  x="917.44" y="1007.5" >spdlo..</text>
</g>
<g >
<title>path_openat (4,621 samples, 1.02%)</title><rect x="877.2" y="965" width="12.0" height="15.0" fill="rgb(216,24,50)" rx="2" ry="2" />
<text  x="880.19" y="975.5" ></text>
</g>
<g >
<title>available_idle_cpu (124 samples, 0.03%)</title><rect x="1123.3" y="853" width="0.4" height="15.0" fill="rgb(233,82,11)" rx="2" ry="2" />
<text  x="1126.34" y="863.5" ></text>
</g>
<g >
<title>process_backlog (6,676 samples, 1.47%)</title><rect x="195.5" y="357" width="17.4" height="15.0" fill="rgb(250,184,38)" rx="2" ry="2" />
<text  x="198.52" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (87 samples, 0.02%)</title><rect x="20.0" y="1301" width="0.2" height="15.0" fill="rgb(229,181,8)" rx="2" ry="2" />
<text  x="22.98" y="1311.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (379 samples, 0.08%)</title><rect x="1091.6" y="645" width="1.0" height="15.0" fill="rgb(206,210,54)" rx="2" ry="2" />
<text  x="1094.61" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (48 samples, 0.01%)</title><rect x="618.7" y="853" width="0.1" height="15.0" fill="rgb(230,200,25)" rx="2" ry="2" />
<text  x="621.72" y="863.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_get_Tp_allocator (120 samples, 0.03%)</title><rect x="80.7" y="1301" width="0.3" height="15.0" fill="rgb(240,130,5)" rx="2" ry="2" />
<text  x="83.68" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (320 samples, 0.07%)</title><rect x="1078.1" y="1029" width="0.9" height="15.0" fill="rgb(224,190,4)" rx="2" ry="2" />
<text  x="1081.13" y="1039.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (274 samples, 0.06%)</title><rect x="312.3" y="725" width="0.7" height="15.0" fill="rgb(221,111,28)" rx="2" ry="2" />
<text  x="315.27" y="735.5" ></text>
</g>
<g >
<title>ip_local_out (68 samples, 0.01%)</title><rect x="1085.9" y="629" width="0.2" height="15.0" fill="rgb(229,45,37)" rx="2" ry="2" />
<text  x="1088.91" y="639.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (155 samples, 0.03%)</title><rect x="597.0" y="677" width="0.5" height="15.0" fill="rgb(206,60,39)" rx="2" ry="2" />
<text  x="600.05" y="687.5" ></text>
</g>
<g >
<title>__schedule (39 samples, 0.01%)</title><rect x="656.0" y="677" width="0.1" height="15.0" fill="rgb(248,26,42)" rx="2" ry="2" />
<text  x="659.04" y="687.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (129 samples, 0.03%)</title><rect x="404.4" y="501" width="0.3" height="15.0" fill="rgb(236,152,34)" rx="2" ry="2" />
<text  x="407.38" y="511.5" ></text>
</g>
<g >
<title>operator new (207 samples, 0.05%)</title><rect x="1076.9" y="1045" width="0.6" height="15.0" fill="rgb(239,186,31)" rx="2" ry="2" />
<text  x="1079.93" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (153 samples, 0.03%)</title><rect x="1107.5" y="949" width="0.4" height="15.0" fill="rgb(236,19,54)" rx="2" ry="2" />
<text  x="1110.46" y="959.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (151 samples, 0.03%)</title><rect x="284.7" y="901" width="0.3" height="15.0" fill="rgb(231,32,18)" rx="2" ry="2" />
<text  x="287.66" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::function&lt;void  (123 samples, 0.03%)</title><rect x="510.8" y="1093" width="0.3" height="15.0" fill="rgb(216,157,17)" rx="2" ry="2" />
<text  x="513.79" y="1103.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (261 samples, 0.06%)</title><rect x="951.4" y="597" width="0.7" height="15.0" fill="rgb(218,29,27)" rx="2" ry="2" />
<text  x="954.37" y="607.5" ></text>
</g>
<g >
<title>path_init (88 samples, 0.02%)</title><rect x="888.6" y="949" width="0.3" height="15.0" fill="rgb(253,146,30)" rx="2" ry="2" />
<text  x="891.63" y="959.5" ></text>
</g>
<g >
<title>tcp_add_backlog (186 samples, 0.04%)</title><rect x="404.9" y="517" width="0.5" height="15.0" fill="rgb(250,62,26)" rx="2" ry="2" />
<text  x="407.87" y="527.5" ></text>
</g>
<g >
<title>__fput (17,694 samples, 3.90%)</title><rect x="175.1" y="629" width="45.9" height="15.0" fill="rgb(216,96,9)" rx="2" ry="2" />
<text  x="178.07" y="639.5" >__fput</text>
</g>
<g >
<title>tty_paranoia_check (44 samples, 0.01%)</title><rect x="954.1" y="709" width="0.1" height="15.0" fill="rgb(219,51,2)" rx="2" ry="2" />
<text  x="957.08" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (54 samples, 0.01%)</title><rect x="347.6" y="773" width="0.1" height="15.0" fill="rgb(209,81,51)" rx="2" ry="2" />
<text  x="350.60" y="783.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1,361 samples, 0.30%)</title><rect x="1096.6" y="373" width="3.5" height="15.0" fill="rgb(246,85,37)" rx="2" ry="2" />
<text  x="1099.58" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (72 samples, 0.02%)</title><rect x="811.2" y="869" width="0.2" height="15.0" fill="rgb(222,143,21)" rx="2" ry="2" />
<text  x="814.22" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (46 samples, 0.01%)</title><rect x="172.6" y="629" width="0.2" height="15.0" fill="rgb(206,211,36)" rx="2" ry="2" />
<text  x="175.64" y="639.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr (53 samples, 0.01%)</title><rect x="1114.7" y="869" width="0.1" height="15.0" fill="rgb(231,199,33)" rx="2" ry="2" />
<text  x="1117.68" y="879.5" ></text>
</g>
<g >
<title>d_flags_for_inode (42 samples, 0.01%)</title><rect x="1165.7" y="917" width="0.1" height="15.0" fill="rgb(214,107,51)" rx="2" ry="2" />
<text  x="1168.70" y="927.5" ></text>
</g>
<g >
<title>wake_up_q (1,308 samples, 0.29%)</title><rect x="1070.4" y="821" width="3.4" height="15.0" fill="rgb(235,98,12)" rx="2" ry="2" />
<text  x="1073.44" y="831.5" ></text>
</g>
<g >
<title>__strlen_avx2 (219 samples, 0.05%)</title><rect x="761.7" y="1029" width="0.5" height="15.0" fill="rgb(208,106,51)" rx="2" ry="2" />
<text  x="764.67" y="1039.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::operator[] (262 samples, 0.06%)</title><rect x="631.7" y="1093" width="0.6" height="15.0" fill="rgb(244,5,51)" rx="2" ry="2" />
<text  x="634.65" y="1103.5" ></text>
</g>
<g >
<title>sched_clock_cpu (39 samples, 0.01%)</title><rect x="1124.0" y="853" width="0.1" height="15.0" fill="rgb(237,132,1)" rx="2" ry="2" />
<text  x="1127.01" y="863.5" ></text>
</g>
<g >
<title>inet_release (7,844 samples, 1.73%)</title><rect x="1084.9" y="789" width="20.4" height="15.0" fill="rgb(254,221,36)" rx="2" ry="2" />
<text  x="1087.88" y="799.5" ></text>
</g>
<g >
<title>switch_fpu_return (58 samples, 0.01%)</title><rect x="1136.3" y="981" width="0.2" height="15.0" fill="rgb(216,72,21)" rx="2" ry="2" />
<text  x="1139.30" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (72 samples, 0.02%)</title><rect x="1170.8" y="1045" width="0.2" height="15.0" fill="rgb(235,33,13)" rx="2" ry="2" />
<text  x="1173.81" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (189 samples, 0.04%)</title><rect x="587.6" y="757" width="0.5" height="15.0" fill="rgb(249,82,28)" rx="2" ry="2" />
<text  x="590.61" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (41 samples, 0.01%)</title><rect x="584.5" y="901" width="0.1" height="15.0" fill="rgb(205,33,3)" rx="2" ry="2" />
<text  x="587.46" y="911.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (1,029 samples, 0.23%)</title><rect x="411.0" y="405" width="2.7" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="414.02" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (576 samples, 0.13%)</title><rect x="1166.8" y="1029" width="1.5" height="15.0" fill="rgb(225,3,3)" rx="2" ry="2" />
<text  x="1169.80" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (61 samples, 0.01%)</title><rect x="1028.6" y="965" width="0.2" height="15.0" fill="rgb(249,106,27)" rx="2" ry="2" />
<text  x="1031.63" y="975.5" ></text>
</g>
<g >
<title>__update_load_avg_se (62 samples, 0.01%)</title><rect x="950.0" y="549" width="0.2" height="15.0" fill="rgb(245,163,27)" rx="2" ry="2" />
<text  x="953.01" y="559.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (587 samples, 0.13%)</title><rect x="527.7" y="677" width="1.6" height="15.0" fill="rgb(227,223,43)" rx="2" ry="2" />
<text  x="530.74" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (47 samples, 0.01%)</title><rect x="771.5" y="1029" width="0.1" height="15.0" fill="rgb(233,210,8)" rx="2" ry="2" />
<text  x="774.49" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (1,170 samples, 0.26%)</title><rect x="587.0" y="821" width="3.0" height="15.0" fill="rgb(231,185,9)" rx="2" ry="2" />
<text  x="590.00" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (189 samples, 0.04%)</title><rect x="630.6" y="1029" width="0.5" height="15.0" fill="rgb(209,80,40)" rx="2" ry="2" />
<text  x="633.63" y="1039.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (42 samples, 0.01%)</title><rect x="130.1" y="1301" width="0.1" height="15.0" fill="rgb(215,192,31)" rx="2" ry="2" />
<text  x="133.13" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (45 samples, 0.01%)</title><rect x="1133.7" y="869" width="0.1" height="15.0" fill="rgb(211,51,40)" rx="2" ry="2" />
<text  x="1136.72" y="879.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (449 samples, 0.10%)</title><rect x="385.0" y="661" width="1.1" height="15.0" fill="rgb(216,228,14)" rx="2" ry="2" />
<text  x="387.97" y="671.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (136 samples, 0.03%)</title><rect x="969.3" y="965" width="0.3" height="15.0" fill="rgb(246,210,46)" rx="2" ry="2" />
<text  x="972.26" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;::_M_addr (65 samples, 0.01%)</title><rect x="36.7" y="1301" width="0.2" height="15.0" fill="rgb(235,91,1)" rx="2" ry="2" />
<text  x="39.71" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (199 samples, 0.04%)</title><rect x="1131.0" y="965" width="0.6" height="15.0" fill="rgb(236,37,21)" rx="2" ry="2" />
<text  x="1134.05" y="975.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (66 samples, 0.01%)</title><rect x="976.7" y="965" width="0.1" height="15.0" fill="rgb(250,87,0)" rx="2" ry="2" />
<text  x="979.65" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (186 samples, 0.04%)</title><rect x="55.7" y="1301" width="0.4" height="15.0" fill="rgb(236,229,20)" rx="2" ry="2" />
<text  x="58.66" y="1311.5" ></text>
</g>
<g >
<title>__fget_files (169 samples, 0.04%)</title><rect x="538.5" y="613" width="0.4" height="15.0" fill="rgb(248,147,32)" rx="2" ry="2" />
<text  x="541.49" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_get_Tp_allocator (42 samples, 0.01%)</title><rect x="509.4" y="1061" width="0.1" height="15.0" fill="rgb(212,38,14)" rx="2" ry="2" />
<text  x="512.39" y="1071.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (507 samples, 0.11%)</title><rect x="985.2" y="981" width="1.3" height="15.0" fill="rgb(207,6,13)" rx="2" ry="2" />
<text  x="988.20" y="991.5" ></text>
</g>
<g >
<title>sched_clock_cpu (39 samples, 0.01%)</title><rect x="552.4" y="501" width="0.1" height="15.0" fill="rgb(242,124,50)" rx="2" ry="2" />
<text  x="555.42" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (103 samples, 0.02%)</title><rect x="647.8" y="773" width="0.3" height="15.0" fill="rgb(228,22,6)" rx="2" ry="2" />
<text  x="650.84" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (57 samples, 0.01%)</title><rect x="1057.8" y="613" width="0.1" height="15.0" fill="rgb(235,82,13)" rx="2" ry="2" />
<text  x="1060.77" y="623.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (49 samples, 0.01%)</title><rect x="1116.2" y="1045" width="0.1" height="15.0" fill="rgb(224,139,17)" rx="2" ry="2" />
<text  x="1119.19" y="1055.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r13 (59 samples, 0.01%)</title><rect x="883.6" y="933" width="0.1" height="15.0" fill="rgb(223,132,47)" rx="2" ry="2" />
<text  x="886.57" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (287 samples, 0.06%)</title><rect x="325.8" y="469" width="0.7" height="15.0" fill="rgb(222,40,53)" rx="2" ry="2" />
<text  x="328.75" y="479.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (300 samples, 0.07%)</title><rect x="665.6" y="629" width="0.8" height="15.0" fill="rgb(207,0,33)" rx="2" ry="2" />
<text  x="668.64" y="639.5" ></text>
</g>
<g >
<title>_IO_old_init (68 samples, 0.01%)</title><rect x="612.5" y="837" width="0.2" height="15.0" fill="rgb(252,178,29)" rx="2" ry="2" />
<text  x="615.48" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (536 samples, 0.12%)</title><rect x="516.8" y="821" width="1.4" height="15.0" fill="rgb(245,187,3)" rx="2" ry="2" />
<text  x="519.85" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (42 samples, 0.01%)</title><rect x="260.7" y="869" width="0.2" height="15.0" fill="rgb(219,36,10)" rx="2" ry="2" />
<text  x="263.75" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,458 samples, 0.32%)</title><rect x="1106.7" y="1061" width="3.8" height="15.0" fill="rgb(208,164,54)" rx="2" ry="2" />
<text  x="1109.66" y="1071.5" ></text>
</g>
<g >
<title>select_task_rq_fair (677 samples, 0.15%)</title><rect x="1053.3" y="677" width="1.7" height="15.0" fill="rgb(210,122,21)" rx="2" ry="2" />
<text  x="1056.29" y="687.5" ></text>
</g>
<g >
<title>new_do_write (7,953 samples, 1.75%)</title><rect x="1042.2" y="901" width="20.6" height="15.0" fill="rgb(241,179,3)" rx="2" ry="2" />
<text  x="1045.18" y="911.5" ></text>
</g>
<g >
<title>rb_erase (40 samples, 0.01%)</title><rect x="486.8" y="933" width="0.1" height="15.0" fill="rgb(212,179,37)" rx="2" ry="2" />
<text  x="489.85" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (181 samples, 0.04%)</title><rect x="788.5" y="1029" width="0.5" height="15.0" fill="rgb(242,72,13)" rx="2" ry="2" />
<text  x="791.49" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (150 samples, 0.03%)</title><rect x="791.0" y="981" width="0.3" height="15.0" fill="rgb(250,183,51)" rx="2" ry="2" />
<text  x="793.95" y="991.5" ></text>
</g>
<g >
<title>nf_hook_slow (222 samples, 0.05%)</title><rect x="212.2" y="309" width="0.5" height="15.0" fill="rgb(213,85,23)" rx="2" ry="2" />
<text  x="215.16" y="319.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (44 samples, 0.01%)</title><rect x="670.3" y="805" width="0.1" height="15.0" fill="rgb(235,226,46)" rx="2" ry="2" />
<text  x="673.26" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::function&lt;void  (39 samples, 0.01%)</title><rect x="14.0" y="1301" width="0.1" height="15.0" fill="rgb(253,80,37)" rx="2" ry="2" />
<text  x="16.96" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (73 samples, 0.02%)</title><rect x="643.8" y="837" width="0.1" height="15.0" fill="rgb(221,101,19)" rx="2" ry="2" />
<text  x="646.76" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (361 samples, 0.08%)</title><rect x="549.4" y="501" width="1.0" height="15.0" fill="rgb(227,142,28)" rx="2" ry="2" />
<text  x="552.43" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (120 samples, 0.03%)</title><rect x="989.0" y="965" width="0.3" height="15.0" fill="rgb(209,127,37)" rx="2" ry="2" />
<text  x="992.03" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (84 samples, 0.02%)</title><rect x="775.6" y="853" width="0.2" height="15.0" fill="rgb(234,182,24)" rx="2" ry="2" />
<text  x="778.62" y="863.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (46 samples, 0.01%)</title><rect x="755.5" y="949" width="0.1" height="15.0" fill="rgb(237,63,29)" rx="2" ry="2" />
<text  x="758.52" y="959.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (81 samples, 0.02%)</title><rect x="340.5" y="549" width="0.2" height="15.0" fill="rgb(205,115,45)" rx="2" ry="2" />
<text  x="343.46" y="559.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (41 samples, 0.01%)</title><rect x="646.0" y="805" width="0.1" height="15.0" fill="rgb(242,122,6)" rx="2" ry="2" />
<text  x="649.01" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (498 samples, 0.11%)</title><rect x="1107.4" y="965" width="1.3" height="15.0" fill="rgb(219,121,45)" rx="2" ry="2" />
<text  x="1110.40" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (144 samples, 0.03%)</title><rect x="291.9" y="853" width="0.3" height="15.0" fill="rgb(241,219,4)" rx="2" ry="2" />
<text  x="294.87" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (93 samples, 0.02%)</title><rect x="84.7" y="1301" width="0.3" height="15.0" fill="rgb(244,176,14)" rx="2" ry="2" />
<text  x="87.73" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (411 samples, 0.09%)</title><rect x="626.4" y="1061" width="1.1" height="15.0" fill="rgb(205,192,28)" rx="2" ry="2" />
<text  x="629.45" y="1071.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (90,353 samples, 19.89%)</title><rect x="228.5" y="1013" width="234.8" height="15.0" fill="rgb(252,210,18)" rx="2" ry="2" />
<text  x="231.52" y="1023.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (248 samples, 0.05%)</title><rect x="909.8" y="1061" width="0.7" height="15.0" fill="rgb(216,53,36)" rx="2" ry="2" />
<text  x="912.83" y="1071.5" ></text>
</g>
<g >
<title>mod_objcg_state (44 samples, 0.01%)</title><rect x="827.1" y="933" width="0.1" height="15.0" fill="rgb(210,101,16)" rx="2" ry="2" />
<text  x="830.08" y="943.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (40 samples, 0.01%)</title><rect x="766.3" y="981" width="0.1" height="15.0" fill="rgb(208,59,43)" rx="2" ry="2" />
<text  x="769.30" y="991.5" ></text>
</g>
<g >
<title>select_task_rq_fair (241 samples, 0.05%)</title><rect x="1071.5" y="789" width="0.6" height="15.0" fill="rgb(252,15,19)" rx="2" ry="2" />
<text  x="1074.48" y="799.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (1,179 samples, 0.26%)</title><rect x="278.0" y="853" width="3.1" height="15.0" fill="rgb(218,222,17)" rx="2" ry="2" />
<text  x="281.01" y="863.5" ></text>
</g>
<g >
<title>fsnotify (64 samples, 0.01%)</title><rect x="233.6" y="853" width="0.2" height="15.0" fill="rgb(251,3,19)" rx="2" ry="2" />
<text  x="236.59" y="863.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,612 samples, 0.35%)</title><rect x="745.6" y="949" width="4.2" height="15.0" fill="rgb(230,191,53)" rx="2" ry="2" />
<text  x="748.60" y="959.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (41 samples, 0.01%)</title><rect x="668.5" y="757" width="0.1" height="15.0" fill="rgb(223,148,9)" rx="2" ry="2" />
<text  x="671.45" y="767.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (128 samples, 0.03%)</title><rect x="647.8" y="805" width="0.3" height="15.0" fill="rgb(218,73,40)" rx="2" ry="2" />
<text  x="650.81" y="815.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,808 samples, 0.40%)</title><rect x="1124.9" y="869" width="4.7" height="15.0" fill="rgb(243,63,6)" rx="2" ry="2" />
<text  x="1127.86" y="879.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1141" width="160.8" height="15.0" fill="rgb(225,215,23)" rx="2" ry="2" />
<text  x="1021.74" y="1151.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>enqueue_to_backlog (105 samples, 0.02%)</title><rect x="193.3" y="357" width="0.3" height="15.0" fill="rgb(227,219,2)" rx="2" ry="2" />
<text  x="196.30" y="367.5" ></text>
</g>
<g >
<title>pty_write (3,600 samples, 0.79%)</title><rect x="658.0" y="725" width="9.3" height="15.0" fill="rgb(244,71,11)" rx="2" ry="2" />
<text  x="660.96" y="735.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (435 samples, 0.10%)</title><rect x="568.8" y="693" width="1.1" height="15.0" fill="rgb(243,16,18)" rx="2" ry="2" />
<text  x="571.80" y="703.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (21,208 samples, 4.67%)</title><rect x="1020.5" y="1045" width="55.1" height="15.0" fill="rgb(228,3,46)" rx="2" ry="2" />
<text  x="1023.51" y="1055.5" >spdlo..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (288 samples, 0.06%)</title><rect x="610.4" y="853" width="0.8" height="15.0" fill="rgb(232,130,0)" rx="2" ry="2" />
<text  x="613.42" y="863.5" ></text>
</g>
<g >
<title>eth_type_trans (108 samples, 0.02%)</title><rect x="390.3" y="661" width="0.2" height="15.0" fill="rgb(249,142,3)" rx="2" ry="2" />
<text  x="393.26" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (124 samples, 0.03%)</title><rect x="775.9" y="853" width="0.3" height="15.0" fill="rgb(233,95,14)" rx="2" ry="2" />
<text  x="778.86" y="863.5" ></text>
</g>
<g >
<title>futex_wait (2,094 samples, 0.46%)</title><rect x="672.6" y="805" width="5.5" height="15.0" fill="rgb(227,7,15)" rx="2" ry="2" />
<text  x="675.63" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (2,118 samples, 0.47%)</title><rect x="984.8" y="1029" width="5.5" height="15.0" fill="rgb(254,57,49)" rx="2" ry="2" />
<text  x="987.84" y="1039.5" ></text>
</g>
<g >
<title>spdlog::details::registry::get_default_raw (58 samples, 0.01%)</title><rect x="160.8" y="1077" width="0.1" height="15.0" fill="rgb(213,25,23)" rx="2" ry="2" />
<text  x="163.80" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (51 samples, 0.01%)</title><rect x="931.8" y="901" width="0.2" height="15.0" fill="rgb(226,140,21)" rx="2" ry="2" />
<text  x="934.84" y="911.5" ></text>
</g>
<g >
<title>mutex_unlock (66 samples, 0.01%)</title><rect x="475.4" y="1013" width="0.2" height="15.0" fill="rgb(213,42,21)" rx="2" ry="2" />
<text  x="478.38" y="1023.5" ></text>
</g>
<g >
<title>lock_sock_nested (59 samples, 0.01%)</title><rect x="220.5" y="549" width="0.2" height="15.0" fill="rgb(237,145,38)" rx="2" ry="2" />
<text  x="223.53" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (42 samples, 0.01%)</title><rect x="784.5" y="965" width="0.1" height="15.0" fill="rgb(240,200,30)" rx="2" ry="2" />
<text  x="787.45" y="975.5" ></text>
</g>
<g >
<title>is_cpu_allowed (83 samples, 0.02%)</title><rect x="1052.2" y="677" width="0.2" height="15.0" fill="rgb(243,210,52)" rx="2" ry="2" />
<text  x="1055.23" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (208 samples, 0.05%)</title><rect x="485.4" y="949" width="0.5" height="15.0" fill="rgb(217,116,48)" rx="2" ry="2" />
<text  x="488.40" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (98 samples, 0.02%)</title><rect x="923.3" y="853" width="0.3" height="15.0" fill="rgb(245,101,22)" rx="2" ry="2" />
<text  x="926.31" y="863.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (168 samples, 0.04%)</title><rect x="81.5" y="1301" width="0.4" height="15.0" fill="rgb(213,30,47)" rx="2" ry="2" />
<text  x="84.51" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Insert&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, void&gt; (1,515 samples, 0.33%)</title><rect x="579.9" y="917" width="3.9" height="15.0" fill="rgb(219,144,4)" rx="2" ry="2" />
<text  x="582.91" y="927.5" ></text>
</g>
<g >
<title>__fdget_pos (187 samples, 0.04%)</title><rect x="651.8" y="789" width="0.5" height="15.0" fill="rgb(225,126,38)" rx="2" ry="2" />
<text  x="654.77" y="799.5" ></text>
</g>
<g >
<title>pick_next_entity (68 samples, 0.01%)</title><rect x="486.5" y="949" width="0.1" height="15.0" fill="rgb(236,120,14)" rx="2" ry="2" />
<text  x="489.46" y="959.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::set_url (252 samples, 0.06%)</title><rect x="792.8" y="1061" width="0.6" height="15.0" fill="rgb(236,38,31)" rx="2" ry="2" />
<text  x="795.76" y="1071.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1,440 samples, 0.32%)</title><rect x="1106.7" y="1045" width="3.7" height="15.0" fill="rgb(237,3,25)" rx="2" ry="2" />
<text  x="1109.71" y="1055.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (149 samples, 0.03%)</title><rect x="673.4" y="741" width="0.4" height="15.0" fill="rgb(224,226,9)" rx="2" ry="2" />
<text  x="676.44" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,746 samples, 0.38%)</title><rect x="751.2" y="997" width="4.5" height="15.0" fill="rgb(232,169,21)" rx="2" ry="2" />
<text  x="754.17" y="1007.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (226 samples, 0.05%)</title><rect x="831.8" y="901" width="0.6" height="15.0" fill="rgb(230,126,24)" rx="2" ry="2" />
<text  x="834.76" y="911.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (78 samples, 0.02%)</title><rect x="759.8" y="1045" width="0.2" height="15.0" fill="rgb(226,114,25)" rx="2" ry="2" />
<text  x="762.77" y="1055.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (59 samples, 0.01%)</title><rect x="666.3" y="613" width="0.1" height="15.0" fill="rgb(233,223,1)" rx="2" ry="2" />
<text  x="669.27" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1205" width="160.8" height="15.0" fill="rgb(225,134,12)" rx="2" ry="2" />
<text  x="1021.74" y="1215.5" >std::__invoke_r&lt;void..</text>
</g>
<g >
<title>do_syscall_64 (1,466 samples, 0.32%)</title><rect x="964.3" y="837" width="3.8" height="15.0" fill="rgb(247,57,7)" rx="2" ry="2" />
<text  x="967.28" y="847.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (45 samples, 0.01%)</title><rect x="951.9" y="581" width="0.2" height="15.0" fill="rgb(225,30,39)" rx="2" ry="2" />
<text  x="954.94" y="591.5" ></text>
</g>
<g >
<title>__do_munmap (8,443 samples, 1.86%)</title><rect x="823.0" y="981" width="21.9" height="15.0" fill="rgb(224,197,33)" rx="2" ry="2" />
<text  x="825.97" y="991.5" >_..</text>
</g>
<g >
<title>path_put (65 samples, 0.01%)</title><rect x="864.1" y="981" width="0.1" height="15.0" fill="rgb(240,0,33)" rx="2" ry="2" />
<text  x="867.06" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (712 samples, 0.16%)</title><rect x="1134.9" y="1013" width="1.9" height="15.0" fill="rgb(246,163,54)" rx="2" ry="2" />
<text  x="1137.93" y="1023.5" ></text>
</g>
<g >
<title>set_task_cpu (50 samples, 0.01%)</title><rect x="205.3" y="117" width="0.2" height="15.0" fill="rgb(222,200,52)" rx="2" ry="2" />
<text  x="208.32" y="127.5" ></text>
</g>
<g >
<title>_int_free (228 samples, 0.05%)</title><rect x="44.8" y="1301" width="0.5" height="15.0" fill="rgb(205,72,53)" rx="2" ry="2" />
<text  x="47.75" y="1311.5" ></text>
</g>
<g >
<title>__schedule (77 samples, 0.02%)</title><rect x="941.7" y="613" width="0.2" height="15.0" fill="rgb(253,9,7)" rx="2" ry="2" />
<text  x="944.75" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_free (151 samples, 0.03%)</title><rect x="910.8" y="965" width="0.4" height="15.0" fill="rgb(254,219,46)" rx="2" ry="2" />
<text  x="913.78" y="975.5" ></text>
</g>
<g >
<title>__wake_up_common (3,876 samples, 0.85%)</title><rect x="1120.3" y="917" width="10.1" height="15.0" fill="rgb(240,122,5)" rx="2" ry="2" />
<text  x="1123.31" y="927.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (41 samples, 0.01%)</title><rect x="906.0" y="901" width="0.1" height="15.0" fill="rgb(222,64,35)" rx="2" ry="2" />
<text  x="908.95" y="911.5" ></text>
</g>
<g >
<title>__schedule (106 samples, 0.02%)</title><rect x="656.6" y="645" width="0.2" height="15.0" fill="rgb(242,125,29)" rx="2" ry="2" />
<text  x="659.55" y="655.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (66 samples, 0.01%)</title><rect x="976.5" y="949" width="0.1" height="15.0" fill="rgb(211,156,37)" rx="2" ry="2" />
<text  x="979.48" y="959.5" ></text>
</g>
<g >
<title>down_write (47 samples, 0.01%)</title><rect x="828.6" y="917" width="0.1" height="15.0" fill="rgb(208,174,48)" rx="2" ry="2" />
<text  x="831.61" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (192 samples, 0.04%)</title><rect x="1169.3" y="997" width="0.5" height="15.0" fill="rgb(243,18,54)" rx="2" ry="2" />
<text  x="1172.27" y="1007.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (102 samples, 0.02%)</title><rect x="219.7" y="517" width="0.2" height="15.0" fill="rgb(234,169,51)" rx="2" ry="2" />
<text  x="222.68" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1,647 samples, 0.36%)</title><rect x="500.4" y="1077" width="4.3" height="15.0" fill="rgb(205,94,3)" rx="2" ry="2" />
<text  x="503.39" y="1087.5" ></text>
</g>
<g >
<title>security_file_permission (95 samples, 0.02%)</title><rect x="668.3" y="773" width="0.3" height="15.0" fill="rgb(238,76,36)" rx="2" ry="2" />
<text  x="671.31" y="783.5" ></text>
</g>
<g >
<title>hrtimer_active (56 samples, 0.01%)</title><rect x="480.7" y="981" width="0.2" height="15.0" fill="rgb(230,58,31)" rx="2" ry="2" />
<text  x="483.72" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (349 samples, 0.08%)</title><rect x="85.8" y="1301" width="0.9" height="15.0" fill="rgb(227,87,36)" rx="2" ry="2" />
<text  x="88.84" y="1311.5" ></text>
</g>
<g >
<title>__virt_addr_valid (89 samples, 0.02%)</title><rect x="866.8" y="917" width="0.2" height="15.0" fill="rgb(227,68,11)" rx="2" ry="2" />
<text  x="869.79" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (936 samples, 0.21%)</title><rect x="1032.5" y="933" width="2.5" height="15.0" fill="rgb(235,90,48)" rx="2" ry="2" />
<text  x="1035.54" y="943.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (215 samples, 0.05%)</title><rect x="168.0" y="885" width="0.5" height="15.0" fill="rgb(239,210,49)" rx="2" ry="2" />
<text  x="170.97" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (19,890 samples, 4.38%)</title><rect x="393.0" y="677" width="51.7" height="15.0" fill="rgb(243,59,9)" rx="2" ry="2" />
<text  x="396.00" y="687.5" >__do_..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (133 samples, 0.03%)</title><rect x="512.8" y="917" width="0.4" height="15.0" fill="rgb(250,5,17)" rx="2" ry="2" />
<text  x="515.81" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (670 samples, 0.15%)</title><rect x="927.0" y="885" width="1.8" height="15.0" fill="rgb(248,25,3)" rx="2" ry="2" />
<text  x="930.05" y="895.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (49 samples, 0.01%)</title><rect x="989.2" y="949" width="0.1" height="15.0" fill="rgb(221,169,5)" rx="2" ry="2" />
<text  x="992.20" y="959.5" ></text>
</g>
<g >
<title>_int_malloc (85 samples, 0.02%)</title><rect x="608.2" y="773" width="0.2" height="15.0" fill="rgb(211,69,34)" rx="2" ry="2" />
<text  x="611.17" y="783.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (106 samples, 0.02%)</title><rect x="1062.1" y="789" width="0.2" height="15.0" fill="rgb(231,151,39)" rx="2" ry="2" />
<text  x="1065.05" y="799.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (151 samples, 0.03%)</title><rect x="267.5" y="853" width="0.4" height="15.0" fill="rgb(229,106,36)" rx="2" ry="2" />
<text  x="270.47" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (198 samples, 0.04%)</title><rect x="910.7" y="981" width="0.6" height="15.0" fill="rgb(247,221,54)" rx="2" ry="2" />
<text  x="913.74" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (189 samples, 0.04%)</title><rect x="928.3" y="837" width="0.5" height="15.0" fill="rgb(228,28,24)" rx="2" ry="2" />
<text  x="931.29" y="847.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (59 samples, 0.01%)</title><rect x="1035.4" y="837" width="0.2" height="15.0" fill="rgb(240,44,17)" rx="2" ry="2" />
<text  x="1038.42" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (46 samples, 0.01%)</title><rect x="275.8" y="773" width="0.1" height="15.0" fill="rgb(232,160,14)" rx="2" ry="2" />
<text  x="278.82" y="783.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (137 samples, 0.03%)</title><rect x="1129.7" y="837" width="0.4" height="15.0" fill="rgb(222,61,44)" rx="2" ry="2" />
<text  x="1132.72" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (145 samples, 0.03%)</title><rect x="870.3" y="1045" width="0.4" height="15.0" fill="rgb(229,166,8)" rx="2" ry="2" />
<text  x="873.32" y="1055.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (8,175 samples, 1.80%)</title><rect x="1041.8" y="933" width="21.2" height="15.0" fill="rgb(211,212,2)" rx="2" ry="2" />
<text  x="1044.78" y="943.5" >_..</text>
</g>
<g >
<title>__slab_free (58 samples, 0.01%)</title><rect x="244.4" y="757" width="0.2" height="15.0" fill="rgb(216,51,52)" rx="2" ry="2" />
<text  x="247.41" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (383 samples, 0.08%)</title><rect x="1086.1" y="613" width="1.0" height="15.0" fill="rgb(205,28,25)" rx="2" ry="2" />
<text  x="1089.10" y="623.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (73 samples, 0.02%)</title><rect x="235.1" y="901" width="0.2" height="15.0" fill="rgb(237,147,27)" rx="2" ry="2" />
<text  x="238.07" y="911.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (50 samples, 0.01%)</title><rect x="128.2" y="1301" width="0.1" height="15.0" fill="rgb(251,14,54)" rx="2" ry="2" />
<text  x="131.16" y="1311.5" ></text>
</g>
<g >
<title>_int_malloc (140 samples, 0.03%)</title><rect x="1077.1" y="1013" width="0.4" height="15.0" fill="rgb(210,202,46)" rx="2" ry="2" />
<text  x="1080.10" y="1023.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (158 samples, 0.03%)</title><rect x="143.9" y="1317" width="0.4" height="15.0" fill="rgb(216,17,7)" rx="2" ry="2" />
<text  x="146.85" y="1327.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (244 samples, 0.05%)</title><rect x="308.2" y="693" width="0.7" height="15.0" fill="rgb(248,4,2)" rx="2" ry="2" />
<text  x="311.24" y="703.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::erase (41 samples, 0.01%)</title><rect x="136.5" y="1301" width="0.1" height="15.0" fill="rgb(227,66,3)" rx="2" ry="2" />
<text  x="139.46" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (42 samples, 0.01%)</title><rect x="1032.4" y="901" width="0.1" height="15.0" fill="rgb(251,149,7)" rx="2" ry="2" />
<text  x="1035.37" y="911.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (158 samples, 0.03%)</title><rect x="155.5" y="1285" width="0.4" height="15.0" fill="rgb(235,1,23)" rx="2" ry="2" />
<text  x="158.49" y="1295.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (417 samples, 0.09%)</title><rect x="698.0" y="885" width="1.1" height="15.0" fill="rgb(222,192,8)" rx="2" ry="2" />
<text  x="700.99" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (102 samples, 0.02%)</title><rect x="259.1" y="885" width="0.3" height="15.0" fill="rgb(232,135,42)" rx="2" ry="2" />
<text  x="262.10" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (90 samples, 0.02%)</title><rect x="582.8" y="725" width="0.3" height="15.0" fill="rgb(233,175,47)" rx="2" ry="2" />
<text  x="585.82" y="735.5" ></text>
</g>
<g >
<title>fd_install (58 samples, 0.01%)</title><rect x="889.2" y="981" width="0.1" height="15.0" fill="rgb(247,73,27)" rx="2" ry="2" />
<text  x="892.20" y="991.5" ></text>
</g>
<g >
<title>__wake_up_common (279 samples, 0.06%)</title><rect x="752.8" y="901" width="0.8" height="15.0" fill="rgb(227,15,48)" rx="2" ry="2" />
<text  x="755.84" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (267 samples, 0.06%)</title><rect x="1035.6" y="869" width="0.7" height="15.0" fill="rgb(240,21,43)" rx="2" ry="2" />
<text  x="1038.63" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::_M_data_ptr&lt;epoll_event&gt; (58 samples, 0.01%)</title><rect x="136.8" y="1301" width="0.1" height="15.0" fill="rgb(216,111,12)" rx="2" ry="2" />
<text  x="139.77" y="1311.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::~HttpHandler (1,238 samples, 0.27%)</title><rect x="1107.2" y="1013" width="3.2" height="15.0" fill="rgb(208,197,21)" rx="2" ry="2" />
<text  x="1110.23" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (113 samples, 0.02%)</title><rect x="531.9" y="773" width="0.3" height="15.0" fill="rgb(239,36,50)" rx="2" ry="2" />
<text  x="534.88" y="783.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (153 samples, 0.03%)</title><rect x="521.7" y="805" width="0.4" height="15.0" fill="rgb(252,78,6)" rx="2" ry="2" />
<text  x="524.74" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1,193 samples, 0.26%)</title><rect x="993.5" y="965" width="3.1" height="15.0" fill="rgb(226,95,29)" rx="2" ry="2" />
<text  x="996.48" y="975.5" ></text>
</g>
<g >
<title>security_file_permission (111 samples, 0.02%)</title><rect x="334.6" y="597" width="0.3" height="15.0" fill="rgb(205,42,33)" rx="2" ry="2" />
<text  x="337.59" y="607.5" ></text>
</g>
<g >
<title>fmt::v8::detail::equal2 (92 samples, 0.02%)</title><rect x="916.1" y="949" width="0.2" height="15.0" fill="rgb(224,133,11)" rx="2" ry="2" />
<text  x="919.11" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (87 samples, 0.02%)</title><rect x="1176.1" y="1045" width="0.3" height="15.0" fill="rgb(226,166,14)" rx="2" ry="2" />
<text  x="1179.14" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (93 samples, 0.02%)</title><rect x="533.9" y="645" width="0.2" height="15.0" fill="rgb(210,49,37)" rx="2" ry="2" />
<text  x="536.90" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (419 samples, 0.09%)</title><rect x="1040.0" y="949" width="1.1" height="15.0" fill="rgb(249,229,30)" rx="2" ry="2" />
<text  x="1042.97" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (354 samples, 0.08%)</title><rect x="608.9" y="853" width="0.9" height="15.0" fill="rgb(240,117,36)" rx="2" ry="2" />
<text  x="611.90" y="863.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (539 samples, 0.12%)</title><rect x="626.2" y="1077" width="1.4" height="15.0" fill="rgb(222,95,35)" rx="2" ry="2" />
<text  x="629.15" y="1087.5" ></text>
</g>
<g >
<title>__check_object_size (178 samples, 0.04%)</title><rect x="1045.3" y="757" width="0.4" height="15.0" fill="rgb(218,27,14)" rx="2" ry="2" />
<text  x="1048.26" y="767.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (236 samples, 0.05%)</title><rect x="1091.8" y="629" width="0.6" height="15.0" fill="rgb(224,168,52)" rx="2" ry="2" />
<text  x="1094.78" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (305 samples, 0.07%)</title><rect x="455.0" y="773" width="0.8" height="15.0" fill="rgb(253,218,23)" rx="2" ry="2" />
<text  x="458.04" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (102 samples, 0.02%)</title><rect x="1037.4" y="949" width="0.3" height="15.0" fill="rgb(249,26,39)" rx="2" ry="2" />
<text  x="1040.40" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;webserver::EventLoop*, std::allocator&lt;webserver::EventLoop*&gt; &gt;::empty (103 samples, 0.02%)</title><rect x="1137.7" y="1077" width="0.3" height="15.0" fill="rgb(253,130,17)" rx="2" ry="2" />
<text  x="1140.72" y="1087.5" ></text>
</g>
<g >
<title>pty_write (3,855 samples, 0.85%)</title><rect x="943.1" y="693" width="10.0" height="15.0" fill="rgb(247,33,26)" rx="2" ry="2" />
<text  x="946.06" y="703.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (83 samples, 0.02%)</title><rect x="176.2" y="597" width="0.2" height="15.0" fill="rgb(238,168,53)" rx="2" ry="2" />
<text  x="179.20" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (64 samples, 0.01%)</title><rect x="75.2" y="1301" width="0.2" height="15.0" fill="rgb(247,227,51)" rx="2" ry="2" />
<text  x="78.23" y="1311.5" ></text>
</g>
<g >
<title>_IO_new_do_write (821 samples, 0.18%)</title><rect x="1187.1" y="1269" width="2.2" height="15.0" fill="rgb(212,20,34)" rx="2" ry="2" />
<text  x="1190.13" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,624 samples, 0.80%)</title><rect x="773.5" y="1029" width="9.4" height="15.0" fill="rgb(241,156,6)" rx="2" ry="2" />
<text  x="776.45" y="1039.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (145 samples, 0.03%)</title><rect x="1148.5" y="965" width="0.3" height="15.0" fill="rgb(213,100,2)" rx="2" ry="2" />
<text  x="1151.46" y="975.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (537 samples, 0.12%)</title><rect x="596.1" y="709" width="1.4" height="15.0" fill="rgb(228,83,7)" rx="2" ry="2" />
<text  x="599.11" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (46 samples, 0.01%)</title><rect x="996.4" y="949" width="0.1" height="15.0" fill="rgb(213,207,16)" rx="2" ry="2" />
<text  x="999.38" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (54 samples, 0.01%)</title><rect x="1177.9" y="1013" width="0.2" height="15.0" fill="rgb(245,173,50)" rx="2" ry="2" />
<text  x="1180.93" y="1023.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (80 samples, 0.02%)</title><rect x="444.7" y="693" width="0.2" height="15.0" fill="rgb(233,151,49)" rx="2" ry="2" />
<text  x="447.69" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void  (90,958 samples, 20.03%)</title><rect x="227.1" y="1093" width="236.3" height="15.0" fill="rgb(217,208,40)" rx="2" ry="2" />
<text  x="230.12" y="1103.5" >std::function&lt;void </text>
</g>
<g >
<title>spdlog::details::os::now (126 samples, 0.03%)</title><rect x="690.7" y="981" width="0.3" height="15.0" fill="rgb(219,209,25)" rx="2" ry="2" />
<text  x="693.70" y="991.5" ></text>
</g>
<g >
<title>enqueue_task_fair (396 samples, 0.09%)</title><rect x="573.6" y="597" width="1.0" height="15.0" fill="rgb(234,43,10)" rx="2" ry="2" />
<text  x="576.59" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (66 samples, 0.01%)</title><rect x="743.7" y="981" width="0.2" height="15.0" fill="rgb(228,198,16)" rx="2" ry="2" />
<text  x="746.73" y="991.5" ></text>
</g>
<g >
<title>__GI___libc_free (116 samples, 0.03%)</title><rect x="1109.9" y="741" width="0.3" height="15.0" fill="rgb(213,204,8)" rx="2" ry="2" />
<text  x="1112.90" y="751.5" ></text>
</g>
<g >
<title>release_sock (2,951 samples, 0.65%)</title><rect x="366.1" y="821" width="7.6" height="15.0" fill="rgb(233,15,28)" rx="2" ry="2" />
<text  x="369.07" y="831.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="930.3" y="789" width="0.2" height="15.0" fill="rgb(220,171,18)" rx="2" ry="2" />
<text  x="933.35" y="799.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (82 samples, 0.02%)</title><rect x="61.4" y="1301" width="0.2" height="15.0" fill="rgb(223,147,4)" rx="2" ry="2" />
<text  x="64.36" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task_idle (47 samples, 0.01%)</title><rect x="1066.7" y="757" width="0.1" height="15.0" fill="rgb(236,153,10)" rx="2" ry="2" />
<text  x="1069.68" y="767.5" ></text>
</g>
<g >
<title>syscall_exit_work (102 samples, 0.02%)</title><rect x="603.3" y="773" width="0.2" height="15.0" fill="rgb(222,50,49)" rx="2" ry="2" />
<text  x="606.27" y="783.5" ></text>
</g>
<g >
<title>n_tty_write (5,555 samples, 1.22%)</title><rect x="939.4" y="709" width="14.5" height="15.0" fill="rgb(240,55,25)" rx="2" ry="2" />
<text  x="942.42" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (44 samples, 0.01%)</title><rect x="617.5" y="789" width="0.1" height="15.0" fill="rgb(222,62,40)" rx="2" ry="2" />
<text  x="620.51" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::EventLoopThreadPool, std::default_delete&lt;webserver::EventLoopThreadPool&gt; &gt;::operator (47 samples, 0.01%)</title><rect x="1110.7" y="1093" width="0.1" height="15.0" fill="rgb(226,83,11)" rx="2" ry="2" />
<text  x="1113.69" y="1103.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (56 samples, 0.01%)</title><rect x="351.3" y="837" width="0.2" height="15.0" fill="rgb(205,201,36)" rx="2" ry="2" />
<text  x="354.32" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (303 samples, 0.07%)</title><rect x="517.4" y="741" width="0.8" height="15.0" fill="rgb(227,51,37)" rx="2" ry="2" />
<text  x="520.41" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt; (140 samples, 0.03%)</title><rect x="101.8" y="1301" width="0.4" height="15.0" fill="rgb(234,148,29)" rx="2" ry="2" />
<text  x="104.85" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::deallocate (431 samples, 0.09%)</title><rect x="224.8" y="997" width="1.2" height="15.0" fill="rgb(207,33,37)" rx="2" ry="2" />
<text  x="227.83" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void  (372 samples, 0.08%)</title><rect x="607.7" y="885" width="0.9" height="15.0" fill="rgb(237,39,35)" rx="2" ry="2" />
<text  x="610.65" y="895.5" ></text>
</g>
<g >
<title>security_file_free (40 samples, 0.01%)</title><rect x="1084.6" y="821" width="0.1" height="15.0" fill="rgb(208,142,17)" rx="2" ry="2" />
<text  x="1087.56" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (47 samples, 0.01%)</title><rect x="257.6" y="917" width="0.1" height="15.0" fill="rgb(218,102,48)" rx="2" ry="2" />
<text  x="260.55" y="927.5" ></text>
</g>
<g >
<title>operator new (195 samples, 0.04%)</title><rect x="1019.4" y="1093" width="0.6" height="15.0" fill="rgb(221,86,7)" rx="2" ry="2" />
<text  x="1022.45" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (48 samples, 0.01%)</title><rect x="70.8" y="1301" width="0.1" height="15.0" fill="rgb(210,33,34)" rx="2" ry="2" />
<text  x="73.81" y="1311.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (48 samples, 0.01%)</title><rect x="948.3" y="613" width="0.1" height="15.0" fill="rgb(214,89,25)" rx="2" ry="2" />
<text  x="951.32" y="623.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (47 samples, 0.01%)</title><rect x="1037.5" y="853" width="0.2" height="15.0" fill="rgb(242,203,12)" rx="2" ry="2" />
<text  x="1040.54" y="863.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (2,572 samples, 0.57%)</title><rect x="261.5" y="901" width="6.7" height="15.0" fill="rgb(244,53,33)" rx="2" ry="2" />
<text  x="264.54" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (69 samples, 0.02%)</title><rect x="1003.9" y="917" width="0.2" height="15.0" fill="rgb(245,41,39)" rx="2" ry="2" />
<text  x="1006.87" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (55 samples, 0.01%)</title><rect x="700.2" y="821" width="0.1" height="15.0" fill="rgb(241,104,54)" rx="2" ry="2" />
<text  x="703.20" y="831.5" ></text>
</g>
<g >
<title>native_sched_clock (75 samples, 0.02%)</title><rect x="393.7" y="629" width="0.2" height="15.0" fill="rgb(215,179,50)" rx="2" ry="2" />
<text  x="396.72" y="639.5" ></text>
</g>
<g >
<title>userfaultfd_unmap_prep (40 samples, 0.01%)</title><rect x="844.8" y="965" width="0.1" height="15.0" fill="rgb(220,144,19)" rx="2" ry="2" />
<text  x="847.79" y="975.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (87 samples, 0.02%)</title><rect x="64.9" y="1301" width="0.2" height="15.0" fill="rgb(236,127,18)" rx="2" ry="2" />
<text  x="67.86" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (42 samples, 0.01%)</title><rect x="1006.2" y="869" width="0.1" height="15.0" fill="rgb(229,147,39)" rx="2" ry="2" />
<text  x="1009.22" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (114 samples, 0.03%)</title><rect x="525.6" y="757" width="0.3" height="15.0" fill="rgb(227,114,47)" rx="2" ry="2" />
<text  x="528.57" y="767.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (98 samples, 0.02%)</title><rect x="956.1" y="741" width="0.3" height="15.0" fill="rgb(207,87,3)" rx="2" ry="2" />
<text  x="959.11" y="751.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (93 samples, 0.02%)</title><rect x="729.6" y="773" width="0.2" height="15.0" fill="rgb(233,62,5)" rx="2" ry="2" />
<text  x="732.55" y="783.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (78 samples, 0.02%)</title><rect x="698.1" y="821" width="0.2" height="15.0" fill="rgb(241,7,23)" rx="2" ry="2" />
<text  x="701.11" y="831.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (166 samples, 0.04%)</title><rect x="203.6" y="85" width="0.5" height="15.0" fill="rgb(231,139,25)" rx="2" ry="2" />
<text  x="206.65" y="95.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (62 samples, 0.01%)</title><rect x="350.2" y="757" width="0.2" height="15.0" fill="rgb(207,20,14)" rx="2" ry="2" />
<text  x="353.24" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (57 samples, 0.01%)</title><rect x="270.9" y="805" width="0.2" height="15.0" fill="rgb(232,15,38)" rx="2" ry="2" />
<text  x="273.91" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (58 samples, 0.01%)</title><rect x="532.0" y="677" width="0.2" height="15.0" fill="rgb(206,177,42)" rx="2" ry="2" />
<text  x="535.00" y="687.5" ></text>
</g>
<g >
<title>dequeue_task_fair (454 samples, 0.10%)</title><rect x="564.7" y="597" width="1.2" height="15.0" fill="rgb(224,168,26)" rx="2" ry="2" />
<text  x="567.75" y="607.5" ></text>
</g>
<g >
<title>inode_permission (689 samples, 0.15%)</title><rect x="857.5" y="933" width="1.8" height="15.0" fill="rgb(252,12,38)" rx="2" ry="2" />
<text  x="860.51" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (39 samples, 0.01%)</title><rect x="587.2" y="805" width="0.1" height="15.0" fill="rgb(205,185,29)" rx="2" ry="2" />
<text  x="590.19" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt;::__normal_iterator (143 samples, 0.03%)</title><rect x="38.2" y="1301" width="0.4" height="15.0" fill="rgb(218,51,41)" rx="2" ry="2" />
<text  x="41.22" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (108 samples, 0.02%)</title><rect x="517.8" y="629" width="0.3" height="15.0" fill="rgb(235,172,46)" rx="2" ry="2" />
<text  x="520.84" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (83 samples, 0.02%)</title><rect x="158.3" y="1301" width="0.2" height="15.0" fill="rgb(249,56,29)" rx="2" ry="2" />
<text  x="161.27" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (651 samples, 0.14%)</title><rect x="927.1" y="869" width="1.7" height="15.0" fill="rgb(206,144,15)" rx="2" ry="2" />
<text  x="930.10" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (45 samples, 0.01%)</title><rect x="84.4" y="1301" width="0.2" height="15.0" fill="rgb(240,111,46)" rx="2" ry="2" />
<text  x="87.44" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (64 samples, 0.01%)</title><rect x="270.9" y="821" width="0.2" height="15.0" fill="rgb(223,189,1)" rx="2" ry="2" />
<text  x="273.89" y="831.5" ></text>
</g>
<g >
<title>eventfd_read (475 samples, 0.10%)</title><rect x="231.8" y="853" width="1.2" height="15.0" fill="rgb(230,130,32)" rx="2" ry="2" />
<text  x="234.76" y="863.5" ></text>
</g>
<g >
<title>pick_next_task_fair (94 samples, 0.02%)</title><rect x="1066.4" y="757" width="0.3" height="15.0" fill="rgb(226,228,45)" rx="2" ry="2" />
<text  x="1069.44" y="767.5" ></text>
</g>
<g >
<title>pick_file (52 samples, 0.01%)</title><rect x="1080.5" y="853" width="0.1" height="15.0" fill="rgb(210,177,18)" rx="2" ry="2" />
<text  x="1083.45" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_write (820 samples, 0.18%)</title><rect x="1187.1" y="1221" width="2.2" height="15.0" fill="rgb(213,228,44)" rx="2" ry="2" />
<text  x="1190.13" y="1231.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (280 samples, 0.06%)</title><rect x="444.9" y="709" width="0.8" height="15.0" fill="rgb(244,68,2)" rx="2" ry="2" />
<text  x="447.93" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpConnection*&gt;::_Tuple_impl&lt;webserver::HttpConnection*&gt; (71 samples, 0.02%)</title><rect x="605.5" y="853" width="0.2" height="15.0" fill="rgb(234,7,30)" rx="2" ry="2" />
<text  x="608.55" y="863.5" ></text>
</g>
<g >
<title>pick_next_task_fair (42 samples, 0.01%)</title><rect x="545.3" y="485" width="0.1" height="15.0" fill="rgb(225,176,39)" rx="2" ry="2" />
<text  x="548.31" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (43 samples, 0.01%)</title><rect x="1107.5" y="853" width="0.2" height="15.0" fill="rgb(219,218,43)" rx="2" ry="2" />
<text  x="1110.55" y="863.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (55 samples, 0.01%)</title><rect x="34.4" y="1301" width="0.2" height="15.0" fill="rgb(219,216,44)" rx="2" ry="2" />
<text  x="37.45" y="1311.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (201 samples, 0.04%)</title><rect x="615.5" y="837" width="0.6" height="15.0" fill="rgb(215,182,12)" rx="2" ry="2" />
<text  x="618.54" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (40 samples, 0.01%)</title><rect x="743.6" y="965" width="0.1" height="15.0" fill="rgb(223,209,0)" rx="2" ry="2" />
<text  x="746.56" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (161 samples, 0.04%)</title><rect x="642.4" y="757" width="0.4" height="15.0" fill="rgb(223,6,10)" rx="2" ry="2" />
<text  x="645.37" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,097 samples, 0.46%)</title><rect x="680.3" y="869" width="5.5" height="15.0" fill="rgb(215,153,44)" rx="2" ry="2" />
<text  x="683.34" y="879.5" ></text>
</g>
<g >
<title>__tcp_close (14,499 samples, 3.19%)</title><rect x="182.8" y="549" width="37.7" height="15.0" fill="rgb(240,122,25)" rx="2" ry="2" />
<text  x="185.85" y="559.5" >__t..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (43 samples, 0.01%)</title><rect x="869.0" y="997" width="0.1" height="15.0" fill="rgb(236,87,12)" rx="2" ry="2" />
<text  x="871.96" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (59 samples, 0.01%)</title><rect x="923.7" y="805" width="0.2" height="15.0" fill="rgb(235,117,40)" rx="2" ry="2" />
<text  x="926.75" y="815.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (66 samples, 0.01%)</title><rect x="210.5" y="213" width="0.2" height="15.0" fill="rgb(252,169,21)" rx="2" ry="2" />
<text  x="213.50" y="223.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (68 samples, 0.01%)</title><rect x="722.1" y="645" width="0.2" height="15.0" fill="rgb(208,215,37)" rx="2" ry="2" />
<text  x="725.10" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (383 samples, 0.08%)</title><rect x="183.4" y="517" width="1.0" height="15.0" fill="rgb(241,40,25)" rx="2" ry="2" />
<text  x="186.39" y="527.5" ></text>
</g>
<g >
<title>__GI___pthread_once (81 samples, 0.02%)</title><rect x="974.0" y="965" width="0.2" height="15.0" fill="rgb(236,94,12)" rx="2" ry="2" />
<text  x="977.00" y="975.5" ></text>
</g>
<g >
<title>__schedule (108 samples, 0.02%)</title><rect x="321.8" y="469" width="0.3" height="15.0" fill="rgb(254,196,3)" rx="2" ry="2" />
<text  x="324.82" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::operator= (48 samples, 0.01%)</title><rect x="138.5" y="1301" width="0.1" height="15.0" fill="rgb(219,142,26)" rx="2" ry="2" />
<text  x="141.49" y="1311.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (41 samples, 0.01%)</title><rect x="111.6" y="1301" width="0.1" height="15.0" fill="rgb(209,131,26)" rx="2" ry="2" />
<text  x="114.60" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (77 samples, 0.02%)</title><rect x="296.2" y="597" width="0.2" height="15.0" fill="rgb(222,93,31)" rx="2" ry="2" />
<text  x="299.24" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (40 samples, 0.01%)</title><rect x="97.8" y="1301" width="0.1" height="15.0" fill="rgb(253,209,44)" rx="2" ry="2" />
<text  x="100.82" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (165 samples, 0.04%)</title><rect x="346.3" y="549" width="0.4" height="15.0" fill="rgb(225,209,41)" rx="2" ry="2" />
<text  x="349.26" y="559.5" ></text>
</g>
<g >
<title>webserver::Channel::update (1,658 samples, 0.37%)</title><rect x="276.9" y="917" width="4.3" height="15.0" fill="rgb(223,173,16)" rx="2" ry="2" />
<text  x="279.92" y="927.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (118 samples, 0.03%)</title><rect x="786.8" y="1013" width="0.3" height="15.0" fill="rgb(236,48,14)" rx="2" ry="2" />
<text  x="789.80" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (52 samples, 0.01%)</title><rect x="270.0" y="853" width="0.1" height="15.0" fill="rgb(245,46,12)" rx="2" ry="2" />
<text  x="272.98" y="863.5" ></text>
</g>
<g >
<title>add_wait_queue (74 samples, 0.02%)</title><rect x="321.3" y="549" width="0.2" height="15.0" fill="rgb(246,171,33)" rx="2" ry="2" />
<text  x="324.31" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr&lt;std::allocator&lt;webserver::TcpSocket&gt;, int&amp;, webserver::InetAddr&gt; (662 samples, 0.15%)</title><rect x="1169.0" y="1045" width="1.7" height="15.0" fill="rgb(230,40,42)" rx="2" ry="2" />
<text  x="1171.97" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (409 samples, 0.09%)</title><rect x="307.2" y="709" width="1.0" height="15.0" fill="rgb(243,229,24)" rx="2" ry="2" />
<text  x="310.17" y="719.5" ></text>
</g>
<g >
<title>netif_rx_internal (102 samples, 0.02%)</title><rect x="415.6" y="357" width="0.3" height="15.0" fill="rgb(221,8,9)" rx="2" ry="2" />
<text  x="418.59" y="367.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (50 samples, 0.01%)</title><rect x="632.1" y="1045" width="0.2" height="15.0" fill="rgb(229,81,31)" rx="2" ry="2" />
<text  x="635.14" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (274 samples, 0.06%)</title><rect x="272.8" y="757" width="0.7" height="15.0" fill="rgb(205,162,39)" rx="2" ry="2" />
<text  x="275.81" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (4,867 samples, 1.07%)</title><rect x="894.8" y="1061" width="12.6" height="15.0" fill="rgb(211,56,1)" rx="2" ry="2" />
<text  x="897.76" y="1071.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (79 samples, 0.02%)</title><rect x="300.4" y="773" width="0.3" height="15.0" fill="rgb(219,165,24)" rx="2" ry="2" />
<text  x="303.45" y="783.5" ></text>
</g>
<g >
<title>ksize (68 samples, 0.01%)</title><rect x="455.8" y="773" width="0.2" height="15.0" fill="rgb(248,84,44)" rx="2" ry="2" />
<text  x="458.84" y="783.5" ></text>
</g>
<g >
<title>ldsem_up_read (40 samples, 0.01%)</title><rect x="542.1" y="597" width="0.1" height="15.0" fill="rgb(246,143,3)" rx="2" ry="2" />
<text  x="545.12" y="607.5" ></text>
</g>
<g >
<title>vma_gap_callbacks_rotate (50 samples, 0.01%)</title><rect x="816.5" y="917" width="0.1" height="15.0" fill="rgb(234,14,50)" rx="2" ry="2" />
<text  x="819.48" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,803 samples, 1.50%)</title><rect x="874.8" y="1045" width="17.7" height="15.0" fill="rgb(239,58,21)" rx="2" ry="2" />
<text  x="877.81" y="1055.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (177 samples, 0.04%)</title><rect x="815.0" y="917" width="0.5" height="15.0" fill="rgb(253,58,14)" rx="2" ry="2" />
<text  x="818.02" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (39 samples, 0.01%)</title><rect x="1108.0" y="837" width="0.1" height="15.0" fill="rgb(237,64,26)" rx="2" ry="2" />
<text  x="1111.01" y="847.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (46 samples, 0.01%)</title><rect x="348.1" y="821" width="0.2" height="15.0" fill="rgb(254,1,9)" rx="2" ry="2" />
<text  x="351.14" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (396 samples, 0.09%)</title><rect x="775.3" y="885" width="1.0" height="15.0" fill="rgb(252,112,10)" rx="2" ry="2" />
<text  x="778.26" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*&gt; (88 samples, 0.02%)</title><rect x="68.1" y="1301" width="0.2" height="15.0" fill="rgb(228,147,7)" rx="2" ry="2" />
<text  x="71.08" y="1311.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::~HttpHandler (2,126 samples, 0.47%)</title><rect x="270.8" y="853" width="5.6" height="15.0" fill="rgb(231,184,27)" rx="2" ry="2" />
<text  x="273.84" y="863.5" ></text>
</g>
<g >
<title>inet_getname (76 samples, 0.02%)</title><rect x="1154.7" y="981" width="0.2" height="15.0" fill="rgb(241,65,37)" rx="2" ry="2" />
<text  x="1157.72" y="991.5" ></text>
</g>
<g >
<title>update_curr (63 samples, 0.01%)</title><rect x="736.7" y="709" width="0.2" height="15.0" fill="rgb(235,117,46)" rx="2" ry="2" />
<text  x="739.71" y="719.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2,022 samples, 0.45%)</title><rect x="1069.5" y="917" width="5.2" height="15.0" fill="rgb(232,141,8)" rx="2" ry="2" />
<text  x="1072.47" y="927.5" ></text>
</g>
<g >
<title>webserver::Thread::start (331,013 samples, 72.89%)</title><rect x="158.7" y="1285" width="860.0" height="15.0" fill="rgb(241,208,7)" rx="2" ry="2" />
<text  x="161.65" y="1295.5" >webserver::Thread::start</text>
</g>
<g >
<title>update_load_avg (124 samples, 0.03%)</title><rect x="1127.1" y="821" width="0.3" height="15.0" fill="rgb(244,202,47)" rx="2" ry="2" />
<text  x="1130.12" y="831.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (105 samples, 0.02%)</title><rect x="148.5" y="1301" width="0.2" height="15.0" fill="rgb(222,168,34)" rx="2" ry="2" />
<text  x="151.48" y="1311.5" ></text>
</g>
<g >
<title>native_write_msr (50 samples, 0.01%)</title><rect x="665.9" y="597" width="0.1" height="15.0" fill="rgb(215,96,49)" rx="2" ry="2" />
<text  x="668.90" y="607.5" ></text>
</g>
<g >
<title>make_kuid (117 samples, 0.03%)</title><rect x="859.0" y="901" width="0.3" height="15.0" fill="rgb(234,136,20)" rx="2" ry="2" />
<text  x="861.99" y="911.5" ></text>
</g>
<g >
<title>_find_next_bit (53 samples, 0.01%)</title><rect x="427.8" y="373" width="0.1" height="15.0" fill="rgb(223,132,36)" rx="2" ry="2" />
<text  x="430.76" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_blocked_se (62 samples, 0.01%)</title><rect x="428.5" y="357" width="0.1" height="15.0" fill="rgb(215,146,23)" rx="2" ry="2" />
<text  x="431.49" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (97 samples, 0.02%)</title><rect x="578.8" y="885" width="0.3" height="15.0" fill="rgb(208,184,26)" rx="2" ry="2" />
<text  x="581.85" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::try_reserve (90 samples, 0.02%)</title><rect x="48.5" y="1301" width="0.2" height="15.0" fill="rgb(220,177,3)" rx="2" ry="2" />
<text  x="51.47" y="1311.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (474 samples, 0.10%)</title><rect x="1000.0" y="901" width="1.2" height="15.0" fill="rgb(251,144,48)" rx="2" ry="2" />
<text  x="1002.96" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2,529 samples, 0.56%)</title><rect x="269.8" y="885" width="6.6" height="15.0" fill="rgb(205,28,20)" rx="2" ry="2" />
<text  x="272.80" y="895.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (126 samples, 0.03%)</title><rect x="1039.3" y="869" width="0.3" height="15.0" fill="rgb(238,206,51)" rx="2" ry="2" />
<text  x="1042.27" y="879.5" ></text>
</g>
<g >
<title>_IO_new_do_write (10,097 samples, 2.22%)</title><rect x="704.2" y="901" width="26.2" height="15.0" fill="rgb(251,163,45)" rx="2" ry="2" />
<text  x="707.16" y="911.5" >_..</text>
</g>
<g >
<title>check_preempt_curr (400 samples, 0.09%)</title><rect x="555.7" y="501" width="1.0" height="15.0" fill="rgb(252,0,10)" rx="2" ry="2" />
<text  x="558.66" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (88 samples, 0.02%)</title><rect x="701.9" y="741" width="0.3" height="15.0" fill="rgb(227,227,48)" rx="2" ry="2" />
<text  x="704.93" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,753 samples, 0.61%)</title><rect x="1093.8" y="517" width="7.1" height="15.0" fill="rgb(220,190,35)" rx="2" ry="2" />
<text  x="1096.76" y="527.5" ></text>
</g>
<g >
<title>__schedule (1,229 samples, 0.27%)</title><rect x="1064.6" y="773" width="3.2" height="15.0" fill="rgb(208,200,44)" rx="2" ry="2" />
<text  x="1067.62" y="783.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (71 samples, 0.02%)</title><rect x="968.9" y="965" width="0.2" height="15.0" fill="rgb(238,164,18)" rx="2" ry="2" />
<text  x="971.93" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (111 samples, 0.02%)</title><rect x="61.0" y="1301" width="0.3" height="15.0" fill="rgb(230,23,27)" rx="2" ry="2" />
<text  x="63.96" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (22,065 samples, 4.86%)</title><rect x="520.6" y="853" width="57.3" height="15.0" fill="rgb(236,44,5)" rx="2" ry="2" />
<text  x="523.56" y="863.5" >spdlog..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (84 samples, 0.02%)</title><rect x="923.3" y="821" width="0.3" height="15.0" fill="rgb(214,180,19)" rx="2" ry="2" />
<text  x="926.34" y="831.5" ></text>
</g>
<g >
<title>read_tsc (78 samples, 0.02%)</title><rect x="490.8" y="981" width="0.2" height="15.0" fill="rgb(253,226,38)" rx="2" ry="2" />
<text  x="493.84" y="991.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (52 samples, 0.01%)</title><rect x="17.6" y="1301" width="0.2" height="15.0" fill="rgb(223,38,1)" rx="2" ry="2" />
<text  x="20.62" y="1311.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (138 samples, 0.03%)</title><rect x="1058.9" y="725" width="0.3" height="15.0" fill="rgb(212,8,3)" rx="2" ry="2" />
<text  x="1061.88" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (477 samples, 0.11%)</title><rect x="629.9" y="1045" width="1.2" height="15.0" fill="rgb(214,211,50)" rx="2" ry="2" />
<text  x="632.90" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::~_Vector_base (43 samples, 0.01%)</title><rect x="226.3" y="1093" width="0.2" height="15.0" fill="rgb(244,182,18)" rx="2" ry="2" />
<text  x="229.34" y="1103.5" ></text>
</g>
<g >
<title>__libc_close (78 samples, 0.02%)</title><rect x="41.2" y="1285" width="0.2" height="15.0" fill="rgb(246,136,19)" rx="2" ry="2" />
<text  x="44.19" y="1295.5" ></text>
</g>
<g >
<title>set_next_entity (69 samples, 0.02%)</title><rect x="676.0" y="725" width="0.1" height="15.0" fill="rgb(219,127,36)" rx="2" ry="2" />
<text  x="678.95" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (78 samples, 0.02%)</title><rect x="1106.8" y="1029" width="0.2" height="15.0" fill="rgb(223,214,9)" rx="2" ry="2" />
<text  x="1109.80" y="1039.5" ></text>
</g>
<g >
<title>spdlog::source_loc::empty (94 samples, 0.02%)</title><rect x="65.8" y="1301" width="0.2" height="15.0" fill="rgb(218,32,52)" rx="2" ry="2" />
<text  x="68.80" y="1311.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (52 samples, 0.01%)</title><rect x="1018.3" y="933" width="0.1" height="15.0" fill="rgb(245,148,29)" rx="2" ry="2" />
<text  x="1021.26" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (376 samples, 0.08%)</title><rect x="1038.1" y="933" width="1.0" height="15.0" fill="rgb(206,89,5)" rx="2" ry="2" />
<text  x="1041.09" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (43 samples, 0.01%)</title><rect x="51.3" y="1301" width="0.1" height="15.0" fill="rgb(211,10,5)" rx="2" ry="2" />
<text  x="54.30" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (321 samples, 0.07%)</title><rect x="758.8" y="1013" width="0.8" height="15.0" fill="rgb(251,65,42)" rx="2" ry="2" />
<text  x="761.78" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (221 samples, 0.05%)</title><rect x="741.9" y="1061" width="0.6" height="15.0" fill="rgb(206,154,10)" rx="2" ry="2" />
<text  x="744.90" y="1071.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (124 samples, 0.03%)</title><rect x="760.7" y="1029" width="0.3" height="15.0" fill="rgb(226,111,27)" rx="2" ry="2" />
<text  x="763.69" y="1039.5" ></text>
</g>
<g >
<title>__libc_open64 (7,294 samples, 1.61%)</title><rect x="873.9" y="1061" width="19.0" height="15.0" fill="rgb(237,158,48)" rx="2" ry="2" />
<text  x="876.94" y="1071.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (43 samples, 0.01%)</title><rect x="889.3" y="981" width="0.2" height="15.0" fill="rgb(214,46,52)" rx="2" ry="2" />
<text  x="892.35" y="991.5" ></text>
</g>
<g >
<title>step_into (304 samples, 0.07%)</title><rect x="861.7" y="917" width="0.7" height="15.0" fill="rgb(246,150,15)" rx="2" ry="2" />
<text  x="864.65" y="927.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (158 samples, 0.03%)</title><rect x="561.2" y="693" width="0.4" height="15.0" fill="rgb(220,100,27)" rx="2" ry="2" />
<text  x="564.16" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::deallocate (69 samples, 0.02%)</title><rect x="46.1" y="1301" width="0.2" height="15.0" fill="rgb(242,63,17)" rx="2" ry="2" />
<text  x="49.15" y="1311.5" ></text>
</g>
<g >
<title>refill_obj_stock (63 samples, 0.01%)</title><rect x="601.4" y="725" width="0.2" height="15.0" fill="rgb(221,227,11)" rx="2" ry="2" />
<text  x="604.44" y="735.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (74 samples, 0.02%)</title><rect x="830.2" y="901" width="0.2" height="15.0" fill="rgb(241,25,29)" rx="2" ry="2" />
<text  x="833.23" y="911.5" ></text>
</g>
<g >
<title>update_load_avg (69 samples, 0.02%)</title><rect x="565.4" y="565" width="0.2" height="15.0" fill="rgb(229,60,13)" rx="2" ry="2" />
<text  x="568.40" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (208 samples, 0.05%)</title><rect x="351.6" y="885" width="0.5" height="15.0" fill="rgb(242,21,46)" rx="2" ry="2" />
<text  x="354.60" y="895.5" ></text>
</g>
<g >
<title>dequeue_entity (181 samples, 0.04%)</title><rect x="339.7" y="549" width="0.5" height="15.0" fill="rgb(225,73,14)" rx="2" ry="2" />
<text  x="342.75" y="559.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (112 samples, 0.02%)</title><rect x="250.6" y="789" width="0.3" height="15.0" fill="rgb(237,18,26)" rx="2" ry="2" />
<text  x="253.58" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (132 samples, 0.03%)</title><rect x="645.8" y="933" width="0.4" height="15.0" fill="rgb(211,109,5)" rx="2" ry="2" />
<text  x="648.82" y="943.5" ></text>
</g>
<g >
<title>pty_write (4,030 samples, 0.89%)</title><rect x="716.2" y="725" width="10.4" height="15.0" fill="rgb(209,108,14)" rx="2" ry="2" />
<text  x="719.16" y="735.5" ></text>
</g>
<g >
<title>psi_group_change (134 samples, 0.03%)</title><rect x="723.7" y="629" width="0.4" height="15.0" fill="rgb(214,113,15)" rx="2" ry="2" />
<text  x="726.73" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (67 samples, 0.01%)</title><rect x="91.8" y="1301" width="0.2" height="15.0" fill="rgb(213,7,11)" rx="2" ry="2" />
<text  x="94.83" y="1311.5" ></text>
</g>
<g >
<title>preempt_schedule (99 samples, 0.02%)</title><rect x="1101.4" y="613" width="0.3" height="15.0" fill="rgb(206,118,29)" rx="2" ry="2" />
<text  x="1104.41" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (46 samples, 0.01%)</title><rect x="359.5" y="805" width="0.1" height="15.0" fill="rgb(246,137,0)" rx="2" ry="2" />
<text  x="362.51" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_free (184 samples, 0.04%)</title><rect x="168.0" y="853" width="0.5" height="15.0" fill="rgb(212,78,5)" rx="2" ry="2" />
<text  x="171.00" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (378 samples, 0.08%)</title><rect x="930.2" y="885" width="1.0" height="15.0" fill="rgb(243,122,43)" rx="2" ry="2" />
<text  x="933.24" y="895.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (688 samples, 0.15%)</title><rect x="695.8" y="885" width="1.8" height="15.0" fill="rgb(209,2,18)" rx="2" ry="2" />
<text  x="698.85" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (126 samples, 0.03%)</title><rect x="138.9" y="1301" width="0.3" height="15.0" fill="rgb(246,42,30)" rx="2" ry="2" />
<text  x="141.89" y="1311.5" ></text>
</g>
<g >
<title>ttwu_do_activate (714 samples, 0.16%)</title><rect x="736.4" y="773" width="1.8" height="15.0" fill="rgb(229,51,44)" rx="2" ry="2" />
<text  x="739.37" y="783.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (112 samples, 0.02%)</title><rect x="616.4" y="885" width="0.3" height="15.0" fill="rgb(233,24,54)" rx="2" ry="2" />
<text  x="619.44" y="895.5" ></text>
</g>
<g >
<title>_copy_from_user (150 samples, 0.03%)</title><rect x="1008.6" y="869" width="0.4" height="15.0" fill="rgb(246,88,19)" rx="2" ry="2" />
<text  x="1011.61" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (145 samples, 0.03%)</title><rect x="907.9" y="981" width="0.4" height="15.0" fill="rgb(226,216,27)" rx="2" ry="2" />
<text  x="910.90" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::vector (131 samples, 0.03%)</title><rect x="509.8" y="1093" width="0.4" height="15.0" fill="rgb(251,160,17)" rx="2" ry="2" />
<text  x="512.83" y="1103.5" ></text>
</g>
<g >
<title>epoll_wait (13,319 samples, 2.93%)</title><rect x="465.1" y="1093" width="34.6" height="15.0" fill="rgb(230,6,38)" rx="2" ry="2" />
<text  x="468.08" y="1103.5" >ep..</text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (82 samples, 0.02%)</title><rect x="646.7" y="869" width="0.2" height="15.0" fill="rgb(223,161,32)" rx="2" ry="2" />
<text  x="649.69" y="879.5" ></text>
</g>
<g >
<title>ip_rcv (18,358 samples, 4.04%)</title><rect x="396.5" y="597" width="47.7" height="15.0" fill="rgb(229,205,3)" rx="2" ry="2" />
<text  x="399.53" y="607.5" >ip_rcv</text>
</g>
<g >
<title>enqueue_task_fair (325 samples, 0.07%)</title><rect x="736.4" y="741" width="0.9" height="15.0" fill="rgb(211,35,13)" rx="2" ry="2" />
<text  x="739.41" y="751.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::function&lt;void  (92 samples, 0.02%)</title><rect x="1115.3" y="1013" width="0.2" height="15.0" fill="rgb(207,208,40)" rx="2" ry="2" />
<text  x="1118.28" y="1023.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, webserver::HttpConnection*, false&gt;::_M_head (281 samples, 0.06%)</title><rect x="72.7" y="1301" width="0.7" height="15.0" fill="rgb(231,187,46)" rx="2" ry="2" />
<text  x="75.66" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (6,864 samples, 1.51%)</title><rect x="195.1" y="389" width="17.8" height="15.0" fill="rgb(253,106,40)" rx="2" ry="2" />
<text  x="198.07" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (430 samples, 0.09%)</title><rect x="534.6" y="789" width="1.1" height="15.0" fill="rgb(211,5,10)" rx="2" ry="2" />
<text  x="537.62" y="799.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51 samples, 0.01%)</title><rect x="1016.3" y="869" width="0.1" height="15.0" fill="rgb(214,43,26)" rx="2" ry="2" />
<text  x="1019.30" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (169 samples, 0.04%)</title><rect x="56.1" y="1301" width="0.5" height="15.0" fill="rgb(214,55,54)" rx="2" ry="2" />
<text  x="59.14" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (176 samples, 0.04%)</title><rect x="696.8" y="773" width="0.5" height="15.0" fill="rgb(253,46,51)" rx="2" ry="2" />
<text  x="699.81" y="783.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt;, false&gt;::_Head_base (55 samples, 0.01%)</title><rect x="1114.7" y="885" width="0.1" height="15.0" fill="rgb(209,90,0)" rx="2" ry="2" />
<text  x="1117.67" y="895.5" ></text>
</g>
<g >
<title>spdlog::source_loc::source_loc (47 samples, 0.01%)</title><rect x="162.5" y="1061" width="0.2" height="15.0" fill="rgb(247,93,9)" rx="2" ry="2" />
<text  x="165.53" y="1071.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (96 samples, 0.02%)</title><rect x="923.7" y="821" width="0.2" height="15.0" fill="rgb(206,205,38)" rx="2" ry="2" />
<text  x="926.66" y="831.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_dest (68 samples, 0.01%)</title><rect x="556.0" y="469" width="0.2" height="15.0" fill="rgb(221,30,49)" rx="2" ry="2" />
<text  x="558.99" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,620 samples, 0.36%)</title><rect x="745.6" y="965" width="4.2" height="15.0" fill="rgb(218,191,15)" rx="2" ry="2" />
<text  x="748.58" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (209 samples, 0.05%)</title><rect x="517.6" y="693" width="0.6" height="15.0" fill="rgb(206,1,39)" rx="2" ry="2" />
<text  x="520.64" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (53 samples, 0.01%)</title><rect x="26.1" y="1301" width="0.1" height="15.0" fill="rgb(219,117,32)" rx="2" ry="2" />
<text  x="29.08" y="1311.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (126 samples, 0.03%)</title><rect x="740.4" y="1013" width="0.4" height="15.0" fill="rgb(227,70,0)" rx="2" ry="2" />
<text  x="743.45" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (118 samples, 0.03%)</title><rect x="742.9" y="1061" width="0.3" height="15.0" fill="rgb(250,29,50)" rx="2" ry="2" />
<text  x="745.94" y="1071.5" ></text>
</g>
<g >
<title>available_idle_cpu (50 samples, 0.01%)</title><rect x="1071.8" y="773" width="0.1" height="15.0" fill="rgb(250,99,11)" rx="2" ry="2" />
<text  x="1074.78" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~_Tuple_impl (107 samples, 0.02%)</title><rect x="625.8" y="869" width="0.3" height="15.0" fill="rgb(226,221,51)" rx="2" ry="2" />
<text  x="628.81" y="879.5" ></text>
</g>
<g >
<title>_IO_new_file_write (9,412 samples, 2.07%)</title><rect x="537.1" y="725" width="24.5" height="15.0" fill="rgb(222,101,27)" rx="2" ry="2" />
<text  x="540.12" y="735.5" >_..</text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::operator (45 samples, 0.01%)</title><rect x="135.8" y="1301" width="0.1" height="15.0" fill="rgb(220,56,10)" rx="2" ry="2" />
<text  x="138.80" y="1311.5" ></text>
</g>
<g >
<title>[[nf_nat]] (143 samples, 0.03%)</title><rect x="191.2" y="421" width="0.4" height="15.0" fill="rgb(227,135,13)" rx="2" ry="2" />
<text  x="194.20" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,718 samples, 2.14%)</title><rect x="1080.3" y="917" width="25.2" height="15.0" fill="rgb(252,22,34)" rx="2" ry="2" />
<text  x="1083.27" y="927.5" >e..</text>
</g>
<g >
<title>__dev_queue_xmit (581 samples, 0.13%)</title><rect x="414.8" y="421" width="1.5" height="15.0" fill="rgb(221,57,40)" rx="2" ry="2" />
<text  x="417.79" y="431.5" ></text>
</g>
<g >
<title>kfree (55 samples, 0.01%)</title><rect x="497.9" y="997" width="0.1" height="15.0" fill="rgb(236,213,43)" rx="2" ry="2" />
<text  x="500.90" y="1007.5" ></text>
</g>
<g >
<title>tty_write (48 samples, 0.01%)</title><rect x="954.2" y="725" width="0.1" height="15.0" fill="rgb(251,87,54)" rx="2" ry="2" />
<text  x="957.22" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (62 samples, 0.01%)</title><rect x="713.9" y="645" width="0.2" height="15.0" fill="rgb(240,64,19)" rx="2" ry="2" />
<text  x="716.92" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (49 samples, 0.01%)</title><rect x="638.8" y="917" width="0.1" height="15.0" fill="rgb(231,107,1)" rx="2" ry="2" />
<text  x="641.78" y="927.5" ></text>
</g>
<g >
<title>locks_remove_posix (86 samples, 0.02%)</title><rect x="871.8" y="981" width="0.3" height="15.0" fill="rgb(214,45,26)" rx="2" ry="2" />
<text  x="874.83" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (107 samples, 0.02%)</title><rect x="1004.1" y="949" width="0.3" height="15.0" fill="rgb(251,114,19)" rx="2" ry="2" />
<text  x="1007.11" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (248 samples, 0.05%)</title><rect x="689.6" y="885" width="0.6" height="15.0" fill="rgb(235,7,41)" rx="2" ry="2" />
<text  x="692.60" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (218 samples, 0.05%)</title><rect x="305.9" y="613" width="0.5" height="15.0" fill="rgb(236,199,6)" rx="2" ry="2" />
<text  x="308.87" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock (49 samples, 0.01%)</title><rect x="449.7" y="725" width="0.1" height="15.0" fill="rgb(237,198,53)" rx="2" ry="2" />
<text  x="452.65" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (122 samples, 0.03%)</title><rect x="272.5" y="677" width="0.3" height="15.0" fill="rgb(239,66,31)" rx="2" ry="2" />
<text  x="275.48" y="687.5" ></text>
</g>
<g >
<title>select_task_rq_fair (301 samples, 0.07%)</title><rect x="735.5" y="773" width="0.8" height="15.0" fill="rgb(228,114,30)" rx="2" ry="2" />
<text  x="738.51" y="783.5" ></text>
</g>
<g >
<title>sk_reset_timer (342 samples, 0.08%)</title><rect x="199.4" y="213" width="0.9" height="15.0" fill="rgb(217,189,43)" rx="2" ry="2" />
<text  x="202.43" y="223.5" ></text>
</g>
<g >
<title>fmt::v8::detail::make_checked&lt;char&gt; (233 samples, 0.05%)</title><rect x="50.2" y="1301" width="0.6" height="15.0" fill="rgb(242,100,28)" rx="2" ry="2" />
<text  x="53.24" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (347 samples, 0.08%)</title><rect x="423.6" y="405" width="0.9" height="15.0" fill="rgb(221,110,24)" rx="2" ry="2" />
<text  x="426.60" y="415.5" ></text>
</g>
<g >
<title>task_work_add (96 samples, 0.02%)</title><rect x="826.1" y="933" width="0.2" height="15.0" fill="rgb(246,222,29)" rx="2" ry="2" />
<text  x="829.09" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,410 samples, 1.85%)</title><rect x="315.1" y="645" width="21.8" height="15.0" fill="rgb(249,2,20)" rx="2" ry="2" />
<text  x="318.09" y="655.5" >d..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::function&lt;void  (41 samples, 0.01%)</title><rect x="624.5" y="1077" width="0.1" height="15.0" fill="rgb(209,101,11)" rx="2" ry="2" />
<text  x="627.49" y="1087.5" ></text>
</g>
<g >
<title>tcp_data_queue (341 samples, 0.08%)</title><rect x="183.5" y="485" width="0.9" height="15.0" fill="rgb(237,134,14)" rx="2" ry="2" />
<text  x="186.49" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (157 samples, 0.03%)</title><rect x="781.0" y="981" width="0.4" height="15.0" fill="rgb(221,207,43)" rx="2" ry="2" />
<text  x="783.97" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (343 samples, 0.08%)</title><rect x="75.9" y="1301" width="0.9" height="15.0" fill="rgb(223,166,12)" rx="2" ry="2" />
<text  x="78.86" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (110 samples, 0.02%)</title><rect x="309.4" y="741" width="0.3" height="15.0" fill="rgb(231,19,18)" rx="2" ry="2" />
<text  x="312.41" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,497 samples, 1.65%)</title><rect x="1043.0" y="853" width="19.4" height="15.0" fill="rgb(222,126,33)" rx="2" ry="2" />
<text  x="1045.96" y="863.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,218 samples, 0.27%)</title><rect x="730.6" y="901" width="3.2" height="15.0" fill="rgb(208,92,7)" rx="2" ry="2" />
<text  x="733.60" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (175 samples, 0.04%)</title><rect x="518.8" y="773" width="0.5" height="15.0" fill="rgb(213,45,26)" rx="2" ry="2" />
<text  x="521.80" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (61 samples, 0.01%)</title><rect x="153.2" y="1301" width="0.2" height="15.0" fill="rgb(228,46,47)" rx="2" ry="2" />
<text  x="156.21" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (213 samples, 0.05%)</title><rect x="918.1" y="949" width="0.5" height="15.0" fill="rgb(228,187,32)" rx="2" ry="2" />
<text  x="921.08" y="959.5" ></text>
</g>
<g >
<title>iput (71 samples, 0.02%)</title><rect x="1083.6" y="805" width="0.2" height="15.0" fill="rgb(251,150,36)" rx="2" ry="2" />
<text  x="1086.61" y="815.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (40 samples, 0.01%)</title><rect x="1020.1" y="1077" width="0.1" height="15.0" fill="rgb(242,52,45)" rx="2" ry="2" />
<text  x="1023.11" y="1087.5" ></text>
</g>
<g >
<title>dget_parent (43 samples, 0.01%)</title><rect x="875.5" y="965" width="0.1" height="15.0" fill="rgb(238,180,9)" rx="2" ry="2" />
<text  x="878.52" y="975.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (45 samples, 0.01%)</title><rect x="978.7" y="965" width="0.1" height="15.0" fill="rgb(240,142,22)" rx="2" ry="2" />
<text  x="981.71" y="975.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (70 samples, 0.02%)</title><rect x="254.9" y="885" width="0.1" height="15.0" fill="rgb(207,164,5)" rx="2" ry="2" />
<text  x="257.85" y="895.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (846 samples, 0.19%)</title><rect x="619.8" y="901" width="2.2" height="15.0" fill="rgb(244,67,50)" rx="2" ry="2" />
<text  x="622.76" y="911.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (211 samples, 0.05%)</title><rect x="917.0" y="837" width="0.6" height="15.0" fill="rgb(238,103,5)" rx="2" ry="2" />
<text  x="920.03" y="847.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (1,271 samples, 0.28%)</title><rect x="594.4" y="757" width="3.3" height="15.0" fill="rgb(218,151,47)" rx="2" ry="2" />
<text  x="597.38" y="767.5" ></text>
</g>
<g >
<title>wake_up_bit (159 samples, 0.04%)</title><rect x="178.8" y="581" width="0.4" height="15.0" fill="rgb(217,120,48)" rx="2" ry="2" />
<text  x="181.76" y="591.5" ></text>
</g>
<g >
<title>__strlen_avx2 (91 samples, 0.02%)</title><rect x="771.6" y="1013" width="0.3" height="15.0" fill="rgb(254,180,21)" rx="2" ry="2" />
<text  x="774.63" y="1023.5" ></text>
</g>
<g >
<title>native_write_msr (43 samples, 0.01%)</title><rect x="951.6" y="565" width="0.1" height="15.0" fill="rgb(231,20,15)" rx="2" ry="2" />
<text  x="954.59" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (297 samples, 0.07%)</title><rect x="985.5" y="917" width="0.7" height="15.0" fill="rgb(252,182,27)" rx="2" ry="2" />
<text  x="988.45" y="927.5" ></text>
</g>
<g >
<title>may_open (145 samples, 0.03%)</title><rect x="888.3" y="949" width="0.3" height="15.0" fill="rgb(247,192,36)" rx="2" ry="2" />
<text  x="891.25" y="959.5" ></text>
</g>
<g >
<title>__schedule (1,126 samples, 0.25%)</title><rect x="339.1" y="581" width="3.0" height="15.0" fill="rgb(220,128,53)" rx="2" ry="2" />
<text  x="342.14" y="591.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (252 samples, 0.06%)</title><rect x="786.5" y="1061" width="0.7" height="15.0" fill="rgb(227,134,31)" rx="2" ry="2" />
<text  x="789.53" y="1071.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (163 samples, 0.04%)</title><rect x="461.5" y="853" width="0.5" height="15.0" fill="rgb(234,106,27)" rx="2" ry="2" />
<text  x="464.53" y="863.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (42,175 samples, 9.29%)</title><rect x="512.4" y="981" width="109.6" height="15.0" fill="rgb(207,152,39)" rx="2" ry="2" />
<text  x="515.39" y="991.5" >std::__invoke..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (99 samples, 0.02%)</title><rect x="744.7" y="933" width="0.3" height="15.0" fill="rgb(213,74,13)" rx="2" ry="2" />
<text  x="747.72" y="943.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (64 samples, 0.01%)</title><rect x="983.4" y="965" width="0.1" height="15.0" fill="rgb(228,226,34)" rx="2" ry="2" />
<text  x="986.36" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,050 samples, 1.11%)</title><rect x="590.5" y="805" width="13.1" height="15.0" fill="rgb(237,168,19)" rx="2" ry="2" />
<text  x="593.50" y="815.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (21,352 samples, 4.70%)</title><rect x="1020.2" y="1077" width="55.5" height="15.0" fill="rgb(219,33,23)" rx="2" ry="2" />
<text  x="1023.21" y="1087.5" >spdlo..</text>
</g>
<g >
<title>_int_free (266 samples, 0.06%)</title><rect x="274.5" y="789" width="0.7" height="15.0" fill="rgb(245,92,44)" rx="2" ry="2" />
<text  x="277.53" y="799.5" ></text>
</g>
<g >
<title>_copy_from_user (87 samples, 0.02%)</title><rect x="590.8" y="773" width="0.2" height="15.0" fill="rgb(250,103,52)" rx="2" ry="2" />
<text  x="593.81" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (300 samples, 0.07%)</title><rect x="1175.3" y="1061" width="0.8" height="15.0" fill="rgb(212,123,51)" rx="2" ry="2" />
<text  x="1178.30" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (39 samples, 0.01%)</title><rect x="978.7" y="949" width="0.1" height="15.0" fill="rgb(218,207,28)" rx="2" ry="2" />
<text  x="981.73" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,428 samples, 4.50%)</title><rect x="687.0" y="1061" width="53.1" height="15.0" fill="rgb(208,179,8)" rx="2" ry="2" />
<text  x="690.01" y="1071.5" >spdlo..</text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (52 samples, 0.01%)</title><rect x="765.3" y="1013" width="0.2" height="15.0" fill="rgb(238,121,22)" rx="2" ry="2" />
<text  x="768.33" y="1023.5" ></text>
</g>
<g >
<title>rb_erase (50 samples, 0.01%)</title><rect x="289.5" y="789" width="0.1" height="15.0" fill="rgb(236,75,41)" rx="2" ry="2" />
<text  x="292.45" y="799.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,035 samples, 0.23%)</title><rect x="774.4" y="949" width="2.7" height="15.0" fill="rgb(243,224,0)" rx="2" ry="2" />
<text  x="777.37" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (191 samples, 0.04%)</title><rect x="689.7" y="805" width="0.5" height="15.0" fill="rgb(207,101,5)" rx="2" ry="2" />
<text  x="692.74" y="815.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (77 samples, 0.02%)</title><rect x="990.7" y="1013" width="0.2" height="15.0" fill="rgb(236,30,8)" rx="2" ry="2" />
<text  x="993.67" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (288 samples, 0.06%)</title><rect x="994.8" y="853" width="0.8" height="15.0" fill="rgb(226,68,36)" rx="2" ry="2" />
<text  x="997.84" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (229 samples, 0.05%)</title><rect x="991.7" y="949" width="0.6" height="15.0" fill="rgb(210,163,20)" rx="2" ry="2" />
<text  x="994.67" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (141 samples, 0.03%)</title><rect x="11.5" y="1301" width="0.4" height="15.0" fill="rgb(209,95,54)" rx="2" ry="2" />
<text  x="14.55" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::buffer (40 samples, 0.01%)</title><rect x="294.1" y="805" width="0.2" height="15.0" fill="rgb(231,208,46)" rx="2" ry="2" />
<text  x="297.15" y="815.5" ></text>
</g>
<g >
<title>native_write_msr (63 samples, 0.01%)</title><rect x="340.5" y="517" width="0.2" height="15.0" fill="rgb(226,37,14)" rx="2" ry="2" />
<text  x="343.50" y="527.5" ></text>
</g>
<g >
<title>syscall_exit_work (47 samples, 0.01%)</title><rect x="576.8" y="693" width="0.1" height="15.0" fill="rgb(248,144,4)" rx="2" ry="2" />
<text  x="579.76" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (285 samples, 0.06%)</title><rect x="927.5" y="837" width="0.8" height="15.0" fill="rgb(223,154,16)" rx="2" ry="2" />
<text  x="930.52" y="847.5" ></text>
</g>
<g >
<title>tcp_wfree (46 samples, 0.01%)</title><rect x="193.7" y="389" width="0.1" height="15.0" fill="rgb(221,211,26)" rx="2" ry="2" />
<text  x="196.69" y="399.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (842 samples, 0.19%)</title><rect x="406.4" y="485" width="2.2" height="15.0" fill="rgb(240,51,48)" rx="2" ry="2" />
<text  x="409.39" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_write (10,053 samples, 2.21%)</title><rect x="704.3" y="853" width="26.1" height="15.0" fill="rgb(253,165,12)" rx="2" ry="2" />
<text  x="707.27" y="863.5" >_..</text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (124 samples, 0.03%)</title><rect x="350.1" y="805" width="0.3" height="15.0" fill="rgb(249,78,35)" rx="2" ry="2" />
<text  x="353.08" y="815.5" ></text>
</g>
<g >
<title>mutex_unlock (41 samples, 0.01%)</title><rect x="942.7" y="693" width="0.1" height="15.0" fill="rgb(250,76,6)" rx="2" ry="2" />
<text  x="945.71" y="703.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (487 samples, 0.11%)</title><rect x="490.0" y="1013" width="1.2" height="15.0" fill="rgb(237,221,52)" rx="2" ry="2" />
<text  x="492.98" y="1023.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (48 samples, 0.01%)</title><rect x="1144.4" y="1045" width="0.2" height="15.0" fill="rgb(244,43,0)" rx="2" ry="2" />
<text  x="1147.44" y="1055.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::HttpConnection*&gt;::tuple&lt;webserver::HttpConnection*, true, true&gt; (100 samples, 0.02%)</title><rect x="605.5" y="869" width="0.3" height="15.0" fill="rgb(205,111,21)" rx="2" ry="2" />
<text  x="608.50" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (246 samples, 0.05%)</title><rect x="1169.9" y="949" width="0.6" height="15.0" fill="rgb(219,56,41)" rx="2" ry="2" />
<text  x="1172.87" y="959.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl (64 samples, 0.01%)</title><rect x="1114.7" y="917" width="0.1" height="15.0" fill="rgb(208,105,46)" rx="2" ry="2" />
<text  x="1117.65" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (80 samples, 0.02%)</title><rect x="544.5" y="581" width="0.2" height="15.0" fill="rgb(229,213,51)" rx="2" ry="2" />
<text  x="547.54" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (44 samples, 0.01%)</title><rect x="1171.0" y="1061" width="0.1" height="15.0" fill="rgb(225,159,54)" rx="2" ry="2" />
<text  x="1174.01" y="1071.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (232 samples, 0.05%)</title><rect x="456.6" y="773" width="0.6" height="15.0" fill="rgb(244,225,7)" rx="2" ry="2" />
<text  x="459.64" y="783.5" ></text>
</g>
<g >
<title>dget_parent (81 samples, 0.02%)</title><rect x="883.0" y="917" width="0.2" height="15.0" fill="rgb(243,105,54)" rx="2" ry="2" />
<text  x="885.99" y="927.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="694.5" y="821" width="0.2" height="15.0" fill="rgb(252,151,28)" rx="2" ry="2" />
<text  x="697.54" y="831.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt; const&amp;&gt; (277 samples, 0.06%)</title><rect x="505.4" y="1061" width="0.8" height="15.0" fill="rgb(247,178,47)" rx="2" ry="2" />
<text  x="508.44" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (810 samples, 0.18%)</title><rect x="907.5" y="1029" width="2.1" height="15.0" fill="rgb(253,224,4)" rx="2" ry="2" />
<text  x="910.54" y="1039.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::formatter*, false&gt;::_M_head (190 samples, 0.04%)</title><rect x="71.5" y="1301" width="0.5" height="15.0" fill="rgb(246,157,21)" rx="2" ry="2" />
<text  x="74.51" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (725 samples, 0.16%)</title><rect x="688.4" y="997" width="1.9" height="15.0" fill="rgb(226,56,8)" rx="2" ry="2" />
<text  x="691.42" y="1007.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (200 samples, 0.04%)</title><rect x="530.7" y="741" width="0.6" height="15.0" fill="rgb(216,62,16)" rx="2" ry="2" />
<text  x="533.74" y="751.5" ></text>
</g>
<g >
<title>[[nf_nat]] (61 samples, 0.01%)</title><rect x="212.6" y="293" width="0.1" height="15.0" fill="rgb(212,74,31)" rx="2" ry="2" />
<text  x="215.56" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_work (103 samples, 0.02%)</title><rect x="851.1" y="997" width="0.3" height="15.0" fill="rgb(225,170,12)" rx="2" ry="2" />
<text  x="854.13" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (436 samples, 0.10%)</title><rect x="648.5" y="933" width="1.2" height="15.0" fill="rgb(223,226,53)" rx="2" ry="2" />
<text  x="651.54" y="943.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (79 samples, 0.02%)</title><rect x="548.0" y="533" width="0.2" height="15.0" fill="rgb(245,188,8)" rx="2" ry="2" />
<text  x="550.99" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (400 samples, 0.09%)</title><rect x="983.0" y="1045" width="1.0" height="15.0" fill="rgb(226,143,31)" rx="2" ry="2" />
<text  x="986.00" y="1055.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (176 samples, 0.04%)</title><rect x="930.7" y="821" width="0.5" height="15.0" fill="rgb(219,150,37)" rx="2" ry="2" />
<text  x="933.74" y="831.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (141 samples, 0.03%)</title><rect x="1070.8" y="789" width="0.4" height="15.0" fill="rgb(241,209,12)" rx="2" ry="2" />
<text  x="1073.83" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (55 samples, 0.01%)</title><rect x="281.7" y="869" width="0.1" height="15.0" fill="rgb(242,223,20)" rx="2" ry="2" />
<text  x="284.68" y="879.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (282 samples, 0.06%)</title><rect x="685.0" y="853" width="0.7" height="15.0" fill="rgb(250,35,34)" rx="2" ry="2" />
<text  x="687.99" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (125 samples, 0.03%)</title><rect x="1004.1" y="981" width="0.3" height="15.0" fill="rgb(230,73,8)" rx="2" ry="2" />
<text  x="1007.06" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_bucket_index (45 samples, 0.01%)</title><rect x="351.6" y="869" width="0.2" height="15.0" fill="rgb(248,136,8)" rx="2" ry="2" />
<text  x="354.65" y="879.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (104 samples, 0.02%)</title><rect x="1079.6" y="997" width="0.3" height="15.0" fill="rgb(233,108,54)" rx="2" ry="2" />
<text  x="1082.62" y="1007.5" ></text>
</g>
<g >
<title>enqueue_task (819 samples, 0.18%)</title><rect x="573.6" y="613" width="2.1" height="15.0" fill="rgb(253,188,6)" rx="2" ry="2" />
<text  x="576.58" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (211 samples, 0.05%)</title><rect x="910.7" y="1013" width="0.6" height="15.0" fill="rgb(220,135,10)" rx="2" ry="2" />
<text  x="913.71" y="1023.5" ></text>
</g>
<g >
<title>std::mutex::unlock (176 samples, 0.04%)</title><rect x="151.6" y="1253" width="0.4" height="15.0" fill="rgb(224,106,10)" rx="2" ry="2" />
<text  x="154.58" y="1263.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (611 samples, 0.13%)</title><rect x="1162.0" y="901" width="1.6" height="15.0" fill="rgb(243,39,39)" rx="2" ry="2" />
<text  x="1165.03" y="911.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (59 samples, 0.01%)</title><rect x="1025.9" y="821" width="0.2" height="15.0" fill="rgb(241,229,51)" rx="2" ry="2" />
<text  x="1028.90" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::get (68 samples, 0.01%)</title><rect x="164.9" y="1093" width="0.1" height="15.0" fill="rgb(220,171,37)" rx="2" ry="2" />
<text  x="167.87" y="1103.5" ></text>
</g>
<g >
<title>__sys_accept4 (7,968 samples, 1.75%)</title><rect x="1146.0" y="1013" width="20.7" height="15.0" fill="rgb(250,145,54)" rx="2" ry="2" />
<text  x="1149.03" y="1023.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (41 samples, 0.01%)</title><rect x="153.7" y="1301" width="0.1" height="15.0" fill="rgb(212,49,27)" rx="2" ry="2" />
<text  x="156.67" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (4,328 samples, 0.95%)</title><rect x="590.6" y="789" width="11.3" height="15.0" fill="rgb(233,207,29)" rx="2" ry="2" />
<text  x="593.61" y="799.5" ></text>
</g>
<g >
<title>__switch_to_asm (64 samples, 0.01%)</title><rect x="466.6" y="1077" width="0.1" height="15.0" fill="rgb(238,43,4)" rx="2" ry="2" />
<text  x="469.58" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (76 samples, 0.02%)</title><rect x="930.3" y="821" width="0.2" height="15.0" fill="rgb(229,154,29)" rx="2" ry="2" />
<text  x="933.33" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::end (73 samples, 0.02%)</title><rect x="629.1" y="1093" width="0.2" height="15.0" fill="rgb(212,34,12)" rx="2" ry="2" />
<text  x="632.15" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (158 samples, 0.03%)</title><rect x="580.3" y="869" width="0.4" height="15.0" fill="rgb(223,178,25)" rx="2" ry="2" />
<text  x="583.28" y="879.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (57 samples, 0.01%)</title><rect x="918.4" y="901" width="0.2" height="15.0" fill="rgb(223,147,5)" rx="2" ry="2" />
<text  x="921.41" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (79 samples, 0.02%)</title><rect x="513.2" y="933" width="0.2" height="15.0" fill="rgb(222,201,14)" rx="2" ry="2" />
<text  x="516.19" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (250 samples, 0.06%)</title><rect x="310.5" y="725" width="0.6" height="15.0" fill="rgb(210,185,33)" rx="2" ry="2" />
<text  x="313.47" y="735.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21,353 samples, 4.70%)</title><rect x="292.9" y="885" width="55.5" height="15.0" fill="rgb(230,39,33)" rx="2" ry="2" />
<text  x="295.92" y="895.5" >spdlo..</text>
</g>
<g >
<title>std::__shared_count&lt; (140 samples, 0.03%)</title><rect x="505.8" y="1013" width="0.4" height="15.0" fill="rgb(219,228,40)" rx="2" ry="2" />
<text  x="508.79" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::value&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::value (45 samples, 0.01%)</title><rect x="519.5" y="805" width="0.1" height="15.0" fill="rgb(252,129,6)" rx="2" ry="2" />
<text  x="522.52" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,700 samples, 0.37%)</title><rect x="338.6" y="693" width="4.4" height="15.0" fill="rgb(237,198,36)" rx="2" ry="2" />
<text  x="341.60" y="703.5" ></text>
</g>
<g >
<title>__fget_files (149 samples, 0.03%)</title><rect x="315.7" y="581" width="0.3" height="15.0" fill="rgb(229,18,39)" rx="2" ry="2" />
<text  x="318.66" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (489 samples, 0.11%)</title><rect x="999.9" y="917" width="1.3" height="15.0" fill="rgb(221,145,27)" rx="2" ry="2" />
<text  x="1002.93" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (138 samples, 0.03%)</title><rect x="1108.9" y="917" width="0.3" height="15.0" fill="rgb(220,148,41)" rx="2" ry="2" />
<text  x="1111.89" y="927.5" ></text>
</g>
<g >
<title>enqueue_task (1,100 samples, 0.24%)</title><rect x="552.7" y="501" width="2.9" height="15.0" fill="rgb(233,154,45)" rx="2" ry="2" />
<text  x="555.72" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (189 samples, 0.04%)</title><rect x="282.4" y="821" width="0.5" height="15.0" fill="rgb(234,72,43)" rx="2" ry="2" />
<text  x="285.43" y="831.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (690 samples, 0.15%)</title><rect x="783.9" y="1029" width="1.7" height="15.0" fill="rgb(254,21,43)" rx="2" ry="2" />
<text  x="786.85" y="1039.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="646.7" y="821" width="0.2" height="15.0" fill="rgb(238,5,2)" rx="2" ry="2" />
<text  x="649.73" y="831.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2,102 samples, 0.46%)</title><rect x="1069.3" y="949" width="5.4" height="15.0" fill="rgb(207,196,8)" rx="2" ry="2" />
<text  x="1072.29" y="959.5" ></text>
</g>
<g >
<title>clear_inode (76 samples, 0.02%)</title><rect x="178.0" y="581" width="0.2" height="15.0" fill="rgb(241,185,10)" rx="2" ry="2" />
<text  x="181.03" y="591.5" ></text>
</g>
<g >
<title>inode_permission (46 samples, 0.01%)</title><rect x="888.4" y="933" width="0.2" height="15.0" fill="rgb(220,144,31)" rx="2" ry="2" />
<text  x="891.45" y="943.5" ></text>
</g>
<g >
<title>psi_task_change (172 samples, 0.04%)</title><rect x="555.1" y="485" width="0.5" height="15.0" fill="rgb(210,92,0)" rx="2" ry="2" />
<text  x="558.13" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (86 samples, 0.02%)</title><rect x="95.5" y="1301" width="0.2" height="15.0" fill="rgb(246,6,13)" rx="2" ry="2" />
<text  x="98.50" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (88 samples, 0.02%)</title><rect x="776.4" y="901" width="0.2" height="15.0" fill="rgb(229,68,51)" rx="2" ry="2" />
<text  x="779.38" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (157 samples, 0.03%)</title><rect x="91.4" y="1301" width="0.4" height="15.0" fill="rgb(246,44,41)" rx="2" ry="2" />
<text  x="94.38" y="1311.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::function&lt;void  (79 samples, 0.02%)</title><rect x="113.1" y="1301" width="0.2" height="15.0" fill="rgb(219,18,12)" rx="2" ry="2" />
<text  x="116.07" y="1311.5" ></text>
</g>
<g >
<title>lookup_fast.constprop.0 (196 samples, 0.04%)</title><rect x="887.2" y="917" width="0.5" height="15.0" fill="rgb(239,148,27)" rx="2" ry="2" />
<text  x="890.23" y="927.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (1,102 samples, 0.24%)</title><rect x="188.2" y="421" width="2.9" height="15.0" fill="rgb(208,136,26)" rx="2" ry="2" />
<text  x="191.20" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (107 samples, 0.02%)</title><rect x="992.0" y="933" width="0.3" height="15.0" fill="rgb(222,86,43)" rx="2" ry="2" />
<text  x="994.98" y="943.5" ></text>
</g>
<g >
<title>select_task_rq_fair (476 samples, 0.10%)</title><rect x="204.1" y="117" width="1.2" height="15.0" fill="rgb(219,180,0)" rx="2" ry="2" />
<text  x="207.08" y="127.5" ></text>
</g>
<g >
<title>ip_rcv (323 samples, 0.07%)</title><rect x="1086.2" y="485" width="0.9" height="15.0" fill="rgb(236,63,15)" rx="2" ry="2" />
<text  x="1089.24" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (323 samples, 0.07%)</title><rect x="893.7" y="1029" width="0.8" height="15.0" fill="rgb(236,9,13)" rx="2" ry="2" />
<text  x="896.68" y="1039.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (83 samples, 0.02%)</title><rect x="965.1" y="709" width="0.2" height="15.0" fill="rgb(244,74,23)" rx="2" ry="2" />
<text  x="968.11" y="719.5" ></text>
</g>
<g >
<title>__sk_dst_check (68 samples, 0.01%)</title><rect x="187.1" y="469" width="0.2" height="15.0" fill="rgb(226,179,33)" rx="2" ry="2" />
<text  x="190.08" y="479.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,080 samples, 0.46%)</title><rect x="337.9" y="757" width="5.4" height="15.0" fill="rgb(238,206,8)" rx="2" ry="2" />
<text  x="340.89" y="767.5" ></text>
</g>
<g >
<title>tcp_close (7,738 samples, 1.70%)</title><rect x="1085.2" y="773" width="20.1" height="15.0" fill="rgb(251,28,44)" rx="2" ry="2" />
<text  x="1088.15" y="783.5" ></text>
</g>
<g >
<title>_find_next_bit (39 samples, 0.01%)</title><rect x="662.5" y="629" width="0.1" height="15.0" fill="rgb(211,43,3)" rx="2" ry="2" />
<text  x="665.46" y="639.5" ></text>
</g>
<g >
<title>security_file_free (53 samples, 0.01%)</title><rect x="850.5" y="949" width="0.1" height="15.0" fill="rgb(234,216,21)" rx="2" ry="2" />
<text  x="853.47" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (19,891 samples, 4.38%)</title><rect x="635.0" y="997" width="51.7" height="15.0" fill="rgb(231,163,4)" rx="2" ry="2" />
<text  x="638.03" y="1007.5" >spdlo..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (201 samples, 0.04%)</title><rect x="258.0" y="869" width="0.5" height="15.0" fill="rgb(244,97,35)" rx="2" ry="2" />
<text  x="261.01" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (110 samples, 0.02%)</title><rect x="694.7" y="901" width="0.3" height="15.0" fill="rgb(251,60,16)" rx="2" ry="2" />
<text  x="697.74" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (374 samples, 0.08%)</title><rect x="596.5" y="693" width="1.0" height="15.0" fill="rgb(247,10,23)" rx="2" ry="2" />
<text  x="599.53" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (130 samples, 0.03%)</title><rect x="1108.9" y="885" width="0.3" height="15.0" fill="rgb(227,157,54)" rx="2" ry="2" />
<text  x="1111.91" y="895.5" ></text>
</g>
<g >
<title>net_rx_action (19,517 samples, 4.30%)</title><rect x="393.9" y="661" width="50.7" height="15.0" fill="rgb(252,33,6)" rx="2" ry="2" />
<text  x="396.92" y="671.5" >net_r..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (84 samples, 0.02%)</title><rect x="617.5" y="805" width="0.2" height="15.0" fill="rgb(220,36,4)" rx="2" ry="2" />
<text  x="620.46" y="815.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (3,463 samples, 0.76%)</title><rect x="408.6" y="485" width="9.0" height="15.0" fill="rgb(253,151,47)" rx="2" ry="2" />
<text  x="411.58" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1,125 samples, 0.25%)</title><rect x="979.1" y="1045" width="2.9" height="15.0" fill="rgb(207,116,33)" rx="2" ry="2" />
<text  x="982.12" y="1055.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (44 samples, 0.01%)</title><rect x="579.3" y="869" width="0.1" height="15.0" fill="rgb(230,35,47)" rx="2" ry="2" />
<text  x="582.29" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (46 samples, 0.01%)</title><rect x="165.2" y="1045" width="0.1" height="15.0" fill="rgb(250,29,33)" rx="2" ry="2" />
<text  x="168.23" y="1055.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::formatter*, std::default_delete&lt;spdlog::formatter&gt; &gt; (133 samples, 0.03%)</title><rect x="125.1" y="1301" width="0.3" height="15.0" fill="rgb(237,70,0)" rx="2" ry="2" />
<text  x="128.06" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="646.7" y="885" width="0.2" height="15.0" fill="rgb(237,111,33)" rx="2" ry="2" />
<text  x="649.67" y="895.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (11,447 samples, 2.52%)</title><rect x="186.1" y="501" width="29.8" height="15.0" fill="rgb(228,204,31)" rx="2" ry="2" />
<text  x="189.12" y="511.5" >__..</text>
</g>
<g >
<title>__perf_event_task_sched_in (47 samples, 0.01%)</title><rect x="1133.1" y="885" width="0.1" height="15.0" fill="rgb(245,10,53)" rx="2" ry="2" />
<text  x="1136.09" y="895.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (136 samples, 0.03%)</title><rect x="976.0" y="901" width="0.3" height="15.0" fill="rgb(229,165,45)" rx="2" ry="2" />
<text  x="978.99" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (223 samples, 0.05%)</title><rect x="701.6" y="933" width="0.6" height="15.0" fill="rgb(244,189,43)" rx="2" ry="2" />
<text  x="704.64" y="943.5" ></text>
</g>
<g >
<title>perf_output_begin (254 samples, 0.06%)</title><rect x="811.6" y="885" width="0.7" height="15.0" fill="rgb(213,121,9)" rx="2" ry="2" />
<text  x="814.63" y="895.5" ></text>
</g>
<g >
<title>update_load_avg (58 samples, 0.01%)</title><rect x="1072.6" y="725" width="0.1" height="15.0" fill="rgb(232,31,12)" rx="2" ry="2" />
<text  x="1075.56" y="735.5" ></text>
</g>
<g >
<title>__fsnotify_parent (338 samples, 0.07%)</title><rect x="882.7" y="933" width="0.9" height="15.0" fill="rgb(223,205,5)" rx="2" ry="2" />
<text  x="885.69" y="943.5" ></text>
</g>
<g >
<title>[[br_netfilter]] (48 samples, 0.01%)</title><rect x="212.2" y="293" width="0.2" height="15.0" fill="rgb(244,26,51)" rx="2" ry="2" />
<text  x="215.24" y="303.5" ></text>
</g>
<g >
<title>__libc_recv (160 samples, 0.04%)</title><rect x="156.7" y="1285" width="0.4" height="15.0" fill="rgb(235,152,5)" rx="2" ry="2" />
<text  x="159.73" y="1295.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (100 samples, 0.02%)</title><rect x="923.6" y="837" width="0.3" height="15.0" fill="rgb(243,92,50)" rx="2" ry="2" />
<text  x="926.65" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (92 samples, 0.02%)</title><rect x="639.8" y="869" width="0.2" height="15.0" fill="rgb(254,32,33)" rx="2" ry="2" />
<text  x="642.76" y="879.5" ></text>
</g>
<g >
<title>__fget_files (255 samples, 0.06%)</title><rect x="469.7" y="997" width="0.6" height="15.0" fill="rgb(242,75,52)" rx="2" ry="2" />
<text  x="472.68" y="1007.5" ></text>
</g>
<g >
<title>d_path (672 samples, 0.15%)</title><rect x="803.1" y="933" width="1.8" height="15.0" fill="rgb(234,82,23)" rx="2" ry="2" />
<text  x="806.11" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (135 samples, 0.03%)</title><rect x="1002.9" y="965" width="0.4" height="15.0" fill="rgb(233,10,52)" rx="2" ry="2" />
<text  x="1005.93" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (2,957 samples, 0.65%)</title><rect x="984.7" y="1045" width="7.7" height="15.0" fill="rgb(209,62,4)" rx="2" ry="2" />
<text  x="987.72" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (90 samples, 0.02%)</title><rect x="643.7" y="853" width="0.3" height="15.0" fill="rgb(221,97,13)" rx="2" ry="2" />
<text  x="646.72" y="863.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_deallocate (489 samples, 0.11%)</title><rect x="224.7" y="1045" width="1.3" height="15.0" fill="rgb(248,48,27)" rx="2" ry="2" />
<text  x="227.70" y="1055.5" ></text>
</g>
<g >
<title>pty_write (1,721 samples, 0.38%)</title><rect x="710.5" y="709" width="4.5" height="15.0" fill="rgb(206,70,6)" rx="2" ry="2" />
<text  x="713.48" y="719.5" ></text>
</g>
<g >
<title>release_sock (40 samples, 0.01%)</title><rect x="1154.5" y="965" width="0.1" height="15.0" fill="rgb(217,133,41)" rx="2" ry="2" />
<text  x="1157.49" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (180 samples, 0.04%)</title><rect x="580.8" y="869" width="0.5" height="15.0" fill="rgb(224,165,10)" rx="2" ry="2" />
<text  x="583.80" y="879.5" ></text>
</g>
<g >
<title>psi_task_change (1,186 samples, 0.26%)</title><rect x="433.1" y="373" width="3.0" height="15.0" fill="rgb(249,198,24)" rx="2" ry="2" />
<text  x="436.05" y="383.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (88 samples, 0.02%)</title><rect x="1031.8" y="869" width="0.2" height="15.0" fill="rgb(239,34,31)" rx="2" ry="2" />
<text  x="1034.76" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (39 samples, 0.01%)</title><rect x="534.3" y="789" width="0.1" height="15.0" fill="rgb(217,15,9)" rx="2" ry="2" />
<text  x="537.25" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (41 samples, 0.01%)</title><rect x="277.1" y="885" width="0.1" height="15.0" fill="rgb(250,156,7)" rx="2" ry="2" />
<text  x="280.08" y="895.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (5,541 samples, 1.22%)</title><rect x="475.6" y="1013" width="14.4" height="15.0" fill="rgb(251,201,28)" rx="2" ry="2" />
<text  x="478.59" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,297 samples, 0.29%)</title><rect x="985.0" y="1013" width="3.4" height="15.0" fill="rgb(215,85,52)" rx="2" ry="2" />
<text  x="988.00" y="1023.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (210 samples, 0.05%)</title><rect x="203.5" y="117" width="0.6" height="15.0" fill="rgb(212,39,28)" rx="2" ry="2" />
<text  x="206.53" y="127.5" ></text>
</g>
<g >
<title>std::make_pair&lt;int&amp;, std::shared_ptr&lt;webserver::Channel&gt; const&amp;&gt; (94 samples, 0.02%)</title><rect x="585.8" y="853" width="0.2" height="15.0" fill="rgb(215,152,53)" rx="2" ry="2" />
<text  x="588.75" y="863.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::tuple (181 samples, 0.04%)</title><rect x="1077.5" y="1029" width="0.5" height="15.0" fill="rgb(217,210,35)" rx="2" ry="2" />
<text  x="1080.49" y="1039.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;int, int&gt; (876 samples, 0.19%)</title><rect x="160.6" y="1109" width="2.3" height="15.0" fill="rgb(215,27,13)" rx="2" ry="2" />
<text  x="163.63" y="1119.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (110 samples, 0.02%)</title><rect x="583.3" y="853" width="0.3" height="15.0" fill="rgb(223,149,8)" rx="2" ry="2" />
<text  x="586.33" y="863.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (140 samples, 0.03%)</title><rect x="931.3" y="837" width="0.4" height="15.0" fill="rgb(210,154,32)" rx="2" ry="2" />
<text  x="934.34" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (41 samples, 0.01%)</title><rect x="307.3" y="597" width="0.1" height="15.0" fill="rgb(229,131,48)" rx="2" ry="2" />
<text  x="310.31" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (201 samples, 0.04%)</title><rect x="733.1" y="837" width="0.5" height="15.0" fill="rgb(248,109,53)" rx="2" ry="2" />
<text  x="736.10" y="847.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (68 samples, 0.01%)</title><rect x="471.2" y="1013" width="0.2" height="15.0" fill="rgb(248,72,23)" rx="2" ry="2" />
<text  x="474.19" y="1023.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (87 samples, 0.02%)</title><rect x="1136.2" y="997" width="0.3" height="15.0" fill="rgb(244,82,18)" rx="2" ry="2" />
<text  x="1139.22" y="1007.5" ></text>
</g>
<g >
<title>operator delete (116 samples, 0.03%)</title><rect x="972.3" y="949" width="0.3" height="15.0" fill="rgb(250,159,29)" rx="2" ry="2" />
<text  x="975.30" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (47 samples, 0.01%)</title><rect x="594.1" y="757" width="0.2" height="15.0" fill="rgb(231,95,34)" rx="2" ry="2" />
<text  x="597.13" y="767.5" ></text>
</g>
<g >
<title>netlink_has_listeners (41 samples, 0.01%)</title><rect x="1102.3" y="597" width="0.1" height="15.0" fill="rgb(230,119,4)" rx="2" ry="2" />
<text  x="1105.27" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1221" width="860.0" height="15.0" fill="rgb(205,206,46)" rx="2" ry="2" />
<text  x="161.66" y="1231.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (77 samples, 0.02%)</title><rect x="322.4" y="517" width="0.2" height="15.0" fill="rgb(236,28,50)" rx="2" ry="2" />
<text  x="325.39" y="527.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (248 samples, 0.05%)</title><rect x="1073.9" y="869" width="0.6" height="15.0" fill="rgb(236,203,23)" rx="2" ry="2" />
<text  x="1076.86" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (61 samples, 0.01%)</title><rect x="1142.1" y="901" width="0.2" height="15.0" fill="rgb(213,140,12)" rx="2" ry="2" />
<text  x="1145.14" y="911.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,284 samples, 0.28%)</title><rect x="877.7" y="949" width="3.3" height="15.0" fill="rgb(220,44,31)" rx="2" ry="2" />
<text  x="880.70" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits_inc (43 samples, 0.01%)</title><rect x="923.8" y="789" width="0.1" height="15.0" fill="rgb(208,101,26)" rx="2" ry="2" />
<text  x="926.79" y="799.5" ></text>
</g>
<g >
<title>new_sync_write (7,359 samples, 1.62%)</title><rect x="539.8" y="629" width="19.1" height="15.0" fill="rgb(251,60,42)" rx="2" ry="2" />
<text  x="542.78" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl (58 samples, 0.01%)</title><rect x="1114.7" y="901" width="0.1" height="15.0" fill="rgb(227,76,40)" rx="2" ry="2" />
<text  x="1117.67" y="911.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (44 samples, 0.01%)</title><rect x="732.1" y="709" width="0.1" height="15.0" fill="rgb(240,226,11)" rx="2" ry="2" />
<text  x="735.10" y="719.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (438 samples, 0.10%)</title><rect x="1138.6" y="1045" width="1.1" height="15.0" fill="rgb(242,180,38)" rx="2" ry="2" />
<text  x="1141.57" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (174 samples, 0.04%)</title><rect x="701.8" y="885" width="0.4" height="15.0" fill="rgb(226,20,52)" rx="2" ry="2" />
<text  x="704.75" y="895.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (32,954 samples, 7.26%)</title><rect x="373.7" y="821" width="85.7" height="15.0" fill="rgb(238,21,40)" rx="2" ry="2" />
<text  x="376.74" y="831.5" >tcp_sendms..</text>
</g>
<g >
<title>set_task_cpu (68 samples, 0.01%)</title><rect x="948.3" y="629" width="0.1" height="15.0" fill="rgb(239,40,0)" rx="2" ry="2" />
<text  x="951.26" y="639.5" ></text>
</g>
<g >
<title>update_rq_clock (45 samples, 0.01%)</title><rect x="575.9" y="629" width="0.1" height="15.0" fill="rgb(250,28,40)" rx="2" ry="2" />
<text  x="578.93" y="639.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (104 samples, 0.02%)</title><rect x="525.9" y="725" width="0.3" height="15.0" fill="rgb(252,114,43)" rx="2" ry="2" />
<text  x="528.95" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (57 samples, 0.01%)</title><rect x="629.2" y="1077" width="0.1" height="15.0" fill="rgb(208,125,35)" rx="2" ry="2" />
<text  x="632.17" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (367 samples, 0.08%)</title><rect x="758.7" y="1045" width="0.9" height="15.0" fill="rgb(253,30,29)" rx="2" ry="2" />
<text  x="761.69" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (44 samples, 0.01%)</title><rect x="1144.5" y="1029" width="0.1" height="15.0" fill="rgb(212,99,6)" rx="2" ry="2" />
<text  x="1147.46" y="1039.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (178 samples, 0.04%)</title><rect x="741.0" y="1045" width="0.5" height="15.0" fill="rgb(251,225,49)" rx="2" ry="2" />
<text  x="744.00" y="1055.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (463 samples, 0.10%)</title><rect x="985.3" y="965" width="1.2" height="15.0" fill="rgb(219,61,4)" rx="2" ry="2" />
<text  x="988.26" y="975.5" ></text>
</g>
<g >
<title>tcp_current_mss (154 samples, 0.03%)</title><rect x="220.0" y="517" width="0.4" height="15.0" fill="rgb(238,120,12)" rx="2" ry="2" />
<text  x="223.02" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (73 samples, 0.02%)</title><rect x="765.3" y="1029" width="0.2" height="15.0" fill="rgb(215,104,23)" rx="2" ry="2" />
<text  x="768.28" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (44 samples, 0.01%)</title><rect x="770.5" y="949" width="0.1" height="15.0" fill="rgb(235,219,51)" rx="2" ry="2" />
<text  x="773.53" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (169 samples, 0.04%)</title><rect x="1106.0" y="1013" width="0.4" height="15.0" fill="rgb(223,203,28)" rx="2" ry="2" />
<text  x="1108.96" y="1023.5" ></text>
</g>
<g >
<title>expand_files (46 samples, 0.01%)</title><rect x="876.5" y="965" width="0.2" height="15.0" fill="rgb(223,128,34)" rx="2" ry="2" />
<text  x="879.54" y="975.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (50 samples, 0.01%)</title><rect x="706.7" y="741" width="0.1" height="15.0" fill="rgb(235,94,30)" rx="2" ry="2" />
<text  x="709.65" y="751.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (860 samples, 0.19%)</title><rect x="448.7" y="773" width="2.2" height="15.0" fill="rgb(209,98,29)" rx="2" ry="2" />
<text  x="451.69" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (281 samples, 0.06%)</title><rect x="698.3" y="869" width="0.8" height="15.0" fill="rgb(249,26,47)" rx="2" ry="2" />
<text  x="701.33" y="879.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::handle_write (41 samples, 0.01%)</title><rect x="142.0" y="1301" width="0.1" height="15.0" fill="rgb(205,96,17)" rx="2" ry="2" />
<text  x="145.03" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::data (42 samples, 0.01%)</title><rect x="519.5" y="789" width="0.1" height="15.0" fill="rgb(237,221,43)" rx="2" ry="2" />
<text  x="522.52" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (47 samples, 0.01%)</title><rect x="783.1" y="1013" width="0.1" height="15.0" fill="rgb(212,42,3)" rx="2" ry="2" />
<text  x="786.06" y="1023.5" ></text>
</g>
<g >
<title>native_write_msr (68 samples, 0.01%)</title><rect x="1066.0" y="709" width="0.2" height="15.0" fill="rgb(215,160,47)" rx="2" ry="2" />
<text  x="1069.01" y="719.5" ></text>
</g>
<g >
<title>down_read (61 samples, 0.01%)</title><rect x="1049.8" y="741" width="0.1" height="15.0" fill="rgb(233,29,37)" rx="2" ry="2" />
<text  x="1052.78" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (84 samples, 0.02%)</title><rect x="772.7" y="997" width="0.2" height="15.0" fill="rgb(240,197,29)" rx="2" ry="2" />
<text  x="775.68" y="1007.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (39 samples, 0.01%)</title><rect x="1094.6" y="437" width="0.1" height="15.0" fill="rgb(254,145,49)" rx="2" ry="2" />
<text  x="1097.60" y="447.5" ></text>
</g>
<g >
<title>_IO_new_do_write (7,980 samples, 1.76%)</title><rect x="1042.1" y="917" width="20.7" height="15.0" fill="rgb(239,62,8)" rx="2" ry="2" />
<text  x="1045.11" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (124 samples, 0.03%)</title><rect x="85.0" y="1301" width="0.3" height="15.0" fill="rgb(216,34,23)" rx="2" ry="2" />
<text  x="87.97" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (42 samples, 0.01%)</title><rect x="52.8" y="1301" width="0.1" height="15.0" fill="rgb(215,210,22)" rx="2" ry="2" />
<text  x="55.75" y="1311.5" ></text>
</g>
<g >
<title>_copy_from_iter (104 samples, 0.02%)</title><rect x="541.8" y="597" width="0.2" height="15.0" fill="rgb(242,142,28)" rx="2" ry="2" />
<text  x="544.77" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (236 samples, 0.05%)</title><rect x="94.7" y="1301" width="0.6" height="15.0" fill="rgb(210,65,7)" rx="2" ry="2" />
<text  x="97.67" y="1311.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char [19]&gt; (20,637 samples, 4.54%)</title><rect x="633.2" y="1077" width="53.6" height="15.0" fill="rgb(214,197,41)" rx="2" ry="2" />
<text  x="636.17" y="1087.5" >spdlo..</text>
</g>
<g >
<title>call_rcu (84 samples, 0.02%)</title><rect x="176.6" y="565" width="0.2" height="15.0" fill="rgb(226,212,19)" rx="2" ry="2" />
<text  x="179.56" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (44 samples, 0.01%)</title><rect x="1099.9" y="325" width="0.1" height="15.0" fill="rgb(231,14,47)" rx="2" ry="2" />
<text  x="1102.88" y="335.5" ></text>
</g>
<g >
<title>webserver::Epoll::remove_channel (4,014 samples, 0.88%)</title><rect x="281.9" y="917" width="10.5" height="15.0" fill="rgb(254,199,49)" rx="2" ry="2" />
<text  x="284.92" y="927.5" ></text>
</g>
<g >
<title>cpuacct_charge (57 samples, 0.01%)</title><rect x="431.2" y="325" width="0.1" height="15.0" fill="rgb(253,198,21)" rx="2" ry="2" />
<text  x="434.17" y="335.5" ></text>
</g>
<g >
<title>sched_clock_cpu (48 samples, 0.01%)</title><rect x="194.9" y="373" width="0.2" height="15.0" fill="rgb(239,226,13)" rx="2" ry="2" />
<text  x="197.94" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (88 samples, 0.02%)</title><rect x="894.2" y="997" width="0.3" height="15.0" fill="rgb(217,93,14)" rx="2" ry="2" />
<text  x="897.24" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (144 samples, 0.03%)</title><rect x="516.5" y="821" width="0.3" height="15.0" fill="rgb(234,142,29)" rx="2" ry="2" />
<text  x="519.47" y="831.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (101 samples, 0.02%)</title><rect x="83.4" y="1301" width="0.3" height="15.0" fill="rgb(225,168,43)" rx="2" ry="2" />
<text  x="86.41" y="1311.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (163 samples, 0.04%)</title><rect x="1112.0" y="1077" width="0.4" height="15.0" fill="rgb(211,127,49)" rx="2" ry="2" />
<text  x="1115.00" y="1087.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,058 samples, 0.23%)</title><rect x="948.4" y="629" width="2.8" height="15.0" fill="rgb(254,199,31)" rx="2" ry="2" />
<text  x="951.44" y="639.5" ></text>
</g>
<g >
<title>select_task_rq_fair (912 samples, 0.20%)</title><rect x="425.7" y="405" width="2.4" height="15.0" fill="rgb(245,85,24)" rx="2" ry="2" />
<text  x="428.72" y="415.5" ></text>
</g>
<g >
<title>vfs_open (49 samples, 0.01%)</title><rect x="889.1" y="949" width="0.1" height="15.0" fill="rgb(227,181,50)" rx="2" ry="2" />
<text  x="892.07" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (58 samples, 0.01%)</title><rect x="361.3" y="805" width="0.2" height="15.0" fill="rgb(248,23,34)" rx="2" ry="2" />
<text  x="364.34" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (49 samples, 0.01%)</title><rect x="693.8" y="917" width="0.1" height="15.0" fill="rgb(242,83,54)" rx="2" ry="2" />
<text  x="696.82" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (237 samples, 0.05%)</title><rect x="647.0" y="869" width="0.6" height="15.0" fill="rgb(218,172,2)" rx="2" ry="2" />
<text  x="649.95" y="879.5" ></text>
</g>
<g >
<title>__GI_inet_ntop (1,430 samples, 0.31%)</title><rect x="1171.4" y="1061" width="3.7" height="15.0" fill="rgb(222,14,22)" rx="2" ry="2" />
<text  x="1174.37" y="1071.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;webserver::Channel,  (44 samples, 0.01%)</title><rect x="168.7" y="837" width="0.1" height="15.0" fill="rgb(238,7,5)" rx="2" ry="2" />
<text  x="171.73" y="847.5" ></text>
</g>
<g >
<title>pty_write (3,425 samples, 0.75%)</title><rect x="1050.3" y="741" width="8.9" height="15.0" fill="rgb(241,45,29)" rx="2" ry="2" />
<text  x="1053.34" y="751.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (2,102 samples, 0.46%)</title><rect x="380.9" y="677" width="5.5" height="15.0" fill="rgb(231,142,52)" rx="2" ry="2" />
<text  x="383.92" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (75 samples, 0.02%)</title><rect x="943.2" y="677" width="0.2" height="15.0" fill="rgb(250,62,37)" rx="2" ry="2" />
<text  x="946.22" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (41 samples, 0.01%)</title><rect x="1114.7" y="837" width="0.1" height="15.0" fill="rgb(253,25,52)" rx="2" ry="2" />
<text  x="1117.71" y="847.5" ></text>
</g>
<g >
<title>_copy_to_iter (436 samples, 0.10%)</title><rect x="247.9" y="773" width="1.1" height="15.0" fill="rgb(250,122,0)" rx="2" ry="2" />
<text  x="250.85" y="783.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (109 samples, 0.02%)</title><rect x="104.5" y="1301" width="0.2" height="15.0" fill="rgb(243,38,51)" rx="2" ry="2" />
<text  x="107.46" y="1311.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (104 samples, 0.02%)</title><rect x="965.1" y="741" width="0.2" height="15.0" fill="rgb(226,227,3)" rx="2" ry="2" />
<text  x="968.05" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (1,367 samples, 0.30%)</title><rect x="624.0" y="1093" width="3.6" height="15.0" fill="rgb(234,17,51)" rx="2" ry="2" />
<text  x="627.00" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (73 samples, 0.02%)</title><rect x="646.7" y="837" width="0.2" height="15.0" fill="rgb(243,192,26)" rx="2" ry="2" />
<text  x="649.72" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (48 samples, 0.01%)</title><rect x="93.3" y="1301" width="0.1" height="15.0" fill="rgb(230,196,20)" rx="2" ry="2" />
<text  x="96.26" y="1311.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (650 samples, 0.14%)</title><rect x="1163.8" y="949" width="1.7" height="15.0" fill="rgb(223,6,41)" rx="2" ry="2" />
<text  x="1166.81" y="959.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (65 samples, 0.01%)</title><rect x="772.7" y="981" width="0.2" height="15.0" fill="rgb(224,122,10)" rx="2" ry="2" />
<text  x="775.73" y="991.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="1038.2" y="853" width="0.2" height="15.0" fill="rgb(219,228,5)" rx="2" ry="2" />
<text  x="1041.21" y="863.5" ></text>
</g>
<g >
<title>update_load_avg (42 samples, 0.01%)</title><rect x="565.8" y="581" width="0.1" height="15.0" fill="rgb(236,213,31)" rx="2" ry="2" />
<text  x="568.80" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (309 samples, 0.07%)</title><rect x="1152.1" y="933" width="0.8" height="15.0" fill="rgb(234,190,3)" rx="2" ry="2" />
<text  x="1155.13" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::size (84 samples, 0.02%)</title><rect x="505.0" y="1093" width="0.2" height="15.0" fill="rgb(213,220,21)" rx="2" ry="2" />
<text  x="508.00" y="1103.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (76 samples, 0.02%)</title><rect x="363.4" y="917" width="0.2" height="15.0" fill="rgb(240,219,8)" rx="2" ry="2" />
<text  x="366.39" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (53 samples, 0.01%)</title><rect x="77.1" y="1301" width="0.1" height="15.0" fill="rgb(225,10,12)" rx="2" ry="2" />
<text  x="80.09" y="1311.5" ></text>
</g>
<g >
<title>netif_rx (82 samples, 0.02%)</title><rect x="1092.0" y="597" width="0.2" height="15.0" fill="rgb(214,219,14)" rx="2" ry="2" />
<text  x="1095.03" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (89 samples, 0.02%)</title><rect x="578.9" y="869" width="0.2" height="15.0" fill="rgb(205,64,27)" rx="2" ry="2" />
<text  x="581.87" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_S_max_size (104 samples, 0.02%)</title><rect x="138.0" y="1301" width="0.3" height="15.0" fill="rgb(223,139,5)" rx="2" ry="2" />
<text  x="140.98" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_ptr (50 samples, 0.01%)</title><rect x="504.5" y="1029" width="0.1" height="15.0" fill="rgb(234,18,39)" rx="2" ry="2" />
<text  x="507.51" y="1039.5" ></text>
</g>
<g >
<title>pick_next_task_fair (185 samples, 0.04%)</title><rect x="675.7" y="741" width="0.4" height="15.0" fill="rgb(235,183,21)" rx="2" ry="2" />
<text  x="678.66" y="751.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;webserver::Channel&gt; (229 samples, 0.05%)</title><rect x="1109.7" y="853" width="0.6" height="15.0" fill="rgb(243,197,53)" rx="2" ry="2" />
<text  x="1112.72" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (155 samples, 0.03%)</title><rect x="1109.9" y="773" width="0.4" height="15.0" fill="rgb(241,173,21)" rx="2" ry="2" />
<text  x="1112.85" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (93 samples, 0.02%)</title><rect x="121.2" y="1301" width="0.2" height="15.0" fill="rgb(206,37,1)" rx="2" ry="2" />
<text  x="124.16" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (50 samples, 0.01%)</title><rect x="63.7" y="1301" width="0.1" height="15.0" fill="rgb(234,66,10)" rx="2" ry="2" />
<text  x="66.67" y="1311.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::_M_ptr (98 samples, 0.02%)</title><rect x="110.9" y="1301" width="0.3" height="15.0" fill="rgb(211,188,40)" rx="2" ry="2" />
<text  x="113.90" y="1311.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (46 samples, 0.01%)</title><rect x="314.7" y="661" width="0.1" height="15.0" fill="rgb(239,92,24)" rx="2" ry="2" />
<text  x="317.72" y="671.5" ></text>
</g>
<g >
<title>_IO_new_file_write (820 samples, 0.18%)</title><rect x="1187.1" y="1237" width="2.2" height="15.0" fill="rgb(244,9,5)" rx="2" ry="2" />
<text  x="1190.13" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (80 samples, 0.02%)</title><rect x="170.3" y="805" width="0.2" height="15.0" fill="rgb(229,61,49)" rx="2" ry="2" />
<text  x="173.26" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (1,631 samples, 0.36%)</title><rect x="1022.0" y="1013" width="4.2" height="15.0" fill="rgb(209,143,29)" rx="2" ry="2" />
<text  x="1024.96" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (352 samples, 0.08%)</title><rect x="1023.3" y="933" width="0.9" height="15.0" fill="rgb(224,41,18)" rx="2" ry="2" />
<text  x="1026.29" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (70 samples, 0.02%)</title><rect x="1021.5" y="1013" width="0.2" height="15.0" fill="rgb(228,32,8)" rx="2" ry="2" />
<text  x="1024.53" y="1023.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (65 samples, 0.01%)</title><rect x="297.3" y="613" width="0.2" height="15.0" fill="rgb(219,68,1)" rx="2" ry="2" />
<text  x="300.35" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt;::deallocate (106 samples, 0.02%)</title><rect x="349.7" y="773" width="0.3" height="15.0" fill="rgb(251,29,41)" rx="2" ry="2" />
<text  x="352.73" y="783.5" ></text>
</g>
<g >
<title>netif_skb_features (55 samples, 0.01%)</title><rect x="392.0" y="677" width="0.1" height="15.0" fill="rgb(232,67,49)" rx="2" ry="2" />
<text  x="395.00" y="687.5" ></text>
</g>
<g >
<title>[[nf_nat]] (98 samples, 0.02%)</title><rect x="413.8" y="405" width="0.3" height="15.0" fill="rgb(235,15,27)" rx="2" ry="2" />
<text  x="416.82" y="415.5" ></text>
</g>
<g >
<title>psi_task_change (120 samples, 0.03%)</title><rect x="1057.1" y="645" width="0.3" height="15.0" fill="rgb(228,179,16)" rx="2" ry="2" />
<text  x="1060.07" y="655.5" ></text>
</g>
<g >
<title>__sk_dst_check (125 samples, 0.03%)</title><rect x="378.0" y="741" width="0.3" height="15.0" fill="rgb(239,210,4)" rx="2" ry="2" />
<text  x="380.97" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (86 samples, 0.02%)</title><rect x="1079.7" y="949" width="0.2" height="15.0" fill="rgb(217,157,26)" rx="2" ry="2" />
<text  x="1082.67" y="959.5" ></text>
</g>
<g >
<title>do_softirq (20,124 samples, 4.43%)</title><rect x="392.4" y="693" width="52.3" height="15.0" fill="rgb(234,99,24)" rx="2" ry="2" />
<text  x="395.41" y="703.5" >do_so..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75 samples, 0.02%)</title><rect x="284.4" y="853" width="0.2" height="15.0" fill="rgb(242,144,8)" rx="2" ry="2" />
<text  x="287.39" y="863.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (7,247 samples, 1.60%)</title><rect x="194.2" y="437" width="18.9" height="15.0" fill="rgb(236,156,8)" rx="2" ry="2" />
<text  x="197.23" y="447.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (42 samples, 0.01%)</title><rect x="298.1" y="805" width="0.1" height="15.0" fill="rgb(240,190,40)" rx="2" ry="2" />
<text  x="301.09" y="815.5" ></text>
</g>
<g >
<title>locks_remove_posix (47 samples, 0.01%)</title><rect x="1080.8" y="853" width="0.1" height="15.0" fill="rgb(236,191,50)" rx="2" ry="2" />
<text  x="1083.77" y="863.5" ></text>
</g>
<g >
<title>std::mutex::lock (82 samples, 0.02%)</title><rect x="129.3" y="1301" width="0.2" height="15.0" fill="rgb(219,88,50)" rx="2" ry="2" />
<text  x="132.26" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (252 samples, 0.06%)</title><rect x="916.9" y="853" width="0.7" height="15.0" fill="rgb(223,221,20)" rx="2" ry="2" />
<text  x="919.92" y="863.5" ></text>
</g>
<g >
<title>futex_wake (1,936 samples, 0.43%)</title><rect x="571.0" y="677" width="5.0" height="15.0" fill="rgb(218,83,7)" rx="2" ry="2" />
<text  x="574.02" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10,224 samples, 2.25%)</title><rect x="1079.2" y="1045" width="26.5" height="15.0" fill="rgb(214,173,28)" rx="2" ry="2" />
<text  x="1082.18" y="1055.5" >s..</text>
</g>
<g >
<title>syscall_exit_work (58 samples, 0.01%)</title><rect x="267.0" y="805" width="0.2" height="15.0" fill="rgb(249,41,52)" rx="2" ry="2" />
<text  x="270.02" y="815.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (48 samples, 0.01%)</title><rect x="144.6" y="1301" width="0.1" height="15.0" fill="rgb(215,147,49)" rx="2" ry="2" />
<text  x="147.57" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::get (110 samples, 0.02%)</title><rect x="165.1" y="1093" width="0.3" height="15.0" fill="rgb(211,128,46)" rx="2" ry="2" />
<text  x="168.09" y="1103.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (261 samples, 0.06%)</title><rect x="660.3" y="629" width="0.7" height="15.0" fill="rgb(222,29,1)" rx="2" ry="2" />
<text  x="663.34" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (138 samples, 0.03%)</title><rect x="1121.3" y="869" width="0.4" height="15.0" fill="rgb(206,25,23)" rx="2" ry="2" />
<text  x="1124.32" y="879.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (151 samples, 0.03%)</title><rect x="176.8" y="549" width="0.4" height="15.0" fill="rgb(220,30,19)" rx="2" ry="2" />
<text  x="179.83" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3,109 samples, 0.68%)</title><rect x="562.2" y="757" width="8.1" height="15.0" fill="rgb(244,144,19)" rx="2" ry="2" />
<text  x="565.20" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (105 samples, 0.02%)</title><rect x="312.7" y="693" width="0.3" height="15.0" fill="rgb(214,104,43)" rx="2" ry="2" />
<text  x="315.71" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (73 samples, 0.02%)</title><rect x="1176.8" y="1013" width="0.2" height="15.0" fill="rgb(207,195,36)" rx="2" ry="2" />
<text  x="1179.80" y="1023.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt;::allocate (306 samples, 0.07%)</title><rect x="588.6" y="757" width="0.8" height="15.0" fill="rgb(244,106,5)" rx="2" ry="2" />
<text  x="591.62" y="767.5" ></text>
</g>
<g >
<title>enqueue_task (688 samples, 0.15%)</title><rect x="682.8" y="757" width="1.8" height="15.0" fill="rgb(211,124,2)" rx="2" ry="2" />
<text  x="685.81" y="767.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (40 samples, 0.01%)</title><rect x="656.0" y="709" width="0.1" height="15.0" fill="rgb(211,85,49)" rx="2" ry="2" />
<text  x="659.04" y="719.5" ></text>
</g>
<g >
<title>hook_inode_free_security (126 samples, 0.03%)</title><rect x="177.5" y="549" width="0.4" height="15.0" fill="rgb(222,74,34)" rx="2" ry="2" />
<text  x="180.53" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (81 samples, 0.02%)</title><rect x="1175.7" y="997" width="0.2" height="15.0" fill="rgb(230,197,9)" rx="2" ry="2" />
<text  x="1178.66" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock (83 samples, 0.02%)</title><rect x="901.3" y="837" width="0.3" height="15.0" fill="rgb(234,171,43)" rx="2" ry="2" />
<text  x="904.35" y="847.5" ></text>
</g>
<g >
<title>error_entry (214 samples, 0.05%)</title><rect x="821.2" y="1045" width="0.6" height="15.0" fill="rgb(212,98,16)" rx="2" ry="2" />
<text  x="824.19" y="1055.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (44 samples, 0.01%)</title><rect x="280.4" y="773" width="0.1" height="15.0" fill="rgb(234,126,31)" rx="2" ry="2" />
<text  x="283.43" y="783.5" ></text>
</g>
<g >
<title>kfree (187 samples, 0.04%)</title><rect x="804.9" y="933" width="0.5" height="15.0" fill="rgb(213,106,49)" rx="2" ry="2" />
<text  x="807.91" y="943.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (134 samples, 0.03%)</title><rect x="498.1" y="1045" width="0.4" height="15.0" fill="rgb(231,83,8)" rx="2" ry="2" />
<text  x="501.12" y="1055.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (289 samples, 0.06%)</title><rect x="1169.8" y="997" width="0.7" height="15.0" fill="rgb(221,88,12)" rx="2" ry="2" />
<text  x="1172.77" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (57 samples, 0.01%)</title><rect x="272.6" y="645" width="0.1" height="15.0" fill="rgb(249,87,26)" rx="2" ry="2" />
<text  x="275.56" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (52 samples, 0.01%)</title><rect x="783.7" y="1029" width="0.1" height="15.0" fill="rgb(244,182,37)" rx="2" ry="2" />
<text  x="786.70" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (534 samples, 0.12%)</title><rect x="999.8" y="933" width="1.4" height="15.0" fill="rgb(222,98,47)" rx="2" ry="2" />
<text  x="1002.82" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (670 samples, 0.15%)</title><rect x="971.2" y="1045" width="1.8" height="15.0" fill="rgb(230,199,27)" rx="2" ry="2" />
<text  x="974.23" y="1055.5" ></text>
</g>
<g >
<title>enqueue_task (1,416 samples, 0.31%)</title><rect x="205.5" y="101" width="3.7" height="15.0" fill="rgb(207,211,21)" rx="2" ry="2" />
<text  x="208.48" y="111.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (123 samples, 0.03%)</title><rect x="303.3" y="725" width="0.4" height="15.0" fill="rgb(228,199,3)" rx="2" ry="2" />
<text  x="306.33" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (68 samples, 0.01%)</title><rect x="70.0" y="1301" width="0.2" height="15.0" fill="rgb(248,206,9)" rx="2" ry="2" />
<text  x="72.99" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (218 samples, 0.05%)</title><rect x="1105.9" y="1045" width="0.5" height="15.0" fill="rgb(245,3,25)" rx="2" ry="2" />
<text  x="1108.86" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,487 samples, 1.65%)</title><rect x="1043.0" y="837" width="19.4" height="15.0" fill="rgb(224,47,34)" rx="2" ry="2" />
<text  x="1045.99" y="847.5" ></text>
</g>
<g >
<title>operator new (162 samples, 0.04%)</title><rect x="151.0" y="1301" width="0.4" height="15.0" fill="rgb(212,101,13)" rx="2" ry="2" />
<text  x="153.99" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (854 samples, 0.19%)</title><rect x="304.6" y="741" width="2.2" height="15.0" fill="rgb(254,170,29)" rx="2" ry="2" />
<text  x="307.57" y="751.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (40 samples, 0.01%)</title><rect x="217.5" y="533" width="0.1" height="15.0" fill="rgb(250,100,23)" rx="2" ry="2" />
<text  x="220.45" y="543.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (259 samples, 0.06%)</title><rect x="183.5" y="453" width="0.7" height="15.0" fill="rgb(230,151,18)" rx="2" ry="2" />
<text  x="186.54" y="463.5" ></text>
</g>
<g >
<title>webserver::EventLoop::loop (330,927 samples, 72.87%)</title><rect x="158.9" y="1125" width="859.8" height="15.0" fill="rgb(220,127,51)" rx="2" ry="2" />
<text  x="161.85" y="1135.5" >webserver::EventLoop::loop</text>
</g>
<g >
<title>bpf_lsm_socket_sock_rcv_skb (55 samples, 0.01%)</title><rect x="404.6" y="485" width="0.1" height="15.0" fill="rgb(231,200,21)" rx="2" ry="2" />
<text  x="407.57" y="495.5" ></text>
</g>
<g >
<title>psi_group_change (759 samples, 0.17%)</title><rect x="434.1" y="357" width="2.0" height="15.0" fill="rgb(205,199,39)" rx="2" ry="2" />
<text  x="437.14" y="367.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (44 samples, 0.01%)</title><rect x="869.4" y="1013" width="0.1" height="15.0" fill="rgb(218,193,31)" rx="2" ry="2" />
<text  x="872.38" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (162 samples, 0.04%)</title><rect x="45.7" y="1301" width="0.4" height="15.0" fill="rgb(254,28,33)" rx="2" ry="2" />
<text  x="48.73" y="1311.5" ></text>
</g>
<g >
<title>inet_twsk_alloc (61 samples, 0.01%)</title><rect x="1087.4" y="645" width="0.1" height="15.0" fill="rgb(221,79,27)" rx="2" ry="2" />
<text  x="1090.37" y="655.5" ></text>
</g>
<g >
<title>lookup_fast.constprop.0 (553 samples, 0.12%)</title><rect x="860.2" y="917" width="1.5" height="15.0" fill="rgb(217,122,37)" rx="2" ry="2" />
<text  x="863.22" y="927.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (93 samples, 0.02%)</title><rect x="1079.7" y="981" width="0.2" height="15.0" fill="rgb(231,165,26)" rx="2" ry="2" />
<text  x="1082.65" y="991.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (39 samples, 0.01%)</title><rect x="392.1" y="677" width="0.1" height="15.0" fill="rgb(231,188,6)" rx="2" ry="2" />
<text  x="395.15" y="687.5" ></text>
</g>
<g >
<title>tcp_data_queue (3,657 samples, 0.81%)</title><rect x="201.0" y="213" width="9.5" height="15.0" fill="rgb(245,218,51)" rx="2" ry="2" />
<text  x="204.00" y="223.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (48 samples, 0.01%)</title><rect x="212.0" y="309" width="0.2" height="15.0" fill="rgb(207,34,17)" rx="2" ry="2" />
<text  x="215.04" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (151 samples, 0.03%)</title><rect x="271.5" y="725" width="0.4" height="15.0" fill="rgb(214,85,46)" rx="2" ry="2" />
<text  x="274.50" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt;, std::__detail::_Identity, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (61 samples, 0.01%)</title><rect x="351.9" y="869" width="0.2" height="15.0" fill="rgb(228,156,9)" rx="2" ry="2" />
<text  x="354.94" y="879.5" ></text>
</g>
<g >
<title>webserver::Channel::dispatch_event (91,214 samples, 20.08%)</title><rect x="226.5" y="1109" width="236.9" height="15.0" fill="rgb(214,45,3)" rx="2" ry="2" />
<text  x="229.45" y="1119.5" >webserver::Channel::dispatch_ev..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (301 samples, 0.07%)</title><rect x="771.2" y="1061" width="0.8" height="15.0" fill="rgb(238,23,47)" rx="2" ry="2" />
<text  x="774.19" y="1071.5" ></text>
</g>
<g >
<title>insert_work (96 samples, 0.02%)</title><rect x="718.6" y="677" width="0.3" height="15.0" fill="rgb(254,163,38)" rx="2" ry="2" />
<text  x="721.61" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,225 samples, 0.27%)</title><rect x="640.1" y="933" width="3.1" height="15.0" fill="rgb(216,66,24)" rx="2" ry="2" />
<text  x="643.06" y="943.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (49 samples, 0.01%)</title><rect x="371.8" y="741" width="0.1" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="374.77" y="751.5" ></text>
</g>
<g >
<title>security_file_open (253 samples, 0.06%)</title><rect x="884.8" y="933" width="0.6" height="15.0" fill="rgb(252,209,12)" rx="2" ry="2" />
<text  x="887.76" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (46 samples, 0.01%)</title><rect x="232.8" y="837" width="0.1" height="15.0" fill="rgb(210,122,41)" rx="2" ry="2" />
<text  x="235.83" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,992 samples, 0.44%)</title><rect x="899.2" y="869" width="5.1" height="15.0" fill="rgb(222,7,36)" rx="2" ry="2" />
<text  x="902.15" y="879.5" ></text>
</g>
<g >
<title>do_epoll_ctl (812 samples, 0.18%)</title><rect x="263.7" y="805" width="2.1" height="15.0" fill="rgb(237,96,54)" rx="2" ry="2" />
<text  x="266.65" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (58 samples, 0.01%)</title><rect x="26.9" y="1301" width="0.2" height="15.0" fill="rgb(231,99,9)" rx="2" ry="2" />
<text  x="29.93" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (40 samples, 0.01%)</title><rect x="93.6" y="1301" width="0.1" height="15.0" fill="rgb(231,127,53)" rx="2" ry="2" />
<text  x="96.64" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (432 samples, 0.10%)</title><rect x="927.2" y="853" width="1.1" height="15.0" fill="rgb(229,140,21)" rx="2" ry="2" />
<text  x="930.16" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (76 samples, 0.02%)</title><rect x="589.6" y="725" width="0.2" height="15.0" fill="rgb(213,213,11)" rx="2" ry="2" />
<text  x="592.55" y="735.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (122 samples, 0.03%)</title><rect x="1028.1" y="965" width="0.3" height="15.0" fill="rgb(234,119,42)" rx="2" ry="2" />
<text  x="1031.10" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (74 samples, 0.02%)</title><rect x="606.2" y="837" width="0.2" height="15.0" fill="rgb(225,79,35)" rx="2" ry="2" />
<text  x="609.21" y="847.5" ></text>
</g>
<g >
<title>webserver::HttpManager::del_http_connection (40 samples, 0.01%)</title><rect x="143.0" y="1301" width="0.1" height="15.0" fill="rgb(240,137,34)" rx="2" ry="2" />
<text  x="145.99" y="1311.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2,411 samples, 0.53%)</title><rect x="679.8" y="933" width="6.3" height="15.0" fill="rgb(205,43,18)" rx="2" ry="2" />
<text  x="682.80" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (85 samples, 0.02%)</title><rect x="1020.8" y="1013" width="0.2" height="15.0" fill="rgb(233,189,36)" rx="2" ry="2" />
<text  x="1023.76" y="1023.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (2,072 samples, 0.46%)</title><rect x="337.9" y="741" width="5.4" height="15.0" fill="rgb(206,204,54)" rx="2" ry="2" />
<text  x="340.91" y="751.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (59 samples, 0.01%)</title><rect x="662.6" y="645" width="0.1" height="15.0" fill="rgb(239,60,38)" rx="2" ry="2" />
<text  x="665.56" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr&lt;webserver::HttpHandler, void&gt; (84 samples, 0.02%)</title><rect x="584.1" y="901" width="0.2" height="15.0" fill="rgb(243,100,54)" rx="2" ry="2" />
<text  x="587.09" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;::arg (93 samples, 0.02%)</title><rect x="296.8" y="741" width="0.2" height="15.0" fill="rgb(208,32,4)" rx="2" ry="2" />
<text  x="299.78" y="751.5" ></text>
</g>
<g >
<title>n_tty_write (5,823 samples, 1.28%)</title><rect x="319.1" y="565" width="15.1" height="15.0" fill="rgb(244,28,49)" rx="2" ry="2" />
<text  x="322.06" y="575.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (85 samples, 0.02%)</title><rect x="902.5" y="789" width="0.2" height="15.0" fill="rgb(228,81,49)" rx="2" ry="2" />
<text  x="905.46" y="799.5" ></text>
</g>
<g >
<title>webserver::Channel::update (5,736 samples, 1.26%)</title><rect x="1003.6" y="997" width="14.9" height="15.0" fill="rgb(224,215,18)" rx="2" ry="2" />
<text  x="1006.58" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (416 samples, 0.09%)</title><rect x="775.2" y="901" width="1.1" height="15.0" fill="rgb(237,112,9)" rx="2" ry="2" />
<text  x="778.21" y="911.5" ></text>
</g>
<g >
<title>memset_erms (232 samples, 0.05%)</title><rect x="806.2" y="917" width="0.6" height="15.0" fill="rgb(227,6,42)" rx="2" ry="2" />
<text  x="809.18" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (70 samples, 0.02%)</title><rect x="772.9" y="997" width="0.2" height="15.0" fill="rgb(209,176,18)" rx="2" ry="2" />
<text  x="775.90" y="1007.5" ></text>
</g>
<g >
<title>enqueue_entity (473 samples, 0.10%)</title><rect x="949.0" y="581" width="1.3" height="15.0" fill="rgb(231,84,32)" rx="2" ry="2" />
<text  x="952.02" y="591.5" ></text>
</g>
<g >
<title>update_load_avg (63 samples, 0.01%)</title><rect x="1098.4" y="261" width="0.2" height="15.0" fill="rgb(227,39,44)" rx="2" ry="2" />
<text  x="1101.45" y="271.5" ></text>
</g>
<g >
<title>update_rq_clock (44 samples, 0.01%)</title><rect x="684.9" y="773" width="0.1" height="15.0" fill="rgb(236,199,42)" rx="2" ry="2" />
<text  x="687.85" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (57 samples, 0.01%)</title><rect x="1025.9" y="805" width="0.2" height="15.0" fill="rgb(254,103,24)" rx="2" ry="2" />
<text  x="1028.91" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (65 samples, 0.01%)</title><rect x="117.5" y="1301" width="0.2" height="15.0" fill="rgb(241,68,8)" rx="2" ry="2" />
<text  x="120.52" y="1311.5" ></text>
</g>
<g >
<title>hook_file_open (152 samples, 0.03%)</title><rect x="885.0" y="917" width="0.4" height="15.0" fill="rgb(218,105,52)" rx="2" ry="2" />
<text  x="888.02" y="927.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (162 samples, 0.04%)</title><rect x="271.5" y="757" width="0.4" height="15.0" fill="rgb(228,5,15)" rx="2" ry="2" />
<text  x="274.47" y="767.5" ></text>
</g>
<g >
<title>sk_reset_timer (60 samples, 0.01%)</title><rect x="1103.2" y="693" width="0.1" height="15.0" fill="rgb(205,83,4)" rx="2" ry="2" />
<text  x="1106.17" y="703.5" ></text>
</g>
<g >
<title>__queue_work (77 samples, 0.02%)</title><rect x="322.2" y="501" width="0.2" height="15.0" fill="rgb(219,195,34)" rx="2" ry="2" />
<text  x="325.17" y="511.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,814 samples, 0.40%)</title><rect x="563.7" y="645" width="4.7" height="15.0" fill="rgb(242,61,51)" rx="2" ry="2" />
<text  x="566.69" y="655.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::tuple (67 samples, 0.01%)</title><rect x="1114.6" y="933" width="0.2" height="15.0" fill="rgb(251,125,9)" rx="2" ry="2" />
<text  x="1117.64" y="943.5" ></text>
</g>
<g >
<title>call_rcu (166 samples, 0.04%)</title><rect x="286.8" y="789" width="0.4" height="15.0" fill="rgb(207,50,40)" rx="2" ry="2" />
<text  x="289.79" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (225 samples, 0.05%)</title><rect x="298.2" y="805" width="0.6" height="15.0" fill="rgb(212,134,13)" rx="2" ry="2" />
<text  x="301.19" y="815.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (136 samples, 0.03%)</title><rect x="969.3" y="981" width="0.3" height="15.0" fill="rgb(238,47,24)" rx="2" ry="2" />
<text  x="972.26" y="991.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (105 samples, 0.02%)</title><rect x="667.0" y="709" width="0.3" height="15.0" fill="rgb(210,35,47)" rx="2" ry="2" />
<text  x="670.04" y="719.5" ></text>
</g>
<g >
<title>_find_next_bit (57 samples, 0.01%)</title><rect x="552.0" y="485" width="0.1" height="15.0" fill="rgb(228,65,0)" rx="2" ry="2" />
<text  x="554.96" y="495.5" ></text>
</g>
<g >
<title>perf_event_mmap (4,322 samples, 0.95%)</title><rect x="802.4" y="949" width="11.3" height="15.0" fill="rgb(238,147,24)" rx="2" ry="2" />
<text  x="805.43" y="959.5" ></text>
</g>
<g >
<title>security_file_permission (284 samples, 0.06%)</title><rect x="233.0" y="869" width="0.8" height="15.0" fill="rgb(246,100,15)" rx="2" ry="2" />
<text  x="236.02" y="879.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1205" width="860.0" height="15.0" fill="rgb(252,154,52)" rx="2" ry="2" />
<text  x="161.66" y="1215.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>unmap_region (6,591 samples, 1.45%)</title><rect x="827.7" y="965" width="17.1" height="15.0" fill="rgb(228,174,9)" rx="2" ry="2" />
<text  x="830.67" y="975.5" ></text>
</g>
<g >
<title>vfs_write (7,009 samples, 1.54%)</title><rect x="936.4" y="757" width="18.2" height="15.0" fill="rgb(239,142,52)" rx="2" ry="2" />
<text  x="939.43" y="767.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (136 samples, 0.03%)</title><rect x="254.5" y="853" width="0.4" height="15.0" fill="rgb(247,211,45)" rx="2" ry="2" />
<text  x="257.50" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (77 samples, 0.02%)</title><rect x="762.3" y="1061" width="0.2" height="15.0" fill="rgb(233,99,6)" rx="2" ry="2" />
<text  x="765.28" y="1071.5" ></text>
</g>
<g >
<title>fwrite@plt (40 samples, 0.01%)</title><rect x="337.6" y="757" width="0.1" height="15.0" fill="rgb(253,210,36)" rx="2" ry="2" />
<text  x="340.64" y="767.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (67 samples, 0.01%)</title><rect x="947.9" y="613" width="0.2" height="15.0" fill="rgb(222,201,18)" rx="2" ry="2" />
<text  x="950.90" y="623.5" ></text>
</g>
<g >
<title>std::hash&lt;int&gt;::operator (94 samples, 0.02%)</title><rect x="126.6" y="1301" width="0.3" height="15.0" fill="rgb(210,21,18)" rx="2" ry="2" />
<text  x="129.63" y="1311.5" ></text>
</g>
<g >
<title>check_preempt_curr (341 samples, 0.08%)</title><rect x="1057.4" y="661" width="0.9" height="15.0" fill="rgb(223,160,5)" rx="2" ry="2" />
<text  x="1060.42" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (2,333 samples, 0.51%)</title><rect x="973.0" y="1045" width="6.0" height="15.0" fill="rgb(245,96,6)" rx="2" ry="2" />
<text  x="975.97" y="1055.5" ></text>
</g>
<g >
<title>fmt::v8::format_arg_store&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::format_arg_store (67 samples, 0.01%)</title><rect x="297.7" y="805" width="0.2" height="15.0" fill="rgb(213,34,52)" rx="2" ry="2" />
<text  x="300.73" y="815.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (2,417 samples, 0.53%)</title><rect x="807.1" y="917" width="6.3" height="15.0" fill="rgb(243,0,16)" rx="2" ry="2" />
<text  x="810.12" y="927.5" ></text>
</g>
<g >
<title>atime_needs_update (190 samples, 0.04%)</title><rect x="801.8" y="917" width="0.5" height="15.0" fill="rgb(253,187,9)" rx="2" ry="2" />
<text  x="804.82" y="927.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (107 samples, 0.02%)</title><rect x="1071.2" y="789" width="0.3" height="15.0" fill="rgb(251,39,46)" rx="2" ry="2" />
<text  x="1074.20" y="799.5" ></text>
</g>
<g >
<title>__sprintf (1,696 samples, 0.37%)</title><rect x="612.0" y="885" width="4.4" height="15.0" fill="rgb(229,41,28)" rx="2" ry="2" />
<text  x="615.03" y="895.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (64 samples, 0.01%)</title><rect x="843.5" y="885" width="0.2" height="15.0" fill="rgb(236,93,33)" rx="2" ry="2" />
<text  x="846.52" y="895.5" ></text>
</g>
<g >
<title>is_cpu_allowed (73 samples, 0.02%)</title><rect x="719.4" y="661" width="0.2" height="15.0" fill="rgb(219,0,33)" rx="2" ry="2" />
<text  x="722.44" y="671.5" ></text>
</g>
<g >
<title>preempt_schedule (136 samples, 0.03%)</title><rect x="1070.8" y="773" width="0.4" height="15.0" fill="rgb(228,2,18)" rx="2" ry="2" />
<text  x="1073.85" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (97 samples, 0.02%)</title><rect x="989.9" y="997" width="0.3" height="15.0" fill="rgb(231,211,5)" rx="2" ry="2" />
<text  x="992.94" y="1007.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (912 samples, 0.20%)</title><rect x="411.3" y="389" width="2.4" height="15.0" fill="rgb(245,27,45)" rx="2" ry="2" />
<text  x="414.32" y="399.5" ></text>
</g>
<g >
<title>webserver::Channel::read_registered (61 samples, 0.01%)</title><rect x="139.8" y="1301" width="0.2" height="15.0" fill="rgb(249,138,25)" rx="2" ry="2" />
<text  x="142.82" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (459 samples, 0.10%)</title><rect x="766.7" y="1045" width="1.2" height="15.0" fill="rgb(233,209,25)" rx="2" ry="2" />
<text  x="769.72" y="1055.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (123 samples, 0.03%)</title><rect x="764.4" y="949" width="0.4" height="15.0" fill="rgb(225,119,35)" rx="2" ry="2" />
<text  x="767.45" y="959.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (91 samples, 0.02%)</title><rect x="767.7" y="1029" width="0.2" height="15.0" fill="rgb(230,104,19)" rx="2" ry="2" />
<text  x="770.67" y="1039.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (41 samples, 0.01%)</title><rect x="32.1" y="1301" width="0.1" height="15.0" fill="rgb(218,183,33)" rx="2" ry="2" />
<text  x="35.07" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,964 samples, 4.18%)</title><rect x="172.2" y="693" width="49.3" height="15.0" fill="rgb(247,190,42)" rx="2" ry="2" />
<text  x="175.24" y="703.5" >do_s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::TcpSocket&gt; &gt;::destroy&lt;webserver::TcpSocket&gt; (9,927 samples, 2.19%)</title><rect x="1079.9" y="997" width="25.8" height="15.0" fill="rgb(240,198,47)" rx="2" ry="2" />
<text  x="1082.91" y="1007.5" >s..</text>
</g>
<g >
<title>tcp_rbtree_insert (42 samples, 0.01%)</title><rect x="450.6" y="757" width="0.1" height="15.0" fill="rgb(249,147,48)" rx="2" ry="2" />
<text  x="453.63" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::size (43 samples, 0.01%)</title><rect x="52.6" y="1301" width="0.1" height="15.0" fill="rgb(207,219,13)" rx="2" ry="2" />
<text  x="55.60" y="1311.5" ></text>
</g>
<g >
<title>__fget_files (42 samples, 0.01%)</title><rect x="754.3" y="917" width="0.1" height="15.0" fill="rgb(209,98,6)" rx="2" ry="2" />
<text  x="757.25" y="927.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,115 samples, 0.47%)</title><rect x="1069.3" y="965" width="5.4" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="1072.25" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (72 samples, 0.02%)</title><rect x="134.5" y="1301" width="0.2" height="15.0" fill="rgb(207,189,8)" rx="2" ry="2" />
<text  x="137.53" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (209 samples, 0.05%)</title><rect x="1099.1" y="277" width="0.5" height="15.0" fill="rgb(252,4,1)" rx="2" ry="2" />
<text  x="1102.08" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (55 samples, 0.01%)</title><rect x="1107.5" y="869" width="0.2" height="15.0" fill="rgb(207,95,20)" rx="2" ry="2" />
<text  x="1110.52" y="879.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [24]&gt; (327 samples, 0.07%)</title><rect x="628.0" y="1061" width="0.9" height="15.0" fill="rgb(239,165,6)" rx="2" ry="2" />
<text  x="631.05" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (146 samples, 0.03%)</title><rect x="25.6" y="1301" width="0.4" height="15.0" fill="rgb(210,156,19)" rx="2" ry="2" />
<text  x="28.61" y="1311.5" ></text>
</g>
<g >
<title>remove_wait_queue (41 samples, 0.01%)</title><rect x="333.7" y="549" width="0.1" height="15.0" fill="rgb(231,179,30)" rx="2" ry="2" />
<text  x="336.67" y="559.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::~HttpConnection (593 samples, 0.13%)</title><rect x="1108.9" y="965" width="1.5" height="15.0" fill="rgb(245,141,34)" rx="2" ry="2" />
<text  x="1111.87" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (162 samples, 0.04%)</title><rect x="303.7" y="725" width="0.4" height="15.0" fill="rgb(215,172,45)" rx="2" ry="2" />
<text  x="306.69" y="735.5" ></text>
</g>
<g >
<title>__update_load_avg_se (62 samples, 0.01%)</title><rect x="554.4" y="437" width="0.2" height="15.0" fill="rgb(236,14,0)" rx="2" ry="2" />
<text  x="557.42" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (308 samples, 0.07%)</title><rect x="93.7" y="1301" width="0.8" height="15.0" fill="rgb(254,44,32)" rx="2" ry="2" />
<text  x="96.74" y="1311.5" ></text>
</g>
<g >
<title>rb_insert_color (89 samples, 0.02%)</title><rect x="479.3" y="949" width="0.2" height="15.0" fill="rgb(211,70,10)" rx="2" ry="2" />
<text  x="482.25" y="959.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (80 samples, 0.02%)</title><rect x="615.0" y="837" width="0.2" height="15.0" fill="rgb(224,153,7)" rx="2" ry="2" />
<text  x="618.02" y="847.5" ></text>
</g>
<g >
<title>dequeue_entity (85 samples, 0.02%)</title><rect x="731.7" y="725" width="0.2" height="15.0" fill="rgb(231,26,39)" rx="2" ry="2" />
<text  x="734.70" y="735.5" ></text>
</g>
<g >
<title>__vsprintf_internal (1,197 samples, 0.26%)</title><rect x="1171.7" y="1029" width="3.2" height="15.0" fill="rgb(214,23,49)" rx="2" ry="2" />
<text  x="1174.75" y="1039.5" ></text>
</g>
<g >
<title>_IO_new_file_write (8,494 samples, 1.87%)</title><rect x="934.8" y="837" width="22.1" height="15.0" fill="rgb(216,219,28)" rx="2" ry="2" />
<text  x="937.80" y="847.5" >_..</text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (48 samples, 0.01%)</title><rect x="585.9" y="805" width="0.1" height="15.0" fill="rgb(207,19,13)" rx="2" ry="2" />
<text  x="588.87" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (142 samples, 0.03%)</title><rect x="545.2" y="549" width="0.3" height="15.0" fill="rgb(249,94,0)" rx="2" ry="2" />
<text  x="548.17" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpConnection*&gt;::_Tuple_impl (84 samples, 0.02%)</title><rect x="606.6" y="821" width="0.2" height="15.0" fill="rgb(228,118,45)" rx="2" ry="2" />
<text  x="609.59" y="831.5" ></text>
</g>
<g >
<title>skb_clone (49 samples, 0.01%)</title><rect x="447.5" y="757" width="0.1" height="15.0" fill="rgb(219,18,29)" rx="2" ry="2" />
<text  x="450.48" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (76 samples, 0.02%)</title><rect x="871.3" y="965" width="0.2" height="15.0" fill="rgb(244,50,38)" rx="2" ry="2" />
<text  x="874.28" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1,243 samples, 0.27%)</title><rect x="999.3" y="965" width="3.3" height="15.0" fill="rgb(243,5,11)" rx="2" ry="2" />
<text  x="1002.34" y="975.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (241 samples, 0.05%)</title><rect x="830.0" y="917" width="0.7" height="15.0" fill="rgb(206,158,17)" rx="2" ry="2" />
<text  x="833.03" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (229 samples, 0.05%)</title><rect x="357.9" y="821" width="0.6" height="15.0" fill="rgb(208,33,25)" rx="2" ry="2" />
<text  x="360.92" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (291 samples, 0.06%)</title><rect x="980.3" y="853" width="0.8" height="15.0" fill="rgb(228,59,12)" rx="2" ry="2" />
<text  x="983.30" y="863.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,207 samples, 0.27%)</title><rect x="338.9" y="613" width="3.2" height="15.0" fill="rgb(215,96,54)" rx="2" ry="2" />
<text  x="341.94" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (115 samples, 0.03%)</title><rect x="981.3" y="933" width="0.3" height="15.0" fill="rgb(208,152,14)" rx="2" ry="2" />
<text  x="984.31" y="943.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (160 samples, 0.04%)</title><rect x="1087.6" y="741" width="0.4" height="15.0" fill="rgb(227,137,11)" rx="2" ry="2" />
<text  x="1090.61" y="751.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (84 samples, 0.02%)</title><rect x="136.1" y="1301" width="0.2" height="15.0" fill="rgb(222,23,40)" rx="2" ry="2" />
<text  x="139.11" y="1311.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (191 samples, 0.04%)</title><rect x="601.1" y="741" width="0.5" height="15.0" fill="rgb(226,206,19)" rx="2" ry="2" />
<text  x="604.11" y="751.5" ></text>
</g>
<g >
<title>ttwu_do_activate (851 samples, 0.19%)</title><rect x="1055.2" y="677" width="2.2" height="15.0" fill="rgb(237,38,16)" rx="2" ry="2" />
<text  x="1058.17" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (175 samples, 0.04%)</title><rect x="312.5" y="709" width="0.5" height="15.0" fill="rgb(216,220,45)" rx="2" ry="2" />
<text  x="315.52" y="719.5" ></text>
</g>
<g >
<title>update_cfs_group (45 samples, 0.01%)</title><rect x="432.3" y="357" width="0.2" height="15.0" fill="rgb(232,225,23)" rx="2" ry="2" />
<text  x="435.35" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (42 samples, 0.01%)</title><rect x="284.2" y="757" width="0.1" height="15.0" fill="rgb(247,228,46)" rx="2" ry="2" />
<text  x="287.21" y="767.5" ></text>
</g>
<g >
<title>new_do_write (230 samples, 0.05%)</title><rect x="1186.1" y="1317" width="0.6" height="15.0" fill="rgb(252,146,41)" rx="2" ry="2" />
<text  x="1189.11" y="1327.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (70 samples, 0.02%)</title><rect x="1114.6" y="949" width="0.2" height="15.0" fill="rgb(252,91,31)" rx="2" ry="2" />
<text  x="1117.64" y="959.5" ></text>
</g>
<g >
<title>operator new (231 samples, 0.05%)</title><rect x="895.3" y="933" width="0.6" height="15.0" fill="rgb(209,62,49)" rx="2" ry="2" />
<text  x="898.34" y="943.5" ></text>
</g>
<g >
<title>__dynamic_cast (411 samples, 0.09%)</title><rect x="975.4" y="949" width="1.1" height="15.0" fill="rgb(239,164,8)" rx="2" ry="2" />
<text  x="978.40" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (192 samples, 0.04%)</title><rect x="530.2" y="677" width="0.5" height="15.0" fill="rgb(236,199,29)" rx="2" ry="2" />
<text  x="533.21" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (149 samples, 0.03%)</title><rect x="917.2" y="789" width="0.4" height="15.0" fill="rgb(238,167,54)" rx="2" ry="2" />
<text  x="920.19" y="799.5" ></text>
</g>
<g >
<title>[[nf_defrag_ipv4]] (55 samples, 0.01%)</title><rect x="191.1" y="421" width="0.1" height="15.0" fill="rgb(208,1,1)" rx="2" ry="2" />
<text  x="194.06" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (85 samples, 0.02%)</title><rect x="105.7" y="1269" width="0.2" height="15.0" fill="rgb(219,55,32)" rx="2" ry="2" />
<text  x="108.66" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (48 samples, 0.01%)</title><rect x="321.4" y="533" width="0.1" height="15.0" fill="rgb(235,126,43)" rx="2" ry="2" />
<text  x="324.38" y="543.5" ></text>
</g>
<g >
<title>try_to_unlazy (92 samples, 0.02%)</title><rect x="881.1" y="933" width="0.3" height="15.0" fill="rgb(254,44,34)" rx="2" ry="2" />
<text  x="884.13" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (170 samples, 0.04%)</title><rect x="689.8" y="789" width="0.4" height="15.0" fill="rgb(229,124,3)" rx="2" ry="2" />
<text  x="692.78" y="799.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (103 samples, 0.02%)</title><rect x="466.2" y="1077" width="0.3" height="15.0" fill="rgb(236,106,17)" rx="2" ry="2" />
<text  x="469.23" y="1087.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (8,135 samples, 1.79%)</title><rect x="649.9" y="933" width="21.1" height="15.0" fill="rgb(218,115,50)" rx="2" ry="2" />
<text  x="652.86" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::equal2 (142 samples, 0.03%)</title><rect x="688.7" y="981" width="0.4" height="15.0" fill="rgb(209,197,37)" rx="2" ry="2" />
<text  x="691.75" y="991.5" ></text>
</g>
<g >
<title>validate_xmit_skb (205 samples, 0.05%)</title><rect x="391.7" y="693" width="0.5" height="15.0" fill="rgb(253,217,52)" rx="2" ry="2" />
<text  x="394.72" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (106 samples, 0.02%)</title><rect x="759.0" y="997" width="0.3" height="15.0" fill="rgb(253,215,6)" rx="2" ry="2" />
<text  x="762.01" y="1007.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,043 samples, 0.45%)</title><rect x="492.8" y="1045" width="5.3" height="15.0" fill="rgb(242,129,2)" rx="2" ry="2" />
<text  x="495.82" y="1055.5" ></text>
</g>
<g >
<title>__GI___libc_free (341 samples, 0.08%)</title><rect x="169.1" y="789" width="0.9" height="15.0" fill="rgb(241,133,50)" rx="2" ry="2" />
<text  x="172.12" y="799.5" ></text>
</g>
<g >
<title>std::mutex::unlock (212 samples, 0.05%)</title><rect x="623.4" y="1061" width="0.6" height="15.0" fill="rgb(224,216,18)" rx="2" ry="2" />
<text  x="626.45" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (50 samples, 0.01%)</title><rect x="26.7" y="1301" width="0.2" height="15.0" fill="rgb(215,59,4)" rx="2" ry="2" />
<text  x="29.74" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task (1,043 samples, 0.23%)</title><rect x="948.5" y="613" width="2.7" height="15.0" fill="rgb(229,80,0)" rx="2" ry="2" />
<text  x="951.48" y="623.5" ></text>
</g>
<g >
<title>process_backlog (332 samples, 0.07%)</title><rect x="1086.2" y="517" width="0.9" height="15.0" fill="rgb(251,179,27)" rx="2" ry="2" />
<text  x="1089.23" y="527.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (71 samples, 0.02%)</title><rect x="700.2" y="837" width="0.2" height="15.0" fill="rgb(216,59,33)" rx="2" ry="2" />
<text  x="703.18" y="847.5" ></text>
</g>
<g >
<title>nf_hook_slow (40 samples, 0.01%)</title><rect x="183.6" y="389" width="0.1" height="15.0" fill="rgb(208,39,16)" rx="2" ry="2" />
<text  x="186.58" y="399.5" ></text>
</g>
<g >
<title>__check_object_size (88 samples, 0.02%)</title><rect x="890.3" y="949" width="0.3" height="15.0" fill="rgb(246,59,18)" rx="2" ry="2" />
<text  x="893.33" y="959.5" ></text>
</g>
<g >
<title>__fdget_pos (289 samples, 0.06%)</title><rect x="1117.3" y="997" width="0.7" height="15.0" fill="rgb(211,33,12)" rx="2" ry="2" />
<text  x="1120.29" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (281 samples, 0.06%)</title><rect x="1107.9" y="949" width="0.7" height="15.0" fill="rgb(211,214,23)" rx="2" ry="2" />
<text  x="1110.85" y="959.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::shared_from_this (144 samples, 0.03%)</title><rect x="1003.7" y="981" width="0.4" height="15.0" fill="rgb(218,87,16)" rx="2" ry="2" />
<text  x="1006.68" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (44 samples, 0.01%)</title><rect x="969.9" y="1029" width="0.1" height="15.0" fill="rgb(233,169,50)" rx="2" ry="2" />
<text  x="972.88" y="1039.5" ></text>
</g>
<g >
<title>loopback_xmit (267 samples, 0.06%)</title><rect x="415.2" y="389" width="0.7" height="15.0" fill="rgb(250,193,39)" rx="2" ry="2" />
<text  x="418.19" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void  (362 samples, 0.08%)</title><rect x="607.7" y="869" width="0.9" height="15.0" fill="rgb(235,204,49)" rx="2" ry="2" />
<text  x="610.68" y="879.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (64 samples, 0.01%)</title><rect x="654.0" y="741" width="0.1" height="15.0" fill="rgb(241,181,43)" rx="2" ry="2" />
<text  x="656.97" y="751.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (41 samples, 0.01%)</title><rect x="577.9" y="853" width="0.1" height="15.0" fill="rgb(242,69,45)" rx="2" ry="2" />
<text  x="580.89" y="863.5" ></text>
</g>
<g >
<title>[[nf_conntrack_netlink]] (346 samples, 0.08%)</title><rect x="213.8" y="405" width="0.9" height="15.0" fill="rgb(206,152,26)" rx="2" ry="2" />
<text  x="216.78" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (57 samples, 0.01%)</title><rect x="92.6" y="1301" width="0.1" height="15.0" fill="rgb(238,62,19)" rx="2" ry="2" />
<text  x="95.55" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (131 samples, 0.03%)</title><rect x="931.4" y="821" width="0.3" height="15.0" fill="rgb(206,144,21)" rx="2" ry="2" />
<text  x="934.37" y="831.5" ></text>
</g>
<g >
<title>skb_entail (130 samples, 0.03%)</title><rect x="457.2" y="805" width="0.4" height="15.0" fill="rgb(224,180,26)" rx="2" ry="2" />
<text  x="460.24" y="815.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,822 samples, 0.40%)</title><rect x="992.8" y="1029" width="4.8" height="15.0" fill="rgb(231,2,6)" rx="2" ry="2" />
<text  x="995.82" y="1039.5" ></text>
</g>
<g >
<title>do_futex (1,576 samples, 0.35%)</title><rect x="958.5" y="789" width="4.1" height="15.0" fill="rgb(232,55,54)" rx="2" ry="2" />
<text  x="961.47" y="799.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,649 samples, 0.58%)</title><rect x="203.0" y="133" width="6.9" height="15.0" fill="rgb(253,138,19)" rx="2" ry="2" />
<text  x="206.00" y="143.5" ></text>
</g>
<g >
<title>update_curr (74 samples, 0.02%)</title><rect x="683.1" y="709" width="0.2" height="15.0" fill="rgb(227,224,23)" rx="2" ry="2" />
<text  x="686.08" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (392 samples, 0.09%)</title><rect x="1109.3" y="933" width="1.0" height="15.0" fill="rgb(221,65,5)" rx="2" ry="2" />
<text  x="1112.30" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (557 samples, 0.12%)</title><rect x="763.5" y="997" width="1.5" height="15.0" fill="rgb(253,82,1)" rx="2" ry="2" />
<text  x="766.52" y="1007.5" ></text>
</g>
<g >
<title>enqueue_entity (154 samples, 0.03%)</title><rect x="1072.3" y="741" width="0.4" height="15.0" fill="rgb(246,114,42)" rx="2" ry="2" />
<text  x="1075.31" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,100 samples, 0.46%)</title><rect x="680.3" y="885" width="5.5" height="15.0" fill="rgb(244,209,23)" rx="2" ry="2" />
<text  x="683.34" y="895.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (306 samples, 0.07%)</title><rect x="298.0" y="821" width="0.8" height="15.0" fill="rgb(216,93,34)" rx="2" ry="2" />
<text  x="300.98" y="831.5" ></text>
</g>
<g >
<title>__libc_send (38,289 samples, 8.43%)</title><rect x="363.1" y="933" width="99.4" height="15.0" fill="rgb(209,58,30)" rx="2" ry="2" />
<text  x="366.06" y="943.5" >__libc_send</text>
</g>
<g >
<title>std::tuple&lt;webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~tuple (115 samples, 0.03%)</title><rect x="625.8" y="901" width="0.3" height="15.0" fill="rgb(244,38,22)" rx="2" ry="2" />
<text  x="628.79" y="911.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (47 samples, 0.01%)</title><rect x="870.2" y="1045" width="0.1" height="15.0" fill="rgb(246,9,18)" rx="2" ry="2" />
<text  x="873.18" y="1055.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (81 samples, 0.02%)</title><rect x="1017.0" y="885" width="0.2" height="15.0" fill="rgb(240,67,33)" rx="2" ry="2" />
<text  x="1020.01" y="895.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (682 samples, 0.15%)</title><rect x="731.2" y="789" width="1.8" height="15.0" fill="rgb(241,66,54)" rx="2" ry="2" />
<text  x="734.23" y="799.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (40 samples, 0.01%)</title><rect x="347.3" y="709" width="0.1" height="15.0" fill="rgb(217,63,17)" rx="2" ry="2" />
<text  x="350.34" y="719.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (276 samples, 0.06%)</title><rect x="725.9" y="709" width="0.7" height="15.0" fill="rgb(239,15,41)" rx="2" ry="2" />
<text  x="728.91" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, webserver::Epoll*, std::default_delete&lt;webserver::Epoll&gt; &gt; (83 samples, 0.02%)</title><rect x="101.5" y="1301" width="0.3" height="15.0" fill="rgb(220,37,38)" rx="2" ry="2" />
<text  x="104.54" y="1311.5" ></text>
</g>
<g >
<title>enqueue_task (1,002 samples, 0.22%)</title><rect x="328.7" y="469" width="2.6" height="15.0" fill="rgb(206,135,52)" rx="2" ry="2" />
<text  x="331.74" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::find (188 samples, 0.04%)</title><rect x="761.0" y="1029" width="0.5" height="15.0" fill="rgb(214,217,48)" rx="2" ry="2" />
<text  x="764.02" y="1039.5" ></text>
</g>
<g >
<title>_int_free (96 samples, 0.02%)</title><rect x="972.0" y="933" width="0.3" height="15.0" fill="rgb(224,131,12)" rx="2" ry="2" />
<text  x="975.05" y="943.5" ></text>
</g>
<g >
<title>enqueue_entity (452 samples, 0.10%)</title><rect x="663.5" y="613" width="1.2" height="15.0" fill="rgb(205,85,2)" rx="2" ry="2" />
<text  x="666.48" y="623.5" ></text>
</g>
<g >
<title>_copy_from_iter (110 samples, 0.02%)</title><rect x="1045.9" y="757" width="0.3" height="15.0" fill="rgb(252,9,53)" rx="2" ry="2" />
<text  x="1048.93" y="767.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (208 samples, 0.05%)</title><rect x="1101.8" y="645" width="0.6" height="15.0" fill="rgb(244,225,32)" rx="2" ry="2" />
<text  x="1104.84" y="655.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (158 samples, 0.03%)</title><rect x="271.5" y="741" width="0.4" height="15.0" fill="rgb(217,188,40)" rx="2" ry="2" />
<text  x="274.48" y="751.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;webserver::Channel&gt; (20,541 samples, 4.52%)</title><rect x="168.6" y="901" width="53.3" height="15.0" fill="rgb(245,165,6)" rx="2" ry="2" />
<text  x="171.57" y="911.5" >std::..</text>
</g>
<g >
<title>make_kuid (42 samples, 0.01%)</title><rect x="802.2" y="901" width="0.1" height="15.0" fill="rgb(236,203,16)" rx="2" ry="2" />
<text  x="805.20" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::backtracer::enabled (70 samples, 0.02%)</title><rect x="55.5" y="1301" width="0.2" height="15.0" fill="rgb(210,46,49)" rx="2" ry="2" />
<text  x="58.48" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt; (39 samples, 0.01%)</title><rect x="299.4" y="789" width="0.1" height="15.0" fill="rgb(219,169,4)" rx="2" ry="2" />
<text  x="302.35" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (99 samples, 0.02%)</title><rect x="771.6" y="1029" width="0.3" height="15.0" fill="rgb(245,55,33)" rx="2" ry="2" />
<text  x="774.61" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (164 samples, 0.04%)</title><rect x="701.8" y="869" width="0.4" height="15.0" fill="rgb(217,99,30)" rx="2" ry="2" />
<text  x="704.77" y="879.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (61 samples, 0.01%)</title><rect x="992.4" y="1045" width="0.2" height="15.0" fill="rgb(247,100,46)" rx="2" ry="2" />
<text  x="995.40" y="1055.5" ></text>
</g>
<g >
<title>pty_write (383 samples, 0.08%)</title><rect x="656.4" y="709" width="1.0" height="15.0" fill="rgb(237,39,33)" rx="2" ry="2" />
<text  x="659.39" y="719.5" ></text>
</g>
<g >
<title>__dentry_kill (1,916 samples, 0.42%)</title><rect x="175.8" y="613" width="5.0" height="15.0" fill="rgb(235,24,9)" rx="2" ry="2" />
<text  x="178.81" y="623.5" ></text>
</g>
<g >
<title>std::type_info::operator== (229 samples, 0.05%)</title><rect x="975.8" y="917" width="0.5" height="15.0" fill="rgb(234,45,6)" rx="2" ry="2" />
<text  x="978.75" y="927.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (281 samples, 0.06%)</title><rect x="425.0" y="373" width="0.7" height="15.0" fill="rgb(224,151,46)" rx="2" ry="2" />
<text  x="427.97" y="383.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (182 samples, 0.04%)</title><rect x="701.7" y="901" width="0.5" height="15.0" fill="rgb(251,25,8)" rx="2" ry="2" />
<text  x="704.73" y="911.5" ></text>
</g>
<g >
<title>prepend_name (185 samples, 0.04%)</title><rect x="804.4" y="901" width="0.5" height="15.0" fill="rgb(214,26,22)" rx="2" ry="2" />
<text  x="807.37" y="911.5" ></text>
</g>
<g >
<title>__virt_addr_valid (91 samples, 0.02%)</title><rect x="653.7" y="725" width="0.2" height="15.0" fill="rgb(233,130,41)" rx="2" ry="2" />
<text  x="656.71" y="735.5" ></text>
</g>
<g >
<title>__stat (76 samples, 0.02%)</title><rect x="892.9" y="1061" width="0.2" height="15.0" fill="rgb(205,37,34)" rx="2" ry="2" />
<text  x="895.90" y="1071.5" ></text>
</g>
<g >
<title>spdlog::sinks::sink::should_log (57 samples, 0.01%)</title><rect x="968.6" y="933" width="0.1" height="15.0" fill="rgb(209,161,39)" rx="2" ry="2" />
<text  x="971.59" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (144 samples, 0.03%)</title><rect x="647.8" y="837" width="0.3" height="15.0" fill="rgb(210,122,26)" rx="2" ry="2" />
<text  x="650.78" y="847.5" ></text>
</g>
<g >
<title>update_load_avg (129 samples, 0.03%)</title><rect x="1056.3" y="613" width="0.4" height="15.0" fill="rgb(218,176,18)" rx="2" ry="2" />
<text  x="1059.35" y="623.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (41 samples, 0.01%)</title><rect x="321.2" y="533" width="0.1" height="15.0" fill="rgb(207,32,50)" rx="2" ry="2" />
<text  x="324.21" y="543.5" ></text>
</g>
<g >
<title>psi_task_change (244 samples, 0.05%)</title><rect x="1072.9" y="757" width="0.7" height="15.0" fill="rgb(212,206,1)" rx="2" ry="2" />
<text  x="1075.93" y="767.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (3,261 samples, 0.72%)</title><rect x="671.3" y="917" width="8.4" height="15.0" fill="rgb(241,97,45)" rx="2" ry="2" />
<text  x="674.27" y="927.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [19]&gt; (42 samples, 0.01%)</title><rect x="62.3" y="1301" width="0.1" height="15.0" fill="rgb(220,199,17)" rx="2" ry="2" />
<text  x="65.28" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (49 samples, 0.01%)</title><rect x="89.9" y="1301" width="0.1" height="15.0" fill="rgb(233,205,41)" rx="2" ry="2" />
<text  x="92.89" y="1311.5" ></text>
</g>
<g >
<title>native_write_msr (77 samples, 0.02%)</title><rect x="675.3" y="693" width="0.2" height="15.0" fill="rgb(236,178,14)" rx="2" ry="2" />
<text  x="678.31" y="703.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,473 samples, 0.76%)</title><rect x="897.0" y="933" width="9.1" height="15.0" fill="rgb(239,100,19)" rx="2" ry="2" />
<text  x="900.04" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (44 samples, 0.01%)</title><rect x="620.3" y="853" width="0.1" height="15.0" fill="rgb(218,41,46)" rx="2" ry="2" />
<text  x="623.32" y="863.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (47 samples, 0.01%)</title><rect x="1133.3" y="869" width="0.1" height="15.0" fill="rgb(229,201,49)" rx="2" ry="2" />
<text  x="1136.31" y="879.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,295 samples, 0.29%)</title><rect x="1070.5" y="805" width="3.3" height="15.0" fill="rgb(211,102,49)" rx="2" ry="2" />
<text  x="1073.48" y="815.5" ></text>
</g>
<g >
<title>futex_wait_setup (94 samples, 0.02%)</title><rect x="342.1" y="613" width="0.2" height="15.0" fill="rgb(242,18,53)" rx="2" ry="2" />
<text  x="345.07" y="623.5" ></text>
</g>
<g >
<title>nd_jump_root (47 samples, 0.01%)</title><rect x="888.7" y="933" width="0.2" height="15.0" fill="rgb(247,111,4)" rx="2" ry="2" />
<text  x="891.73" y="943.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;char [23]&gt; (49 samples, 0.01%)</title><rect x="53.2" y="1301" width="0.1" height="15.0" fill="rgb(224,133,42)" rx="2" ry="2" />
<text  x="56.22" y="1311.5" ></text>
</g>
<g >
<title>mmap_region (6,574 samples, 1.45%)</title><rect x="800.7" y="965" width="17.1" height="15.0" fill="rgb(248,138,44)" rx="2" ry="2" />
<text  x="803.67" y="975.5" ></text>
</g>
<g >
<title>__virt_addr_valid (98 samples, 0.02%)</title><rect x="938.3" y="693" width="0.2" height="15.0" fill="rgb(223,219,27)" rx="2" ry="2" />
<text  x="941.27" y="703.5" ></text>
</g>
<g >
<title>refill_stock (49 samples, 0.01%)</title><rect x="185.3" y="517" width="0.1" height="15.0" fill="rgb(225,5,37)" rx="2" ry="2" />
<text  x="188.32" y="527.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (136 samples, 0.03%)</title><rect x="531.8" y="789" width="0.4" height="15.0" fill="rgb(246,214,10)" rx="2" ry="2" />
<text  x="534.82" y="799.5" ></text>
</g>
<g >
<title>operator new (150 samples, 0.03%)</title><rect x="258.1" y="805" width="0.4" height="15.0" fill="rgb(247,162,20)" rx="2" ry="2" />
<text  x="261.14" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (636 samples, 0.14%)</title><rect x="1022.6" y="981" width="1.6" height="15.0" fill="rgb(235,183,23)" rx="2" ry="2" />
<text  x="1025.58" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (68 samples, 0.01%)</title><rect x="466.9" y="1077" width="0.1" height="15.0" fill="rgb(215,103,7)" rx="2" ry="2" />
<text  x="469.86" y="1087.5" ></text>
</g>
<g >
<title>netif_rx (104 samples, 0.02%)</title><rect x="415.6" y="373" width="0.3" height="15.0" fill="rgb(220,136,29)" rx="2" ry="2" />
<text  x="418.59" y="383.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (9,111 samples, 2.01%)</title><rect x="933.5" y="901" width="23.7" height="15.0" fill="rgb(225,175,28)" rx="2" ry="2" />
<text  x="936.51" y="911.5" >_..</text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (88 samples, 0.02%)</title><rect x="123.0" y="1301" width="0.2" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="125.96" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (18,554 samples, 4.09%)</title><rect x="1027.2" y="997" width="48.2" height="15.0" fill="rgb(242,10,42)" rx="2" ry="2" />
<text  x="1030.18" y="1007.5" >spdl..</text>
</g>
<g >
<title>alloc_file (950 samples, 0.21%)</title><rect x="1161.3" y="949" width="2.5" height="15.0" fill="rgb(241,104,20)" rx="2" ry="2" />
<text  x="1164.34" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (65 samples, 0.01%)</title><rect x="1138.2" y="1077" width="0.2" height="15.0" fill="rgb(217,168,50)" rx="2" ry="2" />
<text  x="1141.23" y="1087.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (121 samples, 0.03%)</title><rect x="645.8" y="917" width="0.4" height="15.0" fill="rgb(253,207,22)" rx="2" ry="2" />
<text  x="648.85" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (101 samples, 0.02%)</title><rect x="1038.1" y="917" width="0.3" height="15.0" fill="rgb(236,128,49)" rx="2" ry="2" />
<text  x="1041.12" y="927.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (72 samples, 0.02%)</title><rect x="112.8" y="1301" width="0.2" height="15.0" fill="rgb(215,128,29)" rx="2" ry="2" />
<text  x="115.80" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (399 samples, 0.09%)</title><rect x="169.0" y="821" width="1.1" height="15.0" fill="rgb(243,10,13)" rx="2" ry="2" />
<text  x="172.02" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock (150 samples, 0.03%)</title><rect x="572.1" y="613" width="0.4" height="15.0" fill="rgb(205,100,49)" rx="2" ry="2" />
<text  x="575.07" y="623.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40 samples, 0.01%)</title><rect x="1039.6" y="933" width="0.1" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="1042.64" y="943.5" ></text>
</g>
<g >
<title>security_file_permission (56 samples, 0.01%)</title><rect x="558.9" y="629" width="0.2" height="15.0" fill="rgb(208,188,17)" rx="2" ry="2" />
<text  x="561.92" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (193 samples, 0.04%)</title><rect x="505.7" y="1029" width="0.5" height="15.0" fill="rgb(238,219,48)" rx="2" ry="2" />
<text  x="508.66" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (91 samples, 0.02%)</title><rect x="582.8" y="741" width="0.3" height="15.0" fill="rgb(241,125,5)" rx="2" ry="2" />
<text  x="585.82" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (373 samples, 0.08%)</title><rect x="770.1" y="965" width="0.9" height="15.0" fill="rgb(213,49,15)" rx="2" ry="2" />
<text  x="773.05" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (59 samples, 0.01%)</title><rect x="506.0" y="965" width="0.1" height="15.0" fill="rgb(225,164,2)" rx="2" ry="2" />
<text  x="508.95" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (237 samples, 0.05%)</title><rect x="1038.4" y="885" width="0.6" height="15.0" fill="rgb(248,188,54)" rx="2" ry="2" />
<text  x="1041.43" y="895.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (119 samples, 0.03%)</title><rect x="917.3" y="773" width="0.3" height="15.0" fill="rgb(241,71,49)" rx="2" ry="2" />
<text  x="920.26" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (78 samples, 0.02%)</title><rect x="1170.8" y="1061" width="0.2" height="15.0" fill="rgb(220,64,24)" rx="2" ry="2" />
<text  x="1173.79" y="1071.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (9,941 samples, 2.19%)</title><rect x="536.0" y="789" width="25.8" height="15.0" fill="rgb(218,167,33)" rx="2" ry="2" />
<text  x="539.00" y="799.5" >_..</text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view (73 samples, 0.02%)</title><rect x="633.8" y="1013" width="0.2" height="15.0" fill="rgb(232,216,40)" rx="2" ry="2" />
<text  x="636.83" y="1023.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (96 samples, 0.02%)</title><rect x="185.1" y="517" width="0.2" height="15.0" fill="rgb(232,86,28)" rx="2" ry="2" />
<text  x="188.07" y="527.5" ></text>
</g>
<g >
<title>__ip_local_out (45 samples, 0.01%)</title><rect x="183.6" y="405" width="0.1" height="15.0" fill="rgb(223,83,10)" rx="2" ry="2" />
<text  x="186.56" y="415.5" ></text>
</g>
<g >
<title>memcpy_erms (59 samples, 0.01%)</title><rect x="1049.6" y="693" width="0.2" height="15.0" fill="rgb(227,57,50)" rx="2" ry="2" />
<text  x="1052.62" y="703.5" ></text>
</g>
<g >
<title>wake_up_q (1,704 samples, 0.38%)</title><rect x="571.6" y="661" width="4.4" height="15.0" fill="rgb(223,212,36)" rx="2" ry="2" />
<text  x="574.62" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr (145 samples, 0.03%)</title><rect x="512.8" y="965" width="0.4" height="15.0" fill="rgb(228,145,21)" rx="2" ry="2" />
<text  x="515.78" y="975.5" ></text>
</g>
<g >
<title>security_file_permission (70 samples, 0.02%)</title><rect x="1060.3" y="789" width="0.2" height="15.0" fill="rgb(237,198,40)" rx="2" ry="2" />
<text  x="1063.32" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (541 samples, 0.12%)</title><rect x="502.7" y="1029" width="1.4" height="15.0" fill="rgb(243,82,7)" rx="2" ry="2" />
<text  x="505.68" y="1039.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (82 samples, 0.02%)</title><rect x="902.2" y="789" width="0.3" height="15.0" fill="rgb(230,95,18)" rx="2" ry="2" />
<text  x="905.24" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (67 samples, 0.01%)</title><rect x="23.9" y="1301" width="0.2" height="15.0" fill="rgb(219,69,28)" rx="2" ry="2" />
<text  x="26.90" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (287 samples, 0.06%)</title><rect x="1023.4" y="885" width="0.8" height="15.0" fill="rgb(206,156,3)" rx="2" ry="2" />
<text  x="1026.42" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,968 samples, 0.43%)</title><rect x="958.4" y="821" width="5.1" height="15.0" fill="rgb(219,28,46)" rx="2" ry="2" />
<text  x="961.36" y="831.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (106 samples, 0.02%)</title><rect x="981.3" y="917" width="0.3" height="15.0" fill="rgb(243,143,35)" rx="2" ry="2" />
<text  x="984.34" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (48 samples, 0.01%)</title><rect x="584.4" y="917" width="0.2" height="15.0" fill="rgb(234,117,54)" rx="2" ry="2" />
<text  x="587.44" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (42 samples, 0.01%)</title><rect x="988.6" y="981" width="0.1" height="15.0" fill="rgb(240,216,14)" rx="2" ry="2" />
<text  x="991.57" y="991.5" ></text>
</g>
<g >
<title>task_work_run (9,161 samples, 2.02%)</title><rect x="1081.6" y="853" width="23.8" height="15.0" fill="rgb(228,87,3)" rx="2" ry="2" />
<text  x="1084.61" y="863.5" >t..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (91 samples, 0.02%)</title><rect x="259.1" y="869" width="0.3" height="15.0" fill="rgb(239,141,42)" rx="2" ry="2" />
<text  x="262.13" y="879.5" ></text>
</g>
<g >
<title>__GI_inet_ntop (1,935 samples, 0.43%)</title><rect x="611.7" y="901" width="5.0" height="15.0" fill="rgb(226,76,14)" rx="2" ry="2" />
<text  x="614.71" y="911.5" ></text>
</g>
<g >
<title>psi_task_change (376 samples, 0.08%)</title><rect x="574.7" y="597" width="1.0" height="15.0" fill="rgb(215,210,46)" rx="2" ry="2" />
<text  x="577.73" y="607.5" ></text>
</g>
<g >
<title>ip_local_out (46 samples, 0.01%)</title><rect x="183.6" y="421" width="0.1" height="15.0" fill="rgb(221,12,47)" rx="2" ry="2" />
<text  x="186.56" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1,003 samples, 0.22%)</title><rect x="979.3" y="997" width="2.6" height="15.0" fill="rgb(211,156,52)" rx="2" ry="2" />
<text  x="982.33" y="1007.5" ></text>
</g>
<g >
<title>update_rq_clock (117 samples, 0.03%)</title><rect x="1058.4" y="677" width="0.3" height="15.0" fill="rgb(254,24,10)" rx="2" ry="2" />
<text  x="1061.36" y="687.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;webserver::HttpHandler&gt;::~weak_ptr (59 samples, 0.01%)</title><rect x="276.1" y="789" width="0.2" height="15.0" fill="rgb(225,114,2)" rx="2" ry="2" />
<text  x="279.11" y="799.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (46 samples, 0.01%)</title><rect x="584.3" y="917" width="0.1" height="15.0" fill="rgb(230,73,20)" rx="2" ry="2" />
<text  x="587.32" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (65 samples, 0.01%)</title><rect x="1074.9" y="949" width="0.1" height="15.0" fill="rgb(236,158,52)" rx="2" ry="2" />
<text  x="1077.88" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (246 samples, 0.05%)</title><rect x="607.0" y="869" width="0.6" height="15.0" fill="rgb(205,91,13)" rx="2" ry="2" />
<text  x="609.98" y="879.5" ></text>
</g>
<g >
<title>release_sock (127 samples, 0.03%)</title><rect x="240.7" y="821" width="0.4" height="15.0" fill="rgb(219,97,26)" rx="2" ry="2" />
<text  x="243.74" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (511 samples, 0.11%)</title><rect x="1128.2" y="821" width="1.3" height="15.0" fill="rgb(232,75,5)" rx="2" ry="2" />
<text  x="1131.20" y="831.5" ></text>
</g>
<g >
<title>mod_objcg_state (45 samples, 0.01%)</title><rect x="1165.2" y="885" width="0.1" height="15.0" fill="rgb(216,81,1)" rx="2" ry="2" />
<text  x="1168.19" y="895.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (5,318 samples, 1.17%)</title><rect x="590.3" y="837" width="13.8" height="15.0" fill="rgb(223,193,21)" rx="2" ry="2" />
<text  x="593.28" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (360 samples, 0.08%)</title><rect x="772.2" y="1013" width="0.9" height="15.0" fill="rgb(230,222,40)" rx="2" ry="2" />
<text  x="775.20" y="1023.5" ></text>
</g>
<g >
<title>psi_group_change (269 samples, 0.06%)</title><rect x="737.5" y="725" width="0.7" height="15.0" fill="rgb(250,32,49)" rx="2" ry="2" />
<text  x="740.51" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (268 samples, 0.06%)</title><rect x="781.7" y="997" width="0.7" height="15.0" fill="rgb(224,124,31)" rx="2" ry="2" />
<text  x="784.73" y="1007.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (53 samples, 0.01%)</title><rect x="745.9" y="901" width="0.1" height="15.0" fill="rgb(244,70,17)" rx="2" ry="2" />
<text  x="748.90" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (141 samples, 0.03%)</title><rect x="1170.1" y="917" width="0.3" height="15.0" fill="rgb(219,128,33)" rx="2" ry="2" />
<text  x="1173.07" y="927.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::handle_read (9,254 samples, 2.04%)</title><rect x="235.7" y="965" width="24.0" height="15.0" fill="rgb(216,156,0)" rx="2" ry="2" />
<text  x="238.70" y="975.5" >w..</text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (118 samples, 0.03%)</title><rect x="149.6" y="1285" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="152.59" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (76 samples, 0.02%)</title><rect x="1078.8" y="901" width="0.2" height="15.0" fill="rgb(244,227,27)" rx="2" ry="2" />
<text  x="1081.76" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (170 samples, 0.04%)</title><rect x="580.2" y="885" width="0.5" height="15.0" fill="rgb(217,60,28)" rx="2" ry="2" />
<text  x="583.24" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (94 samples, 0.02%)</title><rect x="92.3" y="1301" width="0.2" height="15.0" fill="rgb(205,93,15)" rx="2" ry="2" />
<text  x="95.28" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (51 samples, 0.01%)</title><rect x="1001.6" y="933" width="0.2" height="15.0" fill="rgb(246,133,36)" rx="2" ry="2" />
<text  x="1004.65" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_v (75 samples, 0.02%)</title><rect x="502.8" y="1013" width="0.2" height="15.0" fill="rgb(205,81,14)" rx="2" ry="2" />
<text  x="505.83" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::get_arg&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, int&gt; (125 samples, 0.03%)</title><rect x="1024.4" y="949" width="0.3" height="15.0" fill="rgb(209,133,12)" rx="2" ry="2" />
<text  x="1027.41" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (81 samples, 0.02%)</title><rect x="996.2" y="949" width="0.2" height="15.0" fill="rgb(224,72,52)" rx="2" ry="2" />
<text  x="999.17" y="959.5" ></text>
</g>
<g >
<title>insert_work (79 samples, 0.02%)</title><rect x="944.4" y="645" width="0.2" height="15.0" fill="rgb(218,130,37)" rx="2" ry="2" />
<text  x="947.39" y="655.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (53 samples, 0.01%)</title><rect x="688.1" y="997" width="0.1" height="15.0" fill="rgb(212,219,13)" rx="2" ry="2" />
<text  x="691.07" y="1007.5" ></text>
</g>
<g >
<title>do_output_char (373 samples, 0.08%)</title><rect x="1048.8" y="741" width="1.0" height="15.0" fill="rgb(237,73,42)" rx="2" ry="2" />
<text  x="1051.81" y="751.5" ></text>
</g>
<g >
<title>sock_poll (546 samples, 0.12%)</title><rect x="1011.9" y="837" width="1.4" height="15.0" fill="rgb(226,59,3)" rx="2" ry="2" />
<text  x="1014.92" y="847.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (58 samples, 0.01%)</title><rect x="712.9" y="645" width="0.1" height="15.0" fill="rgb(226,227,28)" rx="2" ry="2" />
<text  x="715.88" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (248 samples, 0.05%)</title><rect x="1033.9" y="805" width="0.7" height="15.0" fill="rgb(220,103,45)" rx="2" ry="2" />
<text  x="1036.94" y="815.5" ></text>
</g>
<g >
<title>std::move&lt;void  (41 samples, 0.01%)</title><rect x="129.1" y="1301" width="0.2" height="15.0" fill="rgb(225,89,46)" rx="2" ry="2" />
<text  x="132.15" y="1311.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (370 samples, 0.08%)</title><rect x="719.6" y="661" width="1.0" height="15.0" fill="rgb(209,96,18)" rx="2" ry="2" />
<text  x="722.63" y="671.5" ></text>
</g>
<g >
<title>nf_hook_slow (249 samples, 0.05%)</title><rect x="1101.8" y="661" width="0.7" height="15.0" fill="rgb(251,191,54)" rx="2" ry="2" />
<text  x="1104.82" y="671.5" ></text>
</g>
<g >
<title>path_get (65 samples, 0.01%)</title><rect x="884.6" y="933" width="0.2" height="15.0" fill="rgb(243,10,16)" rx="2" ry="2" />
<text  x="887.59" y="943.5" ></text>
</g>
<g >
<title>generic_permission (391 samples, 0.09%)</title><rect x="858.3" y="917" width="1.0" height="15.0" fill="rgb(217,38,29)" rx="2" ry="2" />
<text  x="861.28" y="927.5" ></text>
</g>
<g >
<title>update_load_avg (192 samples, 0.04%)</title><rect x="554.1" y="453" width="0.5" height="15.0" fill="rgb(221,182,28)" rx="2" ry="2" />
<text  x="557.15" y="463.5" ></text>
</g>
<g >
<title>ktime_get (95 samples, 0.02%)</title><rect x="250.6" y="773" width="0.3" height="15.0" fill="rgb(223,123,35)" rx="2" ry="2" />
<text  x="253.63" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (56 samples, 0.01%)</title><rect x="586.2" y="821" width="0.2" height="15.0" fill="rgb(219,22,33)" rx="2" ry="2" />
<text  x="589.23" y="831.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (71 samples, 0.02%)</title><rect x="59.3" y="1301" width="0.2" height="15.0" fill="rgb(243,76,3)" rx="2" ry="2" />
<text  x="62.34" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (45 samples, 0.01%)</title><rect x="928.9" y="869" width="0.1" height="15.0" fill="rgb(246,210,13)" rx="2" ry="2" />
<text  x="931.91" y="879.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (49 samples, 0.01%)</title><rect x="618.9" y="837" width="0.1" height="15.0" fill="rgb(233,144,32)" rx="2" ry="2" />
<text  x="621.89" y="847.5" ></text>
</g>
<g >
<title>make_kuid (54 samples, 0.01%)</title><rect x="886.5" y="901" width="0.2" height="15.0" fill="rgb(212,189,31)" rx="2" ry="2" />
<text  x="889.51" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (5,575 samples, 1.23%)</title><rect x="196.7" y="293" width="14.5" height="15.0" fill="rgb(243,33,26)" rx="2" ry="2" />
<text  x="199.71" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (130 samples, 0.03%)</title><rect x="273.9" y="789" width="0.4" height="15.0" fill="rgb(224,214,49)" rx="2" ry="2" />
<text  x="276.92" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (120 samples, 0.03%)</title><rect x="518.9" y="725" width="0.3" height="15.0" fill="rgb(248,169,22)" rx="2" ry="2" />
<text  x="521.92" y="735.5" ></text>
</g>
<g >
<title>mark_wake_futex (78 samples, 0.02%)</title><rect x="571.4" y="661" width="0.2" height="15.0" fill="rgb(241,59,6)" rx="2" ry="2" />
<text  x="574.39" y="671.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (40 samples, 0.01%)</title><rect x="1026.1" y="997" width="0.1" height="15.0" fill="rgb(227,188,43)" rx="2" ry="2" />
<text  x="1029.09" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (1,070 samples, 0.24%)</title><rect x="501.3" y="1061" width="2.8" height="15.0" fill="rgb(206,74,44)" rx="2" ry="2" />
<text  x="504.35" y="1071.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (53 samples, 0.01%)</title><rect x="12.1" y="1253" width="0.2" height="15.0" fill="rgb(246,3,34)" rx="2" ry="2" />
<text  x="15.12" y="1263.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (125 samples, 0.03%)</title><rect x="336.5" y="597" width="0.4" height="15.0" fill="rgb(239,184,23)" rx="2" ry="2" />
<text  x="339.53" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (59 samples, 0.01%)</title><rect x="989.5" y="997" width="0.2" height="15.0" fill="rgb(245,130,3)" rx="2" ry="2" />
<text  x="992.52" y="1007.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (76 samples, 0.02%)</title><rect x="649.4" y="853" width="0.2" height="15.0" fill="rgb(208,191,26)" rx="2" ry="2" />
<text  x="652.39" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (115 samples, 0.03%)</title><rect x="183.8" y="213" width="0.3" height="15.0" fill="rgb(244,182,22)" rx="2" ry="2" />
<text  x="186.82" y="223.5" ></text>
</g>
<g >
<title>__queue_work (3,435 samples, 0.76%)</title><rect x="323.9" y="517" width="8.9" height="15.0" fill="rgb(233,147,28)" rx="2" ry="2" />
<text  x="326.87" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (277 samples, 0.06%)</title><rect x="606.9" y="885" width="0.7" height="15.0" fill="rgb(224,116,54)" rx="2" ry="2" />
<text  x="609.90" y="895.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (249 samples, 0.05%)</title><rect x="634.4" y="997" width="0.6" height="15.0" fill="rgb(221,130,38)" rx="2" ry="2" />
<text  x="637.38" y="1007.5" ></text>
</g>
<g >
<title>perf_output_put_handle (67 samples, 0.01%)</title><rect x="813.1" y="869" width="0.2" height="15.0" fill="rgb(210,53,41)" rx="2" ry="2" />
<text  x="816.12" y="879.5" ></text>
</g>
<g >
<title>spdlog::logger::log (20,288 samples, 4.47%)</title><rect x="634.0" y="1013" width="52.7" height="15.0" fill="rgb(227,136,26)" rx="2" ry="2" />
<text  x="637.03" y="1023.5" >spdlo..</text>
</g>
<g >
<title>sockfd_lookup_light (150 samples, 0.03%)</title><rect x="459.4" y="853" width="0.4" height="15.0" fill="rgb(249,119,36)" rx="2" ry="2" />
<text  x="462.36" y="863.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (41 samples, 0.01%)</title><rect x="121.5" y="1301" width="0.1" height="15.0" fill="rgb(207,46,12)" rx="2" ry="2" />
<text  x="124.45" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::deallocate (368 samples, 0.08%)</title><rect x="283.1" y="805" width="1.0" height="15.0" fill="rgb(213,21,37)" rx="2" ry="2" />
<text  x="286.14" y="815.5" ></text>
</g>
<g >
<title>[unknown] (4,961 samples, 1.09%)</title><rect x="144.3" y="1317" width="12.9" height="15.0" fill="rgb(239,217,6)" rx="2" ry="2" />
<text  x="147.26" y="1327.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (118 samples, 0.03%)</title><rect x="1078.6" y="1013" width="0.4" height="15.0" fill="rgb(227,21,30)" rx="2" ry="2" />
<text  x="1081.65" y="1023.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (94 samples, 0.02%)</title><rect x="324.2" y="501" width="0.2" height="15.0" fill="rgb(228,84,14)" rx="2" ry="2" />
<text  x="327.20" y="511.5" ></text>
</g>
<g >
<title>__queue_work (3,440 samples, 0.76%)</title><rect x="943.7" y="661" width="8.9" height="15.0" fill="rgb(253,142,32)" rx="2" ry="2" />
<text  x="946.65" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (41 samples, 0.01%)</title><rect x="362.2" y="821" width="0.1" height="15.0" fill="rgb(216,154,2)" rx="2" ry="2" />
<text  x="365.17" y="831.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;webserver::HttpHandler,  (55 samples, 0.01%)</title><rect x="1106.5" y="1029" width="0.1" height="15.0" fill="rgb(206,48,52)" rx="2" ry="2" />
<text  x="1109.47" y="1039.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (94 samples, 0.02%)</title><rect x="358.5" y="837" width="0.3" height="15.0" fill="rgb(240,115,41)" rx="2" ry="2" />
<text  x="361.55" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::format_arg_store&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;::format_arg_store (77 samples, 0.02%)</title><rect x="1026.2" y="997" width="0.2" height="15.0" fill="rgb(208,33,28)" rx="2" ry="2" />
<text  x="1029.21" y="1007.5" ></text>
</g>
<g >
<title>check_preempt_curr (176 samples, 0.04%)</title><rect x="209.2" y="101" width="0.4" height="15.0" fill="rgb(234,46,9)" rx="2" ry="2" />
<text  x="212.18" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (132 samples, 0.03%)</title><rect x="618.0" y="901" width="0.3" height="15.0" fill="rgb(250,185,37)" rx="2" ry="2" />
<text  x="620.98" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (72 samples, 0.02%)</title><rect x="767.7" y="997" width="0.2" height="15.0" fill="rgb(237,151,48)" rx="2" ry="2" />
<text  x="770.70" y="1007.5" ></text>
</g>
<g >
<title>std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~pair (109 samples, 0.02%)</title><rect x="579.2" y="933" width="0.3" height="15.0" fill="rgb(227,170,8)" rx="2" ry="2" />
<text  x="582.19" y="943.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (95 samples, 0.02%)</title><rect x="582.8" y="757" width="0.3" height="15.0" fill="rgb(237,57,6)" rx="2" ry="2" />
<text  x="585.81" y="767.5" ></text>
</g>
<g >
<title>down_write_killable (321 samples, 0.07%)</title><rect x="817.9" y="981" width="0.8" height="15.0" fill="rgb(212,138,10)" rx="2" ry="2" />
<text  x="820.87" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (233 samples, 0.05%)</title><rect x="738.6" y="853" width="0.6" height="15.0" fill="rgb(248,211,44)" rx="2" ry="2" />
<text  x="741.58" y="863.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::handle_close (36,331 samples, 8.00%)</title><rect x="268.4" y="949" width="94.4" height="15.0" fill="rgb(236,107,53)" rx="2" ry="2" />
<text  x="271.42" y="959.5" >webserver::..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator-- (78 samples, 0.02%)</title><rect x="988.8" y="997" width="0.2" height="15.0" fill="rgb(208,140,24)" rx="2" ry="2" />
<text  x="991.76" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (45 samples, 0.01%)</title><rect x="921.6" y="901" width="0.1" height="15.0" fill="rgb(253,206,39)" rx="2" ry="2" />
<text  x="924.63" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (990 samples, 0.22%)</title><rect x="282.1" y="885" width="2.6" height="15.0" fill="rgb(225,180,8)" rx="2" ry="2" />
<text  x="285.08" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (135 samples, 0.03%)</title><rect x="791.8" y="1061" width="0.4" height="15.0" fill="rgb(226,91,33)" rx="2" ry="2" />
<text  x="794.84" y="1071.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (164 samples, 0.04%)</title><rect x="1039.2" y="933" width="0.4" height="15.0" fill="rgb(238,46,25)" rx="2" ry="2" />
<text  x="1042.17" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (117 samples, 0.03%)</title><rect x="1104.4" y="709" width="0.3" height="15.0" fill="rgb(216,160,31)" rx="2" ry="2" />
<text  x="1107.35" y="719.5" ></text>
</g>
<g >
<title>map_id_range_down (41 samples, 0.01%)</title><rect x="1157.3" y="901" width="0.1" height="15.0" fill="rgb(240,97,22)" rx="2" ry="2" />
<text  x="1160.31" y="911.5" ></text>
</g>
<g >
<title>iterate_groups (62 samples, 0.01%)</title><rect x="961.4" y="693" width="0.2" height="15.0" fill="rgb(212,134,35)" rx="2" ry="2" />
<text  x="964.41" y="703.5" ></text>
</g>
<g >
<title>enqueue_entity (328 samples, 0.07%)</title><rect x="722.9" y="613" width="0.8" height="15.0" fill="rgb(238,228,54)" rx="2" ry="2" />
<text  x="725.87" y="623.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (103 samples, 0.02%)</title><rect x="525.6" y="741" width="0.3" height="15.0" fill="rgb(234,84,36)" rx="2" ry="2" />
<text  x="528.60" y="751.5" ></text>
</g>
<g >
<title>pick_next_task_fair (42 samples, 0.01%)</title><rect x="656.6" y="629" width="0.1" height="15.0" fill="rgb(254,178,46)" rx="2" ry="2" />
<text  x="659.63" y="639.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (87 samples, 0.02%)</title><rect x="960.5" y="677" width="0.3" height="15.0" fill="rgb(253,79,44)" rx="2" ry="2" />
<text  x="963.54" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (76 samples, 0.02%)</title><rect x="911.8" y="1045" width="0.1" height="15.0" fill="rgb(236,75,13)" rx="2" ry="2" />
<text  x="914.75" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (85 samples, 0.02%)</title><rect x="982.5" y="965" width="0.3" height="15.0" fill="rgb(218,25,32)" rx="2" ry="2" />
<text  x="985.55" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (249 samples, 0.05%)</title><rect x="607.8" y="821" width="0.6" height="15.0" fill="rgb(243,183,5)" rx="2" ry="2" />
<text  x="610.77" y="831.5" ></text>
</g>
<g >
<title>bpf_lsm_socket_recvmsg (44 samples, 0.01%)</title><rect x="251.3" y="821" width="0.1" height="15.0" fill="rgb(214,89,16)" rx="2" ry="2" />
<text  x="254.27" y="831.5" ></text>
</g>
<g >
<title>__napi_poll (333 samples, 0.07%)</title><rect x="1086.2" y="533" width="0.9" height="15.0" fill="rgb(247,119,11)" rx="2" ry="2" />
<text  x="1089.22" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,074 samples, 0.68%)</title><rect x="944.6" y="645" width="8.0" height="15.0" fill="rgb(209,85,39)" rx="2" ry="2" />
<text  x="947.60" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (46 samples, 0.01%)</title><rect x="577.3" y="789" width="0.1" height="15.0" fill="rgb(219,31,41)" rx="2" ry="2" />
<text  x="580.31" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (50 samples, 0.01%)</title><rect x="687.5" y="997" width="0.2" height="15.0" fill="rgb(252,122,20)" rx="2" ry="2" />
<text  x="690.53" y="1007.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (755 samples, 0.17%)</title><rect x="1177.6" y="1061" width="1.9" height="15.0" fill="rgb(205,213,21)" rx="2" ry="2" />
<text  x="1180.55" y="1071.5" ></text>
</g>
<g >
<title>dequeue_entity (235 samples, 0.05%)</title><rect x="1065.2" y="741" width="0.6" height="15.0" fill="rgb(211,24,40)" rx="2" ry="2" />
<text  x="1068.17" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*&gt; (21,547 samples, 4.74%)</title><rect x="166.1" y="1061" width="55.9" height="15.0" fill="rgb(211,117,27)" rx="2" ry="2" />
<text  x="169.06" y="1071.5" >std::..</text>
</g>
<g >
<title>__tty_buffer_request_room (133 samples, 0.03%)</title><rect x="726.0" y="693" width="0.4" height="15.0" fill="rgb(234,33,19)" rx="2" ry="2" />
<text  x="729.03" y="703.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (159 samples, 0.04%)</title><rect x="917.2" y="805" width="0.4" height="15.0" fill="rgb(224,37,53)" rx="2" ry="2" />
<text  x="920.16" y="815.5" ></text>
</g>
<g >
<title>__lll_lock_wait (3,022 samples, 0.67%)</title><rect x="671.8" y="885" width="7.8" height="15.0" fill="rgb(212,138,35)" rx="2" ry="2" />
<text  x="674.79" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (154 samples, 0.03%)</title><rect x="763.9" y="981" width="0.4" height="15.0" fill="rgb(253,122,54)" rx="2" ry="2" />
<text  x="766.92" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (81 samples, 0.02%)</title><rect x="1002.2" y="949" width="0.2" height="15.0" fill="rgb(252,67,25)" rx="2" ry="2" />
<text  x="1005.17" y="959.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (277 samples, 0.06%)</title><rect x="895.3" y="965" width="0.7" height="15.0" fill="rgb(221,67,46)" rx="2" ry="2" />
<text  x="898.30" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (341 samples, 0.08%)</title><rect x="349.5" y="837" width="0.9" height="15.0" fill="rgb(207,125,46)" rx="2" ry="2" />
<text  x="352.54" y="847.5" ></text>
</g>
<g >
<title>drain_obj_stock (44 samples, 0.01%)</title><rect x="601.5" y="709" width="0.1" height="15.0" fill="rgb(210,177,32)" rx="2" ry="2" />
<text  x="604.49" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (104 samples, 0.02%)</title><rect x="370.0" y="741" width="0.2" height="15.0" fill="rgb(242,211,7)" rx="2" ry="2" />
<text  x="372.95" y="751.5" ></text>
</g>
<g >
<title>__ksize (71 samples, 0.02%)</title><rect x="218.7" y="501" width="0.2" height="15.0" fill="rgb(226,32,29)" rx="2" ry="2" />
<text  x="221.74" y="511.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (78 samples, 0.02%)</title><rect x="48.7" y="1301" width="0.2" height="15.0" fill="rgb(231,19,5)" rx="2" ry="2" />
<text  x="51.73" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (58 samples, 0.01%)</title><rect x="596.4" y="677" width="0.1" height="15.0" fill="rgb(233,205,2)" rx="2" ry="2" />
<text  x="599.38" y="687.5" ></text>
</g>
<g >
<title>ttwu_do_activate (532 samples, 0.12%)</title><rect x="1072.2" y="789" width="1.4" height="15.0" fill="rgb(246,85,12)" rx="2" ry="2" />
<text  x="1075.18" y="799.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (213 samples, 0.05%)</title><rect x="967.5" y="821" width="0.6" height="15.0" fill="rgb(233,100,53)" rx="2" ry="2" />
<text  x="970.50" y="831.5" ></text>
</g>
<g >
<title>release_sock (76 samples, 0.02%)</title><rect x="220.7" y="549" width="0.2" height="15.0" fill="rgb(238,144,32)" rx="2" ry="2" />
<text  x="223.68" y="559.5" ></text>
</g>
<g >
<title>__mod_timer (120 samples, 0.03%)</title><rect x="1095.1" y="405" width="0.3" height="15.0" fill="rgb(244,137,39)" rx="2" ry="2" />
<text  x="1098.10" y="415.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (54 samples, 0.01%)</title><rect x="1151.9" y="933" width="0.2" height="15.0" fill="rgb(246,173,12)" rx="2" ry="2" />
<text  x="1154.95" y="943.5" ></text>
</g>
<g >
<title>filp_close (117 samples, 0.03%)</title><rect x="1080.6" y="869" width="0.3" height="15.0" fill="rgb(248,139,31)" rx="2" ry="2" />
<text  x="1083.59" y="879.5" ></text>
</g>
<g >
<title>update_cfs_group (64 samples, 0.01%)</title><rect x="484.9" y="949" width="0.1" height="15.0" fill="rgb(254,131,3)" rx="2" ry="2" />
<text  x="487.87" y="959.5" ></text>
</g>
<g >
<title>strncpy_from_user (408 samples, 0.09%)</title><rect x="866.0" y="949" width="1.1" height="15.0" fill="rgb(241,199,41)" rx="2" ry="2" />
<text  x="868.99" y="959.5" ></text>
</g>
<g >
<title>ktime_get (44 samples, 0.01%)</title><rect x="210.6" y="197" width="0.1" height="15.0" fill="rgb(239,152,28)" rx="2" ry="2" />
<text  x="213.56" y="207.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (16,134 samples, 3.55%)</title><rect x="397.9" y="549" width="42.0" height="15.0" fill="rgb(240,68,1)" rx="2" ry="2" />
<text  x="400.94" y="559.5" >ip_..</text>
</g>
<g >
<title>std::mutex::lock (278 samples, 0.06%)</title><rect x="622.5" y="1061" width="0.7" height="15.0" fill="rgb(207,121,4)" rx="2" ry="2" />
<text  x="625.51" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (2,123 samples, 0.47%)</title><rect x="1008.3" y="885" width="5.5" height="15.0" fill="rgb(237,2,6)" rx="2" ry="2" />
<text  x="1011.28" y="895.5" ></text>
</g>
<g >
<title>__perf_event__output_id_sample (112 samples, 0.02%)</title><rect x="809.9" y="885" width="0.3" height="15.0" fill="rgb(219,194,8)" rx="2" ry="2" />
<text  x="812.88" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (128 samples, 0.03%)</title><rect x="11.6" y="1269" width="0.3" height="15.0" fill="rgb(251,169,50)" rx="2" ry="2" />
<text  x="14.56" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (768 samples, 0.17%)</title><rect x="1089.2" y="645" width="2.0" height="15.0" fill="rgb(231,207,18)" rx="2" ry="2" />
<text  x="1092.16" y="655.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (61 samples, 0.01%)</title><rect x="1038.2" y="837" width="0.2" height="15.0" fill="rgb(229,107,24)" rx="2" ry="2" />
<text  x="1041.22" y="847.5" ></text>
</g>
<g >
<title>update_load_avg (66 samples, 0.01%)</title><rect x="345.8" y="533" width="0.1" height="15.0" fill="rgb(218,106,41)" rx="2" ry="2" />
<text  x="348.76" y="543.5" ></text>
</g>
<g >
<title>ttwu_do_activate (476 samples, 0.10%)</title><rect x="966.0" y="741" width="1.3" height="15.0" fill="rgb(242,134,52)" rx="2" ry="2" />
<text  x="969.04" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (240 samples, 0.05%)</title><rect x="930.6" y="853" width="0.6" height="15.0" fill="rgb(216,85,42)" rx="2" ry="2" />
<text  x="933.58" y="863.5" ></text>
</g>
<g >
<title>ip_local_out (3,484 samples, 0.77%)</title><rect x="378.3" y="741" width="9.1" height="15.0" fill="rgb(221,132,5)" rx="2" ry="2" />
<text  x="381.31" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (117 samples, 0.03%)</title><rect x="617.4" y="837" width="0.3" height="15.0" fill="rgb(222,206,45)" rx="2" ry="2" />
<text  x="620.40" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (102 samples, 0.02%)</title><rect x="929.4" y="885" width="0.3" height="15.0" fill="rgb(238,151,11)" rx="2" ry="2" />
<text  x="932.43" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (178 samples, 0.04%)</title><rect x="201.6" y="197" width="0.4" height="15.0" fill="rgb(243,70,9)" rx="2" ry="2" />
<text  x="204.58" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt;::deallocate (116 samples, 0.03%)</title><rect x="349.7" y="789" width="0.3" height="15.0" fill="rgb(221,209,54)" rx="2" ry="2" />
<text  x="352.70" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::get_arg&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, int&gt; (126 samples, 0.03%)</title><rect x="296.7" y="757" width="0.3" height="15.0" fill="rgb(205,110,44)" rx="2" ry="2" />
<text  x="299.69" y="767.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (55 samples, 0.01%)</title><rect x="296.3" y="565" width="0.1" height="15.0" fill="rgb(226,94,51)" rx="2" ry="2" />
<text  x="299.28" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (71 samples, 0.02%)</title><rect x="774.8" y="901" width="0.2" height="15.0" fill="rgb(225,43,34)" rx="2" ry="2" />
<text  x="777.83" y="911.5" ></text>
</g>
<g >
<title>set_task_cpu (59 samples, 0.01%)</title><rect x="722.4" y="661" width="0.1" height="15.0" fill="rgb(248,97,52)" rx="2" ry="2" />
<text  x="725.35" y="671.5" ></text>
</g>
<g >
<title>update_load_avg (296 samples, 0.07%)</title><rect x="431.4" y="341" width="0.7" height="15.0" fill="rgb(232,45,18)" rx="2" ry="2" />
<text  x="434.35" y="351.5" ></text>
</g>
<g >
<title>pick_next_task_fair (252 samples, 0.06%)</title><rect x="1133.5" y="901" width="0.6" height="15.0" fill="rgb(239,158,49)" rx="2" ry="2" />
<text  x="1136.46" y="911.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (160 samples, 0.04%)</title><rect x="1159.2" y="901" width="0.4" height="15.0" fill="rgb(214,166,54)" rx="2" ry="2" />
<text  x="1162.20" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,669 samples, 2.13%)</title><rect x="704.8" y="837" width="25.1" height="15.0" fill="rgb(248,10,50)" rx="2" ry="2" />
<text  x="707.76" y="847.5" >e..</text>
</g>
<g >
<title>__GI___libc_free (122 samples, 0.03%)</title><rect x="1078.2" y="1013" width="0.3" height="15.0" fill="rgb(244,47,1)" rx="2" ry="2" />
<text  x="1081.16" y="1023.5" ></text>
</g>
<g >
<title>__destroy_inode (269 samples, 0.06%)</title><rect x="1082.3" y="789" width="0.7" height="15.0" fill="rgb(212,17,2)" rx="2" ry="2" />
<text  x="1085.25" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (622 samples, 0.14%)</title><rect x="581.6" y="885" width="1.6" height="15.0" fill="rgb(229,177,40)" rx="2" ry="2" />
<text  x="584.60" y="895.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (60 samples, 0.01%)</title><rect x="643.8" y="805" width="0.1" height="15.0" fill="rgb(239,211,27)" rx="2" ry="2" />
<text  x="646.79" y="815.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (46 samples, 0.01%)</title><rect x="529.8" y="645" width="0.1" height="15.0" fill="rgb(247,95,47)" rx="2" ry="2" />
<text  x="532.83" y="655.5" ></text>
</g>
<g >
<title>skb_release_data (249 samples, 0.05%)</title><rect x="368.6" y="725" width="0.7" height="15.0" fill="rgb(227,197,9)" rx="2" ry="2" />
<text  x="371.62" y="735.5" ></text>
</g>
<g >
<title>__strlen_avx2 (70 samples, 0.02%)</title><rect x="759.8" y="1029" width="0.2" height="15.0" fill="rgb(241,192,38)" rx="2" ry="2" />
<text  x="762.79" y="1039.5" ></text>
</g>
<g >
<title>tcp_close (14,695 samples, 3.24%)</title><rect x="182.7" y="565" width="38.2" height="15.0" fill="rgb(225,203,18)" rx="2" ry="2" />
<text  x="185.70" y="575.5" >tcp..</text>
</g>
<g >
<title>__x2apic_send_IPI_dest (52 samples, 0.01%)</title><rect x="951.6" y="581" width="0.1" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="954.56" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (198 samples, 0.04%)</title><rect x="1002.8" y="997" width="0.5" height="15.0" fill="rgb(213,135,32)" rx="2" ry="2" />
<text  x="1005.81" y="1007.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (384 samples, 0.08%)</title><rect x="700.6" y="933" width="1.0" height="15.0" fill="rgb(219,110,48)" rx="2" ry="2" />
<text  x="703.65" y="943.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (90 samples, 0.02%)</title><rect x="557.4" y="549" width="0.2" height="15.0" fill="rgb(214,103,18)" rx="2" ry="2" />
<text  x="560.37" y="559.5" ></text>
</g>
<g >
<title>_int_free (58 samples, 0.01%)</title><rect x="225.5" y="965" width="0.1" height="15.0" fill="rgb(212,195,42)" rx="2" ry="2" />
<text  x="228.45" y="975.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (42 samples, 0.01%)</title><rect x="1100.4" y="421" width="0.1" height="15.0" fill="rgb(216,196,4)" rx="2" ry="2" />
<text  x="1103.42" y="431.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;webserver::TcpSocket&gt; (19,405 samples, 4.27%)</title><rect x="171.5" y="773" width="50.4" height="15.0" fill="rgb(249,116,2)" rx="2" ry="2" />
<text  x="174.46" y="783.5" >std::..</text>
</g>
<g >
<title>_raw_spin_lock (71 samples, 0.02%)</title><rect x="876.3" y="965" width="0.2" height="15.0" fill="rgb(230,148,14)" rx="2" ry="2" />
<text  x="879.33" y="975.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (82 samples, 0.02%)</title><rect x="719.2" y="661" width="0.2" height="15.0" fill="rgb(210,182,47)" rx="2" ry="2" />
<text  x="722.19" y="671.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (189 samples, 0.04%)</title><rect x="310.6" y="677" width="0.5" height="15.0" fill="rgb(225,165,22)" rx="2" ry="2" />
<text  x="313.62" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;webserver::HttpHandler*,  (1,324 samples, 0.29%)</title><rect x="1107.0" y="1029" width="3.4" height="15.0" fill="rgb(236,46,29)" rx="2" ry="2" />
<text  x="1110.00" y="1039.5" ></text>
</g>
<g >
<title>process_echoes (70 samples, 0.02%)</title><rect x="657.8" y="725" width="0.2" height="15.0" fill="rgb(237,149,53)" rx="2" ry="2" />
<text  x="660.78" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (441 samples, 0.10%)</title><rect x="1076.8" y="1077" width="1.2" height="15.0" fill="rgb(212,167,26)" rx="2" ry="2" />
<text  x="1079.85" y="1087.5" ></text>
</g>
<g >
<title>sock_alloc (1,975 samples, 0.43%)</title><rect x="1156.0" y="981" width="5.2" height="15.0" fill="rgb(253,68,42)" rx="2" ry="2" />
<text  x="1159.03" y="991.5" ></text>
</g>
<g >
<title>flush_tlb_func (264 samples, 0.06%)</title><rect x="831.7" y="917" width="0.7" height="15.0" fill="rgb(241,197,6)" rx="2" ry="2" />
<text  x="834.67" y="927.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (66 samples, 0.01%)</title><rect x="144.0" y="1301" width="0.2" height="15.0" fill="rgb(224,126,36)" rx="2" ry="2" />
<text  x="147.01" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (327 samples, 0.07%)</title><rect x="303.3" y="741" width="0.8" height="15.0" fill="rgb(222,25,19)" rx="2" ry="2" />
<text  x="306.29" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (52 samples, 0.01%)</title><rect x="630.8" y="1013" width="0.2" height="15.0" fill="rgb(218,221,54)" rx="2" ry="2" />
<text  x="633.83" y="1023.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,516 samples, 1.21%)</title><rect x="423.1" y="421" width="14.3" height="15.0" fill="rgb(226,193,22)" rx="2" ry="2" />
<text  x="426.05" y="431.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::get_fd (48 samples, 0.01%)</title><rect x="745.1" y="981" width="0.1" height="15.0" fill="rgb(217,114,14)" rx="2" ry="2" />
<text  x="748.11" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (135 samples, 0.03%)</title><rect x="781.0" y="965" width="0.3" height="15.0" fill="rgb(221,83,26)" rx="2" ry="2" />
<text  x="783.98" y="975.5" ></text>
</g>
<g >
<title>[web_server] (152 samples, 0.03%)</title><rect x="514.6" y="869" width="0.4" height="15.0" fill="rgb(223,130,0)" rx="2" ry="2" />
<text  x="517.64" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (107 samples, 0.02%)</title><rect x="1071.2" y="773" width="0.3" height="15.0" fill="rgb(252,38,9)" rx="2" ry="2" />
<text  x="1074.20" y="783.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (118 samples, 0.03%)</title><rect x="357.2" y="837" width="0.3" height="15.0" fill="rgb(223,56,37)" rx="2" ry="2" />
<text  x="360.18" y="847.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::load (44 samples, 0.01%)</title><rect x="347.8" y="773" width="0.1" height="15.0" fill="rgb(251,67,16)" rx="2" ry="2" />
<text  x="350.78" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (183 samples, 0.04%)</title><rect x="1113.3" y="965" width="0.4" height="15.0" fill="rgb(230,36,30)" rx="2" ry="2" />
<text  x="1116.27" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (811 samples, 0.18%)</title><rect x="641.1" y="885" width="2.1" height="15.0" fill="rgb(228,171,14)" rx="2" ry="2" />
<text  x="644.10" y="895.5" ></text>
</g>
<g >
<title>_itoa_word (131 samples, 0.03%)</title><rect x="616.1" y="837" width="0.3" height="15.0" fill="rgb(246,6,17)" rx="2" ry="2" />
<text  x="619.06" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_disjunct (78 samples, 0.02%)</title><rect x="994.0" y="917" width="0.2" height="15.0" fill="rgb(218,69,21)" rx="2" ry="2" />
<text  x="996.99" y="927.5" ></text>
</g>
<g >
<title>up_read (49 samples, 0.01%)</title><rect x="845.7" y="981" width="0.1" height="15.0" fill="rgb(248,63,41)" rx="2" ry="2" />
<text  x="848.69" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,774 samples, 0.39%)</title><rect x="680.4" y="853" width="4.6" height="15.0" fill="rgb(205,67,14)" rx="2" ry="2" />
<text  x="683.36" y="863.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2,208 samples, 0.49%)</title><rect x="957.9" y="853" width="5.8" height="15.0" fill="rgb(248,51,37)" rx="2" ry="2" />
<text  x="960.95" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (202 samples, 0.04%)</title><rect x="1036.3" y="901" width="0.6" height="15.0" fill="rgb(246,100,1)" rx="2" ry="2" />
<text  x="1039.35" y="911.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (6,677 samples, 1.47%)</title><rect x="317.1" y="581" width="17.4" height="15.0" fill="rgb(227,44,34)" rx="2" ry="2" />
<text  x="320.11" y="591.5" ></text>
</g>
<g >
<title>pty_write_room (138 samples, 0.03%)</title><rect x="726.6" y="725" width="0.4" height="15.0" fill="rgb(246,137,46)" rx="2" ry="2" />
<text  x="729.63" y="735.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (107 samples, 0.02%)</title><rect x="893.9" y="965" width="0.3" height="15.0" fill="rgb(221,79,16)" rx="2" ry="2" />
<text  x="896.92" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (295 samples, 0.06%)</title><rect x="989.4" y="1013" width="0.8" height="15.0" fill="rgb(232,55,41)" rx="2" ry="2" />
<text  x="992.43" y="1023.5" ></text>
</g>
<g >
<title>update_load_avg (61 samples, 0.01%)</title><rect x="340.1" y="533" width="0.1" height="15.0" fill="rgb(212,42,36)" rx="2" ry="2" />
<text  x="343.06" y="543.5" ></text>
</g>
<g >
<title>__schedule (209 samples, 0.05%)</title><rect x="711.4" y="645" width="0.5" height="15.0" fill="rgb(211,31,48)" rx="2" ry="2" />
<text  x="714.39" y="655.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::shared_from_this (110 samples, 0.02%)</title><rect x="743.4" y="1029" width="0.3" height="15.0" fill="rgb(221,213,38)" rx="2" ry="2" />
<text  x="746.38" y="1039.5" ></text>
</g>
<g >
<title>remove_vma (717 samples, 0.16%)</title><rect x="825.8" y="965" width="1.9" height="15.0" fill="rgb(217,0,24)" rx="2" ry="2" />
<text  x="828.81" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (50 samples, 0.01%)</title><rect x="995.9" y="933" width="0.2" height="15.0" fill="rgb(212,204,14)" rx="2" ry="2" />
<text  x="998.92" y="943.5" ></text>
</g>
<g >
<title>psi_task_change (150 samples, 0.03%)</title><rect x="724.1" y="629" width="0.4" height="15.0" fill="rgb(230,56,41)" rx="2" ry="2" />
<text  x="727.08" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (41 samples, 0.01%)</title><rect x="358.6" y="821" width="0.1" height="15.0" fill="rgb(207,141,26)" rx="2" ry="2" />
<text  x="361.56" y="831.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::set_handler (39 samples, 0.01%)</title><rect x="142.3" y="1301" width="0.1" height="15.0" fill="rgb(208,37,27)" rx="2" ry="2" />
<text  x="145.33" y="1311.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (10,207 samples, 2.25%)</title><rect x="1079.2" y="1029" width="26.5" height="15.0" fill="rgb(235,50,29)" rx="2" ry="2" />
<text  x="1082.21" y="1039.5" >s..</text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (47 samples, 0.01%)</title><rect x="927.4" y="741" width="0.1" height="15.0" fill="rgb(205,36,27)" rx="2" ry="2" />
<text  x="930.36" y="751.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (215 samples, 0.05%)</title><rect x="647.6" y="933" width="0.6" height="15.0" fill="rgb(223,91,12)" rx="2" ry="2" />
<text  x="650.61" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (112 samples, 0.02%)</title><rect x="321.8" y="517" width="0.3" height="15.0" fill="rgb(240,5,50)" rx="2" ry="2" />
<text  x="324.81" y="527.5" ></text>
</g>
<g >
<title>ldsem_down_read (53 samples, 0.01%)</title><rect x="558.5" y="581" width="0.2" height="15.0" fill="rgb(229,218,20)" rx="2" ry="2" />
<text  x="561.53" y="591.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (184 samples, 0.04%)</title><rect x="1036.9" y="933" width="0.5" height="15.0" fill="rgb(228,3,11)" rx="2" ry="2" />
<text  x="1039.88" y="943.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (47 samples, 0.01%)</title><rect x="838.9" y="885" width="0.1" height="15.0" fill="rgb(208,63,38)" rx="2" ry="2" />
<text  x="841.90" y="895.5" ></text>
</g>
<g >
<title>ksys_write (6,517 samples, 1.43%)</title><rect x="651.6" y="805" width="17.0" height="15.0" fill="rgb(251,72,8)" rx="2" ry="2" />
<text  x="654.63" y="815.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (810 samples, 0.18%)</title><rect x="527.2" y="741" width="2.1" height="15.0" fill="rgb(241,50,39)" rx="2" ry="2" />
<text  x="530.22" y="751.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;webserver::HttpHandler&gt;::operator=&lt;webserver::HttpHandler&gt; (61 samples, 0.01%)</title><rect x="611.4" y="901" width="0.2" height="15.0" fill="rgb(212,167,48)" rx="2" ry="2" />
<text  x="614.39" y="911.5" ></text>
</g>
<g >
<title>std::function&lt;void  (182 samples, 0.04%)</title><rect x="1109.8" y="821" width="0.5" height="15.0" fill="rgb(240,79,9)" rx="2" ry="2" />
<text  x="1112.78" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock (68 samples, 0.01%)</title><rect x="324.4" y="501" width="0.2" height="15.0" fill="rgb(222,90,2)" rx="2" ry="2" />
<text  x="327.45" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::erase (1,002 samples, 0.22%)</title><rect x="282.1" y="901" width="2.6" height="15.0" fill="rgb(245,178,23)" rx="2" ry="2" />
<text  x="285.05" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (6,339 samples, 1.40%)</title><rect x="196.3" y="325" width="16.4" height="15.0" fill="rgb(214,7,23)" rx="2" ry="2" />
<text  x="199.27" y="335.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (212 samples, 0.05%)</title><rect x="218.2" y="501" width="0.5" height="15.0" fill="rgb(243,108,31)" rx="2" ry="2" />
<text  x="221.19" y="511.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (267 samples, 0.06%)</title><rect x="689.6" y="901" width="0.6" height="15.0" fill="rgb(233,180,13)" rx="2" ry="2" />
<text  x="692.55" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (43 samples, 0.01%)</title><rect x="350.3" y="693" width="0.1" height="15.0" fill="rgb(216,31,40)" rx="2" ry="2" />
<text  x="353.28" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (66 samples, 0.01%)</title><rect x="929.5" y="821" width="0.2" height="15.0" fill="rgb(236,111,44)" rx="2" ry="2" />
<text  x="932.52" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (202 samples, 0.04%)</title><rect x="341.3" y="549" width="0.5" height="15.0" fill="rgb(247,94,35)" rx="2" ry="2" />
<text  x="344.30" y="559.5" ></text>
</g>
<g >
<title>tcp_sendmsg (36,014 samples, 7.93%)</title><rect x="365.8" y="837" width="93.6" height="15.0" fill="rgb(227,100,6)" rx="2" ry="2" />
<text  x="368.79" y="847.5" >tcp_sendmsg</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (40 samples, 0.01%)</title><rect x="578.2" y="917" width="0.1" height="15.0" fill="rgb(221,192,27)" rx="2" ry="2" />
<text  x="581.23" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (45 samples, 0.01%)</title><rect x="1001.8" y="933" width="0.1" height="15.0" fill="rgb(246,203,30)" rx="2" ry="2" />
<text  x="1004.78" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,654 samples, 0.36%)</title><rect x="263.2" y="837" width="4.3" height="15.0" fill="rgb(236,201,19)" rx="2" ry="2" />
<text  x="266.16" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,921 samples, 1.96%)</title><rect x="538.0" y="677" width="23.1" height="15.0" fill="rgb(205,214,3)" rx="2" ry="2" />
<text  x="540.97" y="687.5" >d..</text>
</g>
<g >
<title>skb_release_head_state (102 samples, 0.02%)</title><rect x="245.4" y="789" width="0.3" height="15.0" fill="rgb(239,105,18)" rx="2" ry="2" />
<text  x="248.44" y="799.5" ></text>
</g>
<g >
<title>__wake_up_common (61 samples, 0.01%)</title><rect x="201.8" y="165" width="0.1" height="15.0" fill="rgb(222,140,14)" rx="2" ry="2" />
<text  x="204.76" y="175.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (86 samples, 0.02%)</title><rect x="307.2" y="693" width="0.2" height="15.0" fill="rgb(229,229,4)" rx="2" ry="2" />
<text  x="310.21" y="703.5" ></text>
</g>
<g >
<title>nf_hook_slow (212 samples, 0.05%)</title><rect x="416.6" y="437" width="0.5" height="15.0" fill="rgb(225,85,26)" rx="2" ry="2" />
<text  x="419.59" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_write (7,672 samples, 1.69%)</title><rect x="650.9" y="853" width="19.9" height="15.0" fill="rgb(219,116,29)" rx="2" ry="2" />
<text  x="653.87" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (557 samples, 0.12%)</title><rect x="985.1" y="997" width="1.5" height="15.0" fill="rgb(252,6,24)" rx="2" ry="2" />
<text  x="988.11" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;spdlog::sinks::sink,  (68 samples, 0.01%)</title><rect x="107.9" y="1301" width="0.1" height="15.0" fill="rgb(232,138,34)" rx="2" ry="2" />
<text  x="110.87" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (326 samples, 0.07%)</title><rect x="893.7" y="1045" width="0.8" height="15.0" fill="rgb(223,144,29)" rx="2" ry="2" />
<text  x="896.67" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (49 samples, 0.01%)</title><rect x="646.8" y="805" width="0.1" height="15.0" fill="rgb(246,10,49)" rx="2" ry="2" />
<text  x="649.77" y="815.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;, int&amp;, webserver::InetAddr&gt; (688 samples, 0.15%)</title><rect x="1168.9" y="1061" width="1.8" height="15.0" fill="rgb(211,60,33)" rx="2" ry="2" />
<text  x="1171.90" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_remove_bucket_begin (47 samples, 0.01%)</title><rect x="349.4" y="837" width="0.1" height="15.0" fill="rgb(215,175,27)" rx="2" ry="2" />
<text  x="352.37" y="847.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (410 samples, 0.09%)</title><rect x="498.6" y="1077" width="1.1" height="15.0" fill="rgb(231,111,23)" rx="2" ry="2" />
<text  x="501.63" y="1087.5" ></text>
</g>
<g >
<title>walk_component (360 samples, 0.08%)</title><rect x="887.1" y="933" width="0.9" height="15.0" fill="rgb(248,61,7)" rx="2" ry="2" />
<text  x="890.10" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (18,799 samples, 4.14%)</title><rect x="691.0" y="997" width="48.9" height="15.0" fill="rgb(220,16,24)" rx="2" ry="2" />
<text  x="694.03" y="1007.5" >spdl..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (528 samples, 0.12%)</title><rect x="872.1" y="1013" width="1.4" height="15.0" fill="rgb(248,160,13)" rx="2" ry="2" />
<text  x="875.10" y="1023.5" ></text>
</g>
<g >
<title>tty_buffer_alloc (45 samples, 0.01%)</title><rect x="1059.0" y="693" width="0.2" height="15.0" fill="rgb(224,15,16)" rx="2" ry="2" />
<text  x="1062.04" y="703.5" ></text>
</g>
<g >
<title>inet_sk_rx_dst_set (75 samples, 0.02%)</title><rect x="417.6" y="485" width="0.2" height="15.0" fill="rgb(254,151,46)" rx="2" ry="2" />
<text  x="420.59" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (338 samples, 0.07%)</title><rect x="910.6" y="1045" width="0.9" height="15.0" fill="rgb(235,6,12)" rx="2" ry="2" />
<text  x="913.60" y="1055.5" ></text>
</g>
<g >
<title>dput (53 samples, 0.01%)</title><rect x="849.7" y="933" width="0.1" height="15.0" fill="rgb(249,15,7)" rx="2" ry="2" />
<text  x="852.66" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (421 samples, 0.09%)</title><rect x="610.3" y="885" width="1.1" height="15.0" fill="rgb(227,143,20)" rx="2" ry="2" />
<text  x="613.29" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt;::_Node_iterator_base (89 samples, 0.02%)</title><rect x="99.7" y="1301" width="0.2" height="15.0" fill="rgb(253,136,34)" rx="2" ry="2" />
<text  x="102.71" y="1311.5" ></text>
</g>
<g >
<title>__dynamic_cast (40 samples, 0.01%)</title><rect x="976.7" y="949" width="0.1" height="15.0" fill="rgb(234,9,26)" rx="2" ry="2" />
<text  x="979.71" y="959.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::operator (39 samples, 0.01%)</title><rect x="631.0" y="1013" width="0.1" height="15.0" fill="rgb(216,217,26)" rx="2" ry="2" />
<text  x="633.99" y="1023.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (96 samples, 0.02%)</title><rect x="786.9" y="997" width="0.2" height="15.0" fill="rgb(215,35,10)" rx="2" ry="2" />
<text  x="789.85" y="1007.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (86 samples, 0.02%)</title><rect x="825.6" y="965" width="0.2" height="15.0" fill="rgb(219,37,34)" rx="2" ry="2" />
<text  x="828.58" y="975.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (382 samples, 0.08%)</title><rect x="889.6" y="981" width="1.0" height="15.0" fill="rgb(217,141,54)" rx="2" ry="2" />
<text  x="892.57" y="991.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (356 samples, 0.08%)</title><rect x="1057.4" y="677" width="0.9" height="15.0" fill="rgb(228,3,18)" rx="2" ry="2" />
<text  x="1060.38" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (75 samples, 0.02%)</title><rect x="297.3" y="645" width="0.2" height="15.0" fill="rgb(230,77,3)" rx="2" ry="2" />
<text  x="300.32" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (308 samples, 0.07%)</title><rect x="606.0" y="885" width="0.8" height="15.0" fill="rgb(229,20,23)" rx="2" ry="2" />
<text  x="609.04" y="895.5" ></text>
</g>
<g >
<title>available_idle_cpu (171 samples, 0.04%)</title><rect x="947.3" y="613" width="0.5" height="15.0" fill="rgb(247,94,21)" rx="2" ry="2" />
<text  x="950.33" y="623.5" ></text>
</g>
<g >
<title>process_backlog (3,163 samples, 0.70%)</title><rect x="1093.2" y="565" width="8.2" height="15.0" fill="rgb(241,52,17)" rx="2" ry="2" />
<text  x="1096.16" y="575.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (49 samples, 0.01%)</title><rect x="1155.6" y="949" width="0.2" height="15.0" fill="rgb(220,157,26)" rx="2" ry="2" />
<text  x="1158.65" y="959.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (127 samples, 0.03%)</title><rect x="557.3" y="565" width="0.4" height="15.0" fill="rgb(247,155,50)" rx="2" ry="2" />
<text  x="560.34" y="575.5" ></text>
</g>
<g >
<title>__check_object_size (311 samples, 0.07%)</title><rect x="249.0" y="757" width="0.8" height="15.0" fill="rgb(246,120,23)" rx="2" ry="2" />
<text  x="252.02" y="767.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (43 samples, 0.01%)</title><rect x="1075.4" y="1013" width="0.1" height="15.0" fill="rgb(254,201,22)" rx="2" ry="2" />
<text  x="1078.42" y="1023.5" ></text>
</g>
<g >
<title>dequeue_task_fair (353 samples, 0.08%)</title><rect x="959.5" y="709" width="1.0" height="15.0" fill="rgb(217,46,31)" rx="2" ry="2" />
<text  x="962.54" y="719.5" ></text>
</g>
<g >
<title>__strlen_avx2 (138 samples, 0.03%)</title><rect x="628.2" y="1013" width="0.3" height="15.0" fill="rgb(206,207,38)" rx="2" ry="2" />
<text  x="631.18" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (797 samples, 0.18%)</title><rect x="769.0" y="1029" width="2.1" height="15.0" fill="rgb(214,121,36)" rx="2" ry="2" />
<text  x="772.05" y="1039.5" ></text>
</g>
<g >
<title>__libc_close (9,857 samples, 2.17%)</title><rect x="1080.1" y="933" width="25.6" height="15.0" fill="rgb(228,118,13)" rx="2" ry="2" />
<text  x="1083.06" y="943.5" >_..</text>
</g>
<g >
<title>__strlen_avx2 (55 samples, 0.01%)</title><rect x="917.6" y="885" width="0.2" height="15.0" fill="rgb(224,37,21)" rx="2" ry="2" />
<text  x="920.65" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (81 samples, 0.02%)</title><rect x="695.2" y="917" width="0.2" height="15.0" fill="rgb(209,170,12)" rx="2" ry="2" />
<text  x="698.23" y="927.5" ></text>
</g>
<g >
<title>operator new (439 samples, 0.10%)</title><rect x="1138.6" y="1061" width="1.1" height="15.0" fill="rgb(218,148,50)" rx="2" ry="2" />
<text  x="1141.57" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (166 samples, 0.04%)</title><rect x="793.0" y="1013" width="0.4" height="15.0" fill="rgb(227,77,22)" rx="2" ry="2" />
<text  x="795.98" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (215 samples, 0.05%)</title><rect x="296.0" y="709" width="0.5" height="15.0" fill="rgb(219,218,4)" rx="2" ry="2" />
<text  x="298.95" y="719.5" ></text>
</g>
<g >
<title>ksys_write (8,048 samples, 1.77%)</title><rect x="538.2" y="661" width="20.9" height="15.0" fill="rgb(207,10,19)" rx="2" ry="2" />
<text  x="541.16" y="671.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (52 samples, 0.01%)</title><rect x="990.5" y="1029" width="0.1" height="15.0" fill="rgb(237,197,12)" rx="2" ry="2" />
<text  x="993.51" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_v (46 samples, 0.01%)</title><rect x="96.8" y="1301" width="0.1" height="15.0" fill="rgb(223,205,4)" rx="2" ry="2" />
<text  x="99.80" y="1311.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (10,844 samples, 2.39%)</title><rect x="186.8" y="485" width="28.1" height="15.0" fill="rgb(212,195,51)" rx="2" ry="2" />
<text  x="189.77" y="495.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (111 samples, 0.02%)</title><rect x="85.4" y="1301" width="0.3" height="15.0" fill="rgb(216,30,25)" rx="2" ry="2" />
<text  x="88.42" y="1311.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::peer_addr[abi:cxx11] (4,046 samples, 0.89%)</title><rect x="352.3" y="885" width="10.5" height="15.0" fill="rgb(218,82,7)" rx="2" ry="2" />
<text  x="355.30" y="895.5" ></text>
</g>
<g >
<title>__sprintf (1,667 samples, 0.37%)</title><rect x="352.9" y="837" width="4.3" height="15.0" fill="rgb(224,39,38)" rx="2" ry="2" />
<text  x="355.85" y="847.5" ></text>
</g>
<g >
<title>__ip_local_out (68 samples, 0.01%)</title><rect x="1085.9" y="613" width="0.2" height="15.0" fill="rgb(210,180,28)" rx="2" ry="2" />
<text  x="1088.91" y="623.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (98 samples, 0.02%)</title><rect x="427.6" y="389" width="0.3" height="15.0" fill="rgb(233,190,54)" rx="2" ry="2" />
<text  x="430.64" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (142 samples, 0.03%)</title><rect x="118.5" y="1301" width="0.4" height="15.0" fill="rgb(236,16,31)" rx="2" ry="2" />
<text  x="121.55" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (361 samples, 0.08%)</title><rect x="648.7" y="917" width="1.0" height="15.0" fill="rgb(250,106,19)" rx="2" ry="2" />
<text  x="651.73" y="927.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (43 samples, 0.01%)</title><rect x="360.5" y="837" width="0.1" height="15.0" fill="rgb(234,146,13)" rx="2" ry="2" />
<text  x="363.48" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (63 samples, 0.01%)</title><rect x="309.5" y="661" width="0.2" height="15.0" fill="rgb(234,207,2)" rx="2" ry="2" />
<text  x="312.53" y="671.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (48 samples, 0.01%)</title><rect x="534.4" y="789" width="0.1" height="15.0" fill="rgb(217,164,9)" rx="2" ry="2" />
<text  x="537.35" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock (44 samples, 0.01%)</title><rect x="1165.8" y="933" width="0.1" height="15.0" fill="rgb(213,36,27)" rx="2" ry="2" />
<text  x="1168.81" y="943.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (57 samples, 0.01%)</title><rect x="697.1" y="741" width="0.1" height="15.0" fill="rgb(241,170,13)" rx="2" ry="2" />
<text  x="700.10" y="751.5" ></text>
</g>
<g >
<title>vfs_write (6,235 samples, 1.37%)</title><rect x="652.4" y="789" width="16.2" height="15.0" fill="rgb(244,68,41)" rx="2" ry="2" />
<text  x="655.36" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,087 samples, 0.24%)</title><rect x="870.7" y="1029" width="2.9" height="15.0" fill="rgb(229,183,22)" rx="2" ry="2" />
<text  x="873.74" y="1039.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1,449 samples, 0.32%)</title><rect x="847.4" y="997" width="3.7" height="15.0" fill="rgb(241,225,17)" rx="2" ry="2" />
<text  x="850.36" y="1007.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (1,699 samples, 0.37%)</title><rect x="963.9" y="885" width="4.4" height="15.0" fill="rgb(224,106,10)" rx="2" ry="2" />
<text  x="966.87" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::emplace&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (1,184 samples, 0.26%)</title><rect x="587.0" y="837" width="3.1" height="15.0" fill="rgb(226,224,16)" rx="2" ry="2" />
<text  x="589.99" y="847.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (367 samples, 0.08%)</title><rect x="481.8" y="965" width="1.0" height="15.0" fill="rgb(220,202,0)" rx="2" ry="2" />
<text  x="484.83" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (70 samples, 0.02%)</title><rect x="929.5" y="837" width="0.2" height="15.0" fill="rgb(209,183,9)" rx="2" ry="2" />
<text  x="932.51" y="847.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (55 samples, 0.01%)</title><rect x="793.8" y="997" width="0.2" height="15.0" fill="rgb(245,22,4)" rx="2" ry="2" />
<text  x="796.84" y="1007.5" ></text>
</g>
<g >
<title>syscall_exit_work (154 samples, 0.03%)</title><rect x="254.5" y="869" width="0.4" height="15.0" fill="rgb(207,131,30)" rx="2" ry="2" />
<text  x="257.45" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (196 samples, 0.04%)</title><rect x="1036.4" y="885" width="0.5" height="15.0" fill="rgb(225,90,27)" rx="2" ry="2" />
<text  x="1039.36" y="895.5" ></text>
</g>
<g >
<title>psi_task_switch (343 samples, 0.08%)</title><rect x="961.3" y="709" width="0.9" height="15.0" fill="rgb(254,48,8)" rx="2" ry="2" />
<text  x="964.26" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (201 samples, 0.04%)</title><rect x="89.4" y="1301" width="0.5" height="15.0" fill="rgb(230,139,45)" rx="2" ry="2" />
<text  x="92.37" y="1311.5" ></text>
</g>
<g >
<title>update_load_avg (77 samples, 0.02%)</title><rect x="1065.6" y="725" width="0.2" height="15.0" fill="rgb(212,190,27)" rx="2" ry="2" />
<text  x="1068.58" y="735.5" ></text>
</g>
<g >
<title>__schedule (1,364 samples, 0.30%)</title><rect x="958.8" y="725" width="3.6" height="15.0" fill="rgb(232,14,32)" rx="2" ry="2" />
<text  x="961.85" y="735.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (128 samples, 0.03%)</title><rect x="62.5" y="1301" width="0.4" height="15.0" fill="rgb(249,123,15)" rx="2" ry="2" />
<text  x="65.53" y="1311.5" ></text>
</g>
<g >
<title>ep_poll_callback (143 samples, 0.03%)</title><rect x="753.2" y="885" width="0.4" height="15.0" fill="rgb(205,183,9)" rx="2" ry="2" />
<text  x="756.19" y="895.5" ></text>
</g>
<g >
<title>_int_malloc (60 samples, 0.01%)</title><rect x="1106.2" y="997" width="0.2" height="15.0" fill="rgb(240,136,7)" rx="2" ry="2" />
<text  x="1109.24" y="1007.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (101 samples, 0.02%)</title><rect x="131.0" y="1301" width="0.3" height="15.0" fill="rgb(207,205,13)" rx="2" ry="2" />
<text  x="134.00" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (43 samples, 0.01%)</title><rect x="1039.7" y="949" width="0.2" height="15.0" fill="rgb(218,176,38)" rx="2" ry="2" />
<text  x="1042.74" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (257 samples, 0.06%)</title><rect x="360.9" y="821" width="0.7" height="15.0" fill="rgb(231,140,39)" rx="2" ry="2" />
<text  x="363.89" y="831.5" ></text>
</g>
<g >
<title>sock_sendmsg (36,319 samples, 8.00%)</title><rect x="365.0" y="853" width="94.4" height="15.0" fill="rgb(228,126,14)" rx="2" ry="2" />
<text  x="368.00" y="863.5" >sock_sendmsg</text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (187 samples, 0.04%)</title><rect x="783.2" y="1029" width="0.5" height="15.0" fill="rgb(252,109,51)" rx="2" ry="2" />
<text  x="786.22" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (68 samples, 0.01%)</title><rect x="766.0" y="1013" width="0.2" height="15.0" fill="rgb(213,100,27)" rx="2" ry="2" />
<text  x="768.99" y="1023.5" ></text>
</g>
<g >
<title>close_fd (67 samples, 0.01%)</title><rect x="1080.4" y="869" width="0.2" height="15.0" fill="rgb(211,115,19)" rx="2" ry="2" />
<text  x="1083.41" y="879.5" ></text>
</g>
<g >
<title>tcp_poll (140 samples, 0.03%)</title><rect x="265.1" y="757" width="0.4" height="15.0" fill="rgb(239,35,53)" rx="2" ry="2" />
<text  x="268.10" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::TcpSocket&gt; &gt;::destroy&lt;webserver::TcpSocket&gt; (19,436 samples, 4.28%)</title><rect x="171.4" y="789" width="50.5" height="15.0" fill="rgb(219,149,13)" rx="2" ry="2" />
<text  x="174.40" y="799.5" >std::..</text>
</g>
<g >
<title>spdlog::source_loc::source_loc (237 samples, 0.05%)</title><rect x="66.0" y="1301" width="0.7" height="15.0" fill="rgb(215,208,26)" rx="2" ry="2" />
<text  x="69.05" y="1311.5" ></text>
</g>
<g >
<title>switch_fpu_return (70 samples, 0.02%)</title><rect x="963.1" y="773" width="0.2" height="15.0" fill="rgb(207,141,45)" rx="2" ry="2" />
<text  x="966.10" y="783.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (62 samples, 0.01%)</title><rect x="873.3" y="981" width="0.2" height="15.0" fill="rgb(248,39,52)" rx="2" ry="2" />
<text  x="876.32" y="991.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (21,289 samples, 4.69%)</title><rect x="1020.4" y="1061" width="55.3" height="15.0" fill="rgb(221,13,32)" rx="2" ry="2" />
<text  x="1023.36" y="1071.5" >spdlo..</text>
</g>
<g >
<title>std::_Destroy&lt;std::function&lt;void  (594 samples, 0.13%)</title><rect x="624.6" y="1077" width="1.6" height="15.0" fill="rgb(215,22,40)" rx="2" ry="2" />
<text  x="627.61" y="1087.5" ></text>
</g>
<g >
<title>__queue_work (3,644 samples, 0.80%)</title><rect x="547.6" y="549" width="9.5" height="15.0" fill="rgb(221,22,34)" rx="2" ry="2" />
<text  x="550.59" y="559.5" ></text>
</g>
<g >
<title>pty_write_room (91 samples, 0.02%)</title><rect x="953.1" y="693" width="0.2" height="15.0" fill="rgb(244,198,28)" rx="2" ry="2" />
<text  x="956.08" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (137 samples, 0.03%)</title><rect x="52.1" y="1301" width="0.4" height="15.0" fill="rgb(229,217,42)" rx="2" ry="2" />
<text  x="55.11" y="1311.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (53 samples, 0.01%)</title><rect x="957.0" y="869" width="0.1" height="15.0" fill="rgb(215,54,11)" rx="2" ry="2" />
<text  x="959.99" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (1,163 samples, 0.26%)</title><rect x="1112.6" y="1061" width="3.0" height="15.0" fill="rgb(213,208,18)" rx="2" ry="2" />
<text  x="1115.61" y="1071.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (322 samples, 0.07%)</title><rect x="1052.4" y="677" width="0.9" height="15.0" fill="rgb(241,1,16)" rx="2" ry="2" />
<text  x="1055.44" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (56 samples, 0.01%)</title><rect x="909.1" y="997" width="0.2" height="15.0" fill="rgb(249,214,11)" rx="2" ry="2" />
<text  x="912.15" y="1007.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (109 samples, 0.02%)</title><rect x="321.8" y="501" width="0.3" height="15.0" fill="rgb(246,132,37)" rx="2" ry="2" />
<text  x="324.82" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (62 samples, 0.01%)</title><rect x="1175.7" y="981" width="0.2" height="15.0" fill="rgb(240,182,11)" rx="2" ry="2" />
<text  x="1178.70" y="991.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (48 samples, 0.01%)</title><rect x="1001.7" y="917" width="0.1" height="15.0" fill="rgb(245,27,26)" rx="2" ry="2" />
<text  x="1004.66" y="927.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (59 samples, 0.01%)</title><rect x="122.2" y="1301" width="0.2" height="15.0" fill="rgb(249,65,48)" rx="2" ry="2" />
<text  x="125.25" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (62 samples, 0.01%)</title><rect x="1024.6" y="917" width="0.1" height="15.0" fill="rgb(226,188,40)" rx="2" ry="2" />
<text  x="1027.58" y="927.5" ></text>
</g>
<g >
<title>reweight_entity (87 samples, 0.02%)</title><rect x="432.1" y="357" width="0.2" height="15.0" fill="rgb(210,179,10)" rx="2" ry="2" />
<text  x="435.12" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (58 samples, 0.01%)</title><rect x="793.2" y="981" width="0.2" height="15.0" fill="rgb(234,115,43)" rx="2" ry="2" />
<text  x="796.24" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::_M_ptr (45 samples, 0.01%)</title><rect x="686.2" y="917" width="0.1" height="15.0" fill="rgb(245,107,47)" rx="2" ry="2" />
<text  x="689.20" y="927.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (24,567 samples, 5.41%)</title><rect x="514.3" y="917" width="63.8" height="15.0" fill="rgb(207,168,41)" rx="2" ry="2" />
<text  x="517.29" y="927.5" >spdlog:..</text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (100 samples, 0.02%)</title><rect x="546.0" y="549" width="0.3" height="15.0" fill="rgb(231,108,29)" rx="2" ry="2" />
<text  x="549.00" y="559.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (2,401 samples, 0.53%)</title><rect x="679.8" y="917" width="6.3" height="15.0" fill="rgb(243,74,45)" rx="2" ry="2" />
<text  x="682.82" y="927.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt; (359 samples, 0.08%)</title><rect x="985.4" y="949" width="0.9" height="15.0" fill="rgb(250,126,49)" rx="2" ry="2" />
<text  x="988.36" y="959.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (75 samples, 0.02%)</title><rect x="785.2" y="933" width="0.2" height="15.0" fill="rgb(234,23,29)" rx="2" ry="2" />
<text  x="788.24" y="943.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::recv (161 samples, 0.04%)</title><rect x="156.7" y="1301" width="0.4" height="15.0" fill="rgb(247,78,14)" rx="2" ry="2" />
<text  x="159.73" y="1311.5" ></text>
</g>
<g >
<title>tcp_time_wait (92 samples, 0.02%)</title><rect x="1087.3" y="661" width="0.3" height="15.0" fill="rgb(224,41,39)" rx="2" ry="2" />
<text  x="1090.34" y="671.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (486 samples, 0.11%)</title><rect x="295.3" y="789" width="1.3" height="15.0" fill="rgb(233,75,18)" rx="2" ry="2" />
<text  x="298.29" y="799.5" ></text>
</g>
<g >
<title>enqueue_entity (888 samples, 0.20%)</title><rect x="429.8" y="357" width="2.3" height="15.0" fill="rgb(208,179,5)" rx="2" ry="2" />
<text  x="432.81" y="367.5" ></text>
</g>
<g >
<title>process_backlog (19,209 samples, 4.23%)</title><rect x="394.6" y="629" width="49.9" height="15.0" fill="rgb(214,140,22)" rx="2" ry="2" />
<text  x="397.63" y="639.5" >proce..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_node_allocator (52 samples, 0.01%)</title><rect x="97.2" y="1301" width="0.2" height="15.0" fill="rgb(207,13,17)" rx="2" ry="2" />
<text  x="100.25" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (59 samples, 0.01%)</title><rect x="915.3" y="965" width="0.1" height="15.0" fill="rgb(231,176,44)" rx="2" ry="2" />
<text  x="918.26" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_work (167 samples, 0.04%)</title><rect x="560.6" y="645" width="0.4" height="15.0" fill="rgb(229,116,17)" rx="2" ry="2" />
<text  x="563.58" y="655.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (66 samples, 0.01%)</title><rect x="658.9" y="677" width="0.1" height="15.0" fill="rgb(224,146,8)" rx="2" ry="2" />
<text  x="661.86" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (143 samples, 0.03%)</title><rect x="1039.2" y="901" width="0.4" height="15.0" fill="rgb(248,43,15)" rx="2" ry="2" />
<text  x="1042.23" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (384 samples, 0.08%)</title><rect x="518.3" y="805" width="1.0" height="15.0" fill="rgb(223,113,14)" rx="2" ry="2" />
<text  x="521.26" y="815.5" ></text>
</g>
<g >
<title>lock_sock_nested (328 samples, 0.07%)</title><rect x="1152.1" y="949" width="0.8" height="15.0" fill="rgb(239,96,42)" rx="2" ry="2" />
<text  x="1155.09" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (229 samples, 0.05%)</title><rect x="295.9" y="741" width="0.6" height="15.0" fill="rgb(224,81,13)" rx="2" ry="2" />
<text  x="298.94" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_work (127 samples, 0.03%)</title><rect x="956.0" y="757" width="0.4" height="15.0" fill="rgb(252,66,12)" rx="2" ry="2" />
<text  x="959.04" y="767.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (18,946 samples, 4.17%)</title><rect x="919.4" y="933" width="49.2" height="15.0" fill="rgb(234,131,44)" rx="2" ry="2" />
<text  x="922.36" y="943.5" >spdl..</text>
</g>
<g >
<title>file_ra_state_init (110 samples, 0.02%)</title><rect x="884.2" y="933" width="0.2" height="15.0" fill="rgb(253,21,3)" rx="2" ry="2" />
<text  x="887.15" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (149 samples, 0.03%)</title><rect x="1062.4" y="853" width="0.4" height="15.0" fill="rgb(245,100,43)" rx="2" ry="2" />
<text  x="1065.45" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (62 samples, 0.01%)</title><rect x="1178.2" y="997" width="0.1" height="15.0" fill="rgb(234,66,47)" rx="2" ry="2" />
<text  x="1181.16" y="1007.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (82 samples, 0.02%)</title><rect x="448.0" y="757" width="0.2" height="15.0" fill="rgb(222,166,49)" rx="2" ry="2" />
<text  x="451.02" y="767.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (42 samples, 0.01%)</title><rect x="972.8" y="981" width="0.1" height="15.0" fill="rgb(243,214,29)" rx="2" ry="2" />
<text  x="975.81" y="991.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (42 samples, 0.01%)</title><rect x="731.5" y="741" width="0.1" height="15.0" fill="rgb(244,13,33)" rx="2" ry="2" />
<text  x="734.52" y="751.5" ></text>
</g>
<g >
<title>__d_instantiate (92 samples, 0.02%)</title><rect x="1165.6" y="933" width="0.2" height="15.0" fill="rgb(205,92,28)" rx="2" ry="2" />
<text  x="1168.57" y="943.5" ></text>
</g>
<g >
<title>preempt_schedule (210 samples, 0.05%)</title><rect x="711.4" y="661" width="0.5" height="15.0" fill="rgb(236,205,31)" rx="2" ry="2" />
<text  x="714.39" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4,738 samples, 1.04%)</title><rect x="895.0" y="1029" width="12.4" height="15.0" fill="rgb(206,173,29)" rx="2" ry="2" />
<text  x="898.04" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,729 samples, 1.92%)</title><rect x="1145.7" y="1061" width="22.7" height="15.0" fill="rgb(232,35,13)" rx="2" ry="2" />
<text  x="1148.74" y="1071.5" >e..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (203 samples, 0.04%)</title><rect x="740.3" y="1077" width="0.5" height="15.0" fill="rgb(249,21,5)" rx="2" ry="2" />
<text  x="743.31" y="1087.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (381 samples, 0.08%)</title><rect x="916.7" y="901" width="0.9" height="15.0" fill="rgb(236,128,41)" rx="2" ry="2" />
<text  x="919.65" y="911.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (81 samples, 0.02%)</title><rect x="576.9" y="741" width="0.2" height="15.0" fill="rgb(217,181,16)" rx="2" ry="2" />
<text  x="579.94" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::get_allocator (85 samples, 0.02%)</title><rect x="223.7" y="1077" width="0.2" height="15.0" fill="rgb(250,121,37)" rx="2" ry="2" />
<text  x="226.71" y="1087.5" ></text>
</g>
<g >
<title>tcp_write_xmit (12,197 samples, 2.69%)</title><rect x="185.5" y="517" width="31.7" height="15.0" fill="rgb(210,79,54)" rx="2" ry="2" />
<text  x="188.49" y="527.5" >tc..</text>
</g>
<g >
<title>__mod_memcg_state.part.0 (62 samples, 0.01%)</title><rect x="185.1" y="501" width="0.2" height="15.0" fill="rgb(210,176,49)" rx="2" ry="2" />
<text  x="188.09" y="511.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (5,524 samples, 1.22%)</title><rect x="196.8" y="277" width="14.4" height="15.0" fill="rgb(226,160,7)" rx="2" ry="2" />
<text  x="199.84" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (49 samples, 0.01%)</title><rect x="276.0" y="725" width="0.1" height="15.0" fill="rgb(232,188,18)" rx="2" ry="2" />
<text  x="278.98" y="735.5" ></text>
</g>
<g >
<title>psi_group_change (189 samples, 0.04%)</title><rect x="330.4" y="453" width="0.5" height="15.0" fill="rgb(213,14,21)" rx="2" ry="2" />
<text  x="333.45" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,467 samples, 0.32%)</title><rect x="964.3" y="853" width="3.8" height="15.0" fill="rgb(212,70,14)" rx="2" ry="2" />
<text  x="967.28" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (124 samples, 0.03%)</title><rect x="525.9" y="757" width="0.3" height="15.0" fill="rgb(213,31,12)" rx="2" ry="2" />
<text  x="528.90" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (162 samples, 0.04%)</title><rect x="618.6" y="869" width="0.4" height="15.0" fill="rgb(250,95,26)" rx="2" ry="2" />
<text  x="621.61" y="879.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (73 samples, 0.02%)</title><rect x="532.7" y="709" width="0.2" height="15.0" fill="rgb(205,29,20)" rx="2" ry="2" />
<text  x="535.71" y="719.5" ></text>
</g>
<g >
<title>__check_object_size (130 samples, 0.03%)</title><rect x="706.3" y="741" width="0.3" height="15.0" fill="rgb(237,124,24)" rx="2" ry="2" />
<text  x="709.31" y="751.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (146 samples, 0.03%)</title><rect x="696.9" y="757" width="0.4" height="15.0" fill="rgb(236,168,15)" rx="2" ry="2" />
<text  x="699.88" y="767.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::~TcpSocket (19,380 samples, 4.27%)</title><rect x="171.5" y="757" width="50.4" height="15.0" fill="rgb(230,147,44)" rx="2" ry="2" />
<text  x="174.52" y="767.5" >webse..</text>
</g>
<g >
<title>available_idle_cpu (176 samples, 0.04%)</title><rect x="721.5" y="645" width="0.5" height="15.0" fill="rgb(223,184,38)" rx="2" ry="2" />
<text  x="724.55" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_base (109 samples, 0.02%)</title><rect x="224.1" y="1061" width="0.2" height="15.0" fill="rgb(224,6,6)" rx="2" ry="2" />
<text  x="227.06" y="1071.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (21,995 samples, 4.84%)</title><rect x="520.7" y="837" width="57.2" height="15.0" fill="rgb(252,80,20)" rx="2" ry="2" />
<text  x="523.70" y="847.5" >spdlog..</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (148 samples, 0.03%)</title><rect x="1002.9" y="981" width="0.4" height="15.0" fill="rgb(219,75,34)" rx="2" ry="2" />
<text  x="1005.90" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::_M_node_allocator (77 samples, 0.02%)</title><rect x="97.4" y="1301" width="0.2" height="15.0" fill="rgb(209,134,51)" rx="2" ry="2" />
<text  x="100.40" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (90,789 samples, 19.99%)</title><rect x="227.5" y="1077" width="235.9" height="15.0" fill="rgb(240,224,36)" rx="2" ry="2" />
<text  x="230.53" y="1087.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>__strcpy_avx2 (88 samples, 0.02%)</title><rect x="1174.9" y="1045" width="0.2" height="15.0" fill="rgb(221,190,13)" rx="2" ry="2" />
<text  x="1177.86" y="1055.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (72 samples, 0.02%)</title><rect x="450.7" y="757" width="0.2" height="15.0" fill="rgb(242,103,1)" rx="2" ry="2" />
<text  x="453.73" y="767.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1237" width="860.0" height="15.0" fill="rgb(232,25,20)" rx="2" ry="2" />
<text  x="161.66" y="1247.5" >std::__invoke_r&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (105 samples, 0.02%)</title><rect x="360.0" y="837" width="0.3" height="15.0" fill="rgb(211,190,22)" rx="2" ry="2" />
<text  x="362.99" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;spdlog::logger,  (162 samples, 0.04%)</title><rect x="105.9" y="1301" width="0.4" height="15.0" fill="rgb(211,65,19)" rx="2" ry="2" />
<text  x="108.88" y="1311.5" ></text>
</g>
<g >
<title>__check_object_size (197 samples, 0.04%)</title><rect x="938.0" y="709" width="0.5" height="15.0" fill="rgb(224,23,4)" rx="2" ry="2" />
<text  x="941.03" y="719.5" ></text>
</g>
<g >
<title>__fget_files (117 samples, 0.03%)</title><rect x="936.0" y="725" width="0.3" height="15.0" fill="rgb(231,77,46)" rx="2" ry="2" />
<text  x="939.01" y="735.5" ></text>
</g>
<g >
<title>preempt_schedule (1,030 samples, 0.23%)</title><rect x="1131.8" y="933" width="2.7" height="15.0" fill="rgb(222,17,49)" rx="2" ry="2" />
<text  x="1134.84" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (102 samples, 0.02%)</title><rect x="10.3" y="1285" width="0.2" height="15.0" fill="rgb(224,193,10)" rx="2" ry="2" />
<text  x="13.26" y="1295.5" ></text>
</g>
<g >
<title>__GI___libc_free (67 samples, 0.01%)</title><rect x="272.0" y="709" width="0.2" height="15.0" fill="rgb(211,112,33)" rx="2" ry="2" />
<text  x="274.98" y="719.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (80 samples, 0.02%)</title><rect x="828.2" y="933" width="0.2" height="15.0" fill="rgb(207,106,48)" rx="2" ry="2" />
<text  x="831.24" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (44 samples, 0.01%)</title><rect x="922.6" y="885" width="0.1" height="15.0" fill="rgb(249,78,49)" rx="2" ry="2" />
<text  x="925.59" y="895.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;webserver::Channel&gt;::~weak_ptr (46 samples, 0.01%)</title><rect x="168.7" y="853" width="0.1" height="15.0" fill="rgb(233,110,23)" rx="2" ry="2" />
<text  x="171.72" y="863.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (597 samples, 0.13%)</title><rect x="1033.4" y="869" width="1.5" height="15.0" fill="rgb(233,37,28)" rx="2" ry="2" />
<text  x="1036.37" y="879.5" ></text>
</g>
<g >
<title>vfs_write (6,451 samples, 1.42%)</title><rect x="1118.1" y="997" width="16.8" height="15.0" fill="rgb(207,5,34)" rx="2" ry="2" />
<text  x="1121.09" y="1007.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (209 samples, 0.05%)</title><rect x="1129.6" y="869" width="0.5" height="15.0" fill="rgb(232,180,12)" rx="2" ry="2" />
<text  x="1132.55" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (109 samples, 0.02%)</title><rect x="700.1" y="933" width="0.3" height="15.0" fill="rgb(207,12,54)" rx="2" ry="2" />
<text  x="703.08" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (83 samples, 0.02%)</title><rect x="694.8" y="853" width="0.2" height="15.0" fill="rgb(211,34,3)" rx="2" ry="2" />
<text  x="697.81" y="863.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (63 samples, 0.01%)</title><rect x="117.2" y="1301" width="0.2" height="15.0" fill="rgb(209,167,43)" rx="2" ry="2" />
<text  x="120.23" y="1311.5" ></text>
</g>
<g >
<title>perf_output_copy (317 samples, 0.07%)</title><rect x="812.3" y="885" width="0.8" height="15.0" fill="rgb(237,85,45)" rx="2" ry="2" />
<text  x="815.29" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (93 samples, 0.02%)</title><rect x="358.9" y="837" width="0.3" height="15.0" fill="rgb(220,134,9)" rx="2" ry="2" />
<text  x="361.91" y="847.5" ></text>
</g>
<g >
<title>[[ip_tables]] (51 samples, 0.01%)</title><rect x="1100.6" y="485" width="0.2" height="15.0" fill="rgb(224,41,44)" rx="2" ry="2" />
<text  x="1103.65" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (867 samples, 0.19%)</title><rect x="629.4" y="1077" width="2.2" height="15.0" fill="rgb(252,182,28)" rx="2" ry="2" />
<text  x="632.37" y="1087.5" ></text>
</g>
<g >
<title>validate_xmit_skb (46 samples, 0.01%)</title><rect x="1092.4" y="629" width="0.1" height="15.0" fill="rgb(239,167,0)" rx="2" ry="2" />
<text  x="1095.43" y="639.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (105 samples, 0.02%)</title><rect x="670.0" y="773" width="0.3" height="15.0" fill="rgb(245,22,46)" rx="2" ry="2" />
<text  x="672.99" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (47 samples, 0.01%)</title><rect x="275.8" y="789" width="0.1" height="15.0" fill="rgb(221,205,36)" rx="2" ry="2" />
<text  x="278.82" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::value&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::value (41 samples, 0.01%)</title><rect x="297.8" y="773" width="0.1" height="15.0" fill="rgb(226,78,53)" rx="2" ry="2" />
<text  x="300.79" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (162 samples, 0.04%)</title><rect x="291.8" y="869" width="0.5" height="15.0" fill="rgb(239,66,39)" rx="2" ry="2" />
<text  x="294.85" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (167 samples, 0.04%)</title><rect x="291.8" y="885" width="0.5" height="15.0" fill="rgb(233,144,22)" rx="2" ry="2" />
<text  x="294.84" y="895.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2,366 samples, 0.52%)</title><rect x="957.6" y="869" width="6.1" height="15.0" fill="rgb(229,45,5)" rx="2" ry="2" />
<text  x="960.55" y="879.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (183 samples, 0.04%)</title><rect x="786.1" y="1061" width="0.4" height="15.0" fill="rgb(235,103,27)" rx="2" ry="2" />
<text  x="789.06" y="1071.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,028 samples, 0.67%)</title><rect x="324.9" y="501" width="7.9" height="15.0" fill="rgb(244,135,39)" rx="2" ry="2" />
<text  x="327.92" y="511.5" ></text>
</g>
<g >
<title>lock_page_memcg (78 samples, 0.02%)</title><rect x="843.7" y="901" width="0.2" height="15.0" fill="rgb(223,100,29)" rx="2" ry="2" />
<text  x="846.70" y="911.5" ></text>
</g>
<g >
<title>dequeue_task_fair (899 samples, 0.20%)</title><rect x="483.0" y="965" width="2.3" height="15.0" fill="rgb(215,32,51)" rx="2" ry="2" />
<text  x="485.95" y="975.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (92 samples, 0.02%)</title><rect x="339.4" y="565" width="0.2" height="15.0" fill="rgb(211,88,4)" rx="2" ry="2" />
<text  x="342.38" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (228 samples, 0.05%)</title><rect x="617.1" y="853" width="0.6" height="15.0" fill="rgb(225,191,18)" rx="2" ry="2" />
<text  x="620.15" y="863.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (103 samples, 0.02%)</title><rect x="675.3" y="725" width="0.2" height="15.0" fill="rgb(221,124,46)" rx="2" ry="2" />
<text  x="678.26" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51 samples, 0.01%)</title><rect x="489.3" y="949" width="0.2" height="15.0" fill="rgb(213,19,42)" rx="2" ry="2" />
<text  x="492.32" y="959.5" ></text>
</g>
<g >
<title>sock_rfree (65 samples, 0.01%)</title><rect x="245.5" y="773" width="0.2" height="15.0" fill="rgb(231,216,1)" rx="2" ry="2" />
<text  x="248.53" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (149 samples, 0.03%)</title><rect x="524.1" y="789" width="0.4" height="15.0" fill="rgb(254,152,48)" rx="2" ry="2" />
<text  x="527.13" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (407 samples, 0.09%)</title><rect x="971.6" y="997" width="1.0" height="15.0" fill="rgb(218,37,27)" rx="2" ry="2" />
<text  x="974.57" y="1007.5" ></text>
</g>
<g >
<title>syscall_exit_work (120 samples, 0.03%)</title><rect x="729.5" y="789" width="0.3" height="15.0" fill="rgb(214,0,30)" rx="2" ry="2" />
<text  x="732.49" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (116 samples, 0.03%)</title><rect x="518.9" y="709" width="0.3" height="15.0" fill="rgb(241,162,53)" rx="2" ry="2" />
<text  x="521.92" y="719.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (49 samples, 0.01%)</title><rect x="43.5" y="1301" width="0.2" height="15.0" fill="rgb(226,79,41)" rx="2" ry="2" />
<text  x="46.53" y="1311.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;char [24]&gt; (379 samples, 0.08%)</title><rect x="627.9" y="1093" width="1.0" height="15.0" fill="rgb(233,56,30)" rx="2" ry="2" />
<text  x="630.92" y="1103.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,908 samples, 2.18%)</title><rect x="795.5" y="1045" width="25.7" height="15.0" fill="rgb(241,138,51)" rx="2" ry="2" />
<text  x="798.45" y="1055.5" >e..</text>
</g>
<g >
<title>webserver::Channel::get_fd (51 samples, 0.01%)</title><rect x="631.4" y="1029" width="0.1" height="15.0" fill="rgb(234,47,7)" rx="2" ry="2" />
<text  x="634.42" y="1039.5" ></text>
</g>
<g >
<title>_find_next_bit (45 samples, 0.01%)</title><rect x="831.5" y="901" width="0.2" height="15.0" fill="rgb(222,89,23)" rx="2" ry="2" />
<text  x="834.55" y="911.5" ></text>
</g>
<g >
<title>enqueue_entity (134 samples, 0.03%)</title><rect x="345.6" y="549" width="0.3" height="15.0" fill="rgb(236,17,52)" rx="2" ry="2" />
<text  x="348.58" y="559.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (79 samples, 0.02%)</title><rect x="515.5" y="853" width="0.2" height="15.0" fill="rgb(210,168,35)" rx="2" ry="2" />
<text  x="518.46" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::detail::make_arg&lt;true, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;,  (67 samples, 0.01%)</title><rect x="297.7" y="789" width="0.2" height="15.0" fill="rgb(214,142,34)" rx="2" ry="2" />
<text  x="300.73" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (48 samples, 0.01%)</title><rect x="1139.8" y="1045" width="0.1" height="15.0" fill="rgb(227,161,20)" rx="2" ry="2" />
<text  x="1142.76" y="1055.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,017 samples, 2.65%)</title><rect x="467.2" y="1061" width="31.3" height="15.0" fill="rgb(240,33,1)" rx="2" ry="2" />
<text  x="470.25" y="1071.5" >do..</text>
</g>
<g >
<title>webserver::Epoll::poll (40 samples, 0.01%)</title><rect x="140.4" y="1301" width="0.1" height="15.0" fill="rgb(208,106,31)" rx="2" ry="2" />
<text  x="143.41" y="1311.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (291 samples, 0.06%)</title><rect x="838.0" y="869" width="0.8" height="15.0" fill="rgb(229,227,19)" rx="2" ry="2" />
<text  x="841.01" y="879.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (197 samples, 0.04%)</title><rect x="282.4" y="837" width="0.5" height="15.0" fill="rgb(252,148,33)" rx="2" ry="2" />
<text  x="285.41" y="847.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (61 samples, 0.01%)</title><rect x="743.5" y="981" width="0.2" height="15.0" fill="rgb(239,77,16)" rx="2" ry="2" />
<text  x="746.50" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (96 samples, 0.02%)</title><rect x="625.8" y="821" width="0.3" height="15.0" fill="rgb(254,49,41)" rx="2" ry="2" />
<text  x="628.84" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (239 samples, 0.05%)</title><rect x="357.9" y="837" width="0.6" height="15.0" fill="rgb(210,143,11)" rx="2" ry="2" />
<text  x="360.89" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (199 samples, 0.04%)</title><rect x="119.9" y="1301" width="0.6" height="15.0" fill="rgb(249,77,17)" rx="2" ry="2" />
<text  x="122.94" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (73 samples, 0.02%)</title><rect x="519.0" y="645" width="0.2" height="15.0" fill="rgb(248,115,35)" rx="2" ry="2" />
<text  x="522.02" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (90 samples, 0.02%)</title><rect x="513.2" y="965" width="0.2" height="15.0" fill="rgb(218,162,49)" rx="2" ry="2" />
<text  x="516.16" y="975.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (72 samples, 0.02%)</title><rect x="211.5" y="277" width="0.2" height="15.0" fill="rgb(245,188,2)" rx="2" ry="2" />
<text  x="214.52" y="287.5" ></text>
</g>
<g >
<title>__libc_send (171 samples, 0.04%)</title><rect x="260.9" y="901" width="0.5" height="15.0" fill="rgb(214,187,23)" rx="2" ry="2" />
<text  x="263.94" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (68 samples, 0.01%)</title><rect x="11.0" y="1285" width="0.2" height="15.0" fill="rgb(231,208,49)" rx="2" ry="2" />
<text  x="13.97" y="1295.5" ></text>
</g>
<g >
<title>htons (41 samples, 0.01%)</title><rect x="616.7" y="901" width="0.1" height="15.0" fill="rgb(236,99,54)" rx="2" ry="2" />
<text  x="619.74" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (41 samples, 0.01%)</title><rect x="93.5" y="1301" width="0.1" height="15.0" fill="rgb(220,13,44)" rx="2" ry="2" />
<text  x="96.53" y="1311.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (190 samples, 0.04%)</title><rect x="768.4" y="1029" width="0.5" height="15.0" fill="rgb(216,223,54)" rx="2" ry="2" />
<text  x="771.40" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,938 samples, 0.43%)</title><rect x="230.2" y="933" width="5.1" height="15.0" fill="rgb(251,74,7)" rx="2" ry="2" />
<text  x="233.23" y="943.5" ></text>
</g>
<g >
<title>__sk_dst_check (68 samples, 0.01%)</title><rect x="410.1" y="453" width="0.2" height="15.0" fill="rgb(238,32,21)" rx="2" ry="2" />
<text  x="413.14" y="463.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, fmt::v8::detail::vformat_to&lt;char&gt; (394 samples, 0.09%)</title><rect x="518.2" y="821" width="1.1" height="15.0" fill="rgb(211,4,41)" rx="2" ry="2" />
<text  x="521.24" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (80 samples, 0.02%)</title><rect x="309.5" y="709" width="0.2" height="15.0" fill="rgb(230,88,51)" rx="2" ry="2" />
<text  x="312.48" y="719.5" ></text>
</g>
<g >
<title>pty_write (352 samples, 0.08%)</title><rect x="321.7" y="533" width="0.9" height="15.0" fill="rgb(216,2,44)" rx="2" ry="2" />
<text  x="324.68" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (81 samples, 0.02%)</title><rect x="535.5" y="709" width="0.2" height="15.0" fill="rgb(205,112,28)" rx="2" ry="2" />
<text  x="538.45" y="719.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (51 samples, 0.01%)</title><rect x="1026.9" y="949" width="0.1" height="15.0" fill="rgb(249,183,17)" rx="2" ry="2" />
<text  x="1029.88" y="959.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (52 samples, 0.01%)</title><rect x="934.5" y="869" width="0.1" height="15.0" fill="rgb(224,198,37)" rx="2" ry="2" />
<text  x="937.49" y="879.5" ></text>
</g>
<g >
<title>security_file_alloc (52 samples, 0.01%)</title><rect x="880.8" y="917" width="0.1" height="15.0" fill="rgb(238,175,23)" rx="2" ry="2" />
<text  x="883.81" y="927.5" ></text>
</g>
<g >
<title>netif_rx_internal (82 samples, 0.02%)</title><rect x="1092.0" y="581" width="0.2" height="15.0" fill="rgb(226,221,40)" rx="2" ry="2" />
<text  x="1095.03" y="591.5" ></text>
</g>
<g >
<title>remove_wait_queue (59 samples, 0.01%)</title><rect x="289.6" y="789" width="0.1" height="15.0" fill="rgb(223,94,28)" rx="2" ry="2" />
<text  x="292.59" y="799.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (90 samples, 0.02%)</title><rect x="1079.7" y="965" width="0.2" height="15.0" fill="rgb(211,42,16)" rx="2" ry="2" />
<text  x="1082.66" y="975.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::HttpHandler (2,684 samples, 0.59%)</title><rect x="1138.1" y="1093" width="7.0" height="15.0" fill="rgb(216,77,7)" rx="2" ry="2" />
<text  x="1141.09" y="1103.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::~unique_ptr (654 samples, 0.14%)</title><rect x="1108.7" y="997" width="1.7" height="15.0" fill="rgb(239,8,16)" rx="2" ry="2" />
<text  x="1111.75" y="1007.5" ></text>
</g>
<g >
<title>__skb_clone (133 samples, 0.03%)</title><rect x="446.7" y="757" width="0.4" height="15.0" fill="rgb(236,185,30)" rx="2" ry="2" />
<text  x="449.73" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (72 samples, 0.02%)</title><rect x="135.1" y="1301" width="0.2" height="15.0" fill="rgb(234,61,37)" rx="2" ry="2" />
<text  x="138.14" y="1311.5" ></text>
</g>
<g >
<title>__schedule (635 samples, 0.14%)</title><rect x="731.4" y="757" width="1.6" height="15.0" fill="rgb(249,192,14)" rx="2" ry="2" />
<text  x="734.35" y="767.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (48 samples, 0.01%)</title><rect x="1168.3" y="1029" width="0.1" height="15.0" fill="rgb(248,171,15)" rx="2" ry="2" />
<text  x="1171.30" y="1039.5" ></text>
</g>
<g >
<title>[[nf_defrag_ipv4]] (48 samples, 0.01%)</title><rect x="413.7" y="405" width="0.1" height="15.0" fill="rgb(251,66,37)" rx="2" ry="2" />
<text  x="416.69" y="415.5" ></text>
</g>
<g >
<title>__mod_timer (141 samples, 0.03%)</title><rect x="216.3" y="469" width="0.4" height="15.0" fill="rgb(249,5,54)" rx="2" ry="2" />
<text  x="219.32" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (41 samples, 0.01%)</title><rect x="909.0" y="981" width="0.1" height="15.0" fill="rgb(250,126,36)" rx="2" ry="2" />
<text  x="912.01" y="991.5" ></text>
</g>
<g >
<title>sk_reset_timer (68 samples, 0.01%)</title><rect x="451.5" y="757" width="0.2" height="15.0" fill="rgb(227,210,40)" rx="2" ry="2" />
<text  x="454.50" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt; (41 samples, 0.01%)</title><rect x="42.6" y="1301" width="0.1" height="15.0" fill="rgb(214,130,48)" rx="2" ry="2" />
<text  x="45.62" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate (688 samples, 0.15%)</title><rect x="986.6" y="981" width="1.8" height="15.0" fill="rgb(223,53,26)" rx="2" ry="2" />
<text  x="989.57" y="991.5" ></text>
</g>
<g >
<title>_copy_from_user (41 samples, 0.01%)</title><rect x="278.3" y="789" width="0.1" height="15.0" fill="rgb(254,72,29)" rx="2" ry="2" />
<text  x="281.28" y="799.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (338 samples, 0.07%)</title><rect x="1078.1" y="1045" width="0.9" height="15.0" fill="rgb(206,126,26)" rx="2" ry="2" />
<text  x="1081.08" y="1055.5" ></text>
</g>
<g >
<title>operator delete (54 samples, 0.01%)</title><rect x="1078.5" y="1013" width="0.1" height="15.0" fill="rgb(209,44,42)" rx="2" ry="2" />
<text  x="1081.48" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_free (97 samples, 0.02%)</title><rect x="34.8" y="1301" width="0.3" height="15.0" fill="rgb(239,138,0)" rx="2" ry="2" />
<text  x="37.85" y="1311.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (140 samples, 0.03%)</title><rect x="209.2" y="85" width="0.4" height="15.0" fill="rgb(218,186,16)" rx="2" ry="2" />
<text  x="212.25" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_write (40 samples, 0.01%)</title><rect x="935.6" y="773" width="0.1" height="15.0" fill="rgb(225,120,12)" rx="2" ry="2" />
<text  x="938.59" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (233 samples, 0.05%)</title><rect x="528.3" y="629" width="0.6" height="15.0" fill="rgb(215,108,44)" rx="2" ry="2" />
<text  x="531.30" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (44 samples, 0.01%)</title><rect x="1048.7" y="725" width="0.1" height="15.0" fill="rgb(233,120,42)" rx="2" ry="2" />
<text  x="1051.66" y="735.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (276 samples, 0.06%)</title><rect x="307.5" y="661" width="0.7" height="15.0" fill="rgb(247,48,12)" rx="2" ry="2" />
<text  x="310.49" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver (5,889 samples, 1.30%)</title><rect x="196.5" y="309" width="15.3" height="15.0" fill="rgb(212,105,53)" rx="2" ry="2" />
<text  x="199.55" y="319.5" ></text>
</g>
<g >
<title>__fget_light (179 samples, 0.04%)</title><rect x="1043.3" y="789" width="0.5" height="15.0" fill="rgb(216,20,19)" rx="2" ry="2" />
<text  x="1046.32" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::operator (101 samples, 0.02%)</title><rect x="281.6" y="917" width="0.2" height="15.0" fill="rgb(220,101,49)" rx="2" ry="2" />
<text  x="284.57" y="927.5" ></text>
</g>
<g >
<title>find_vma (231 samples, 0.05%)</title><rect x="897.5" y="885" width="0.6" height="15.0" fill="rgb(234,120,20)" rx="2" ry="2" />
<text  x="900.51" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (264 samples, 0.06%)</title><rect x="927.6" y="805" width="0.7" height="15.0" fill="rgb(207,215,37)" rx="2" ry="2" />
<text  x="930.57" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,097 samples, 2.66%)</title><rect x="467.0" y="1077" width="31.5" height="15.0" fill="rgb(209,135,48)" rx="2" ry="2" />
<text  x="470.04" y="1087.5" >en..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (295 samples, 0.06%)</title><rect x="993.7" y="933" width="0.8" height="15.0" fill="rgb(235,184,31)" rx="2" ry="2" />
<text  x="996.73" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (83 samples, 0.02%)</title><rect x="743.7" y="1013" width="0.2" height="15.0" fill="rgb(217,213,15)" rx="2" ry="2" />
<text  x="746.68" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (68 samples, 0.01%)</title><rect x="578.2" y="933" width="0.1" height="15.0" fill="rgb(242,5,30)" rx="2" ry="2" />
<text  x="581.16" y="943.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (1,039 samples, 0.23%)</title><rect x="1131.8" y="949" width="2.7" height="15.0" fill="rgb(221,156,16)" rx="2" ry="2" />
<text  x="1134.82" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,604 samples, 0.35%)</title><rect x="958.4" y="805" width="4.2" height="15.0" fill="rgb(236,88,3)" rx="2" ry="2" />
<text  x="961.40" y="815.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (3,195 samples, 0.70%)</title><rect x="562.0" y="805" width="8.3" height="15.0" fill="rgb(222,79,28)" rx="2" ry="2" />
<text  x="565.04" y="815.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (154 samples, 0.03%)</title><rect x="1026.7" y="997" width="0.4" height="15.0" fill="rgb(235,180,38)" rx="2" ry="2" />
<text  x="1029.66" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (62 samples, 0.01%)</title><rect x="1048.5" y="741" width="0.1" height="15.0" fill="rgb(216,99,10)" rx="2" ry="2" />
<text  x="1051.47" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::get (97 samples, 0.02%)</title><rect x="281.6" y="901" width="0.2" height="15.0" fill="rgb(246,197,51)" rx="2" ry="2" />
<text  x="284.58" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_free (859 samples, 0.19%)</title><rect x="287.2" y="789" width="2.3" height="15.0" fill="rgb(225,100,49)" rx="2" ry="2" />
<text  x="290.22" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (350 samples, 0.08%)</title><rect x="580.7" y="885" width="0.9" height="15.0" fill="rgb(236,197,18)" rx="2" ry="2" />
<text  x="583.69" y="895.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (157 samples, 0.03%)</title><rect x="670.4" y="837" width="0.4" height="15.0" fill="rgb(245,218,26)" rx="2" ry="2" />
<text  x="673.40" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (108 samples, 0.02%)</title><rect x="640.2" y="917" width="0.3" height="15.0" fill="rgb(206,41,35)" rx="2" ry="2" />
<text  x="643.23" y="927.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (2,400 samples, 0.53%)</title><rect x="380.2" y="693" width="6.2" height="15.0" fill="rgb(244,165,27)" rx="2" ry="2" />
<text  x="383.16" y="703.5" ></text>
</g>
<g >
<title>n_tty_write (5,132 samples, 1.13%)</title><rect x="654.6" y="741" width="13.4" height="15.0" fill="rgb(209,218,14)" rx="2" ry="2" />
<text  x="657.62" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (102 samples, 0.02%)</title><rect x="271.6" y="693" width="0.3" height="15.0" fill="rgb(229,218,37)" rx="2" ry="2" />
<text  x="274.62" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1237" width="160.8" height="15.0" fill="rgb(234,5,52)" rx="2" ry="2" />
<text  x="1021.74" y="1247.5" >std::function&lt;void </text>
</g>
<g >
<title>__kmalloc_node_track_caller (94 samples, 0.02%)</title><rect x="1104.0" y="709" width="0.2" height="15.0" fill="rgb(214,41,43)" rx="2" ry="2" />
<text  x="1107.00" y="719.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (139 samples, 0.03%)</title><rect x="299.9" y="773" width="0.4" height="15.0" fill="rgb(226,89,20)" rx="2" ry="2" />
<text  x="302.89" y="783.5" ></text>
</g>
<g >
<title>cpumask_next (52 samples, 0.01%)</title><rect x="1123.7" y="853" width="0.1" height="15.0" fill="rgb(216,64,53)" rx="2" ry="2" />
<text  x="1126.66" y="863.5" ></text>
</g>
<g >
<title>do_epoll_wait (8,959 samples, 1.97%)</title><rect x="468.0" y="1029" width="23.2" height="15.0" fill="rgb(245,74,29)" rx="2" ry="2" />
<text  x="470.97" y="1039.5" >d..</text>
</g>
<g >
<title>asm_sysvec_call_function (73 samples, 0.02%)</title><rect x="1181.3" y="1317" width="0.2" height="15.0" fill="rgb(206,150,3)" rx="2" ry="2" />
<text  x="1184.28" y="1327.5" ></text>
</g>
<g >
<title>psi_flags_change (61 samples, 0.01%)</title><rect x="555.4" y="469" width="0.1" height="15.0" fill="rgb(235,126,34)" rx="2" ry="2" />
<text  x="558.37" y="479.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (429 samples, 0.09%)</title><rect x="646.5" y="933" width="1.1" height="15.0" fill="rgb(242,63,39)" rx="2" ry="2" />
<text  x="649.49" y="943.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::respond_request (86,394 samples, 19.02%)</title><rect x="794.2" y="1077" width="224.4" height="15.0" fill="rgb(216,86,9)" rx="2" ry="2" />
<text  x="797.16" y="1087.5" >webserver::HttpHandler::respo..</text>
</g>
<g >
<title>___slab_alloc (106 samples, 0.02%)</title><rect x="1164.5" y="885" width="0.3" height="15.0" fill="rgb(211,95,1)" rx="2" ry="2" />
<text  x="1167.52" y="895.5" ></text>
</g>
<g >
<title>psi_task_change (281 samples, 0.06%)</title><rect x="1098.9" y="293" width="0.7" height="15.0" fill="rgb(222,215,40)" rx="2" ry="2" />
<text  x="1101.91" y="303.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (54 samples, 0.01%)</title><rect x="15.8" y="1301" width="0.2" height="15.0" fill="rgb(245,217,39)" rx="2" ry="2" />
<text  x="18.82" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (53 samples, 0.01%)</title><rect x="763.1" y="1029" width="0.1" height="15.0" fill="rgb(244,57,48)" rx="2" ry="2" />
<text  x="766.09" y="1039.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (649 samples, 0.14%)</title><rect x="697.9" y="917" width="1.7" height="15.0" fill="rgb(212,110,12)" rx="2" ry="2" />
<text  x="700.91" y="927.5" ></text>
</g>
<g >
<title>main (61,938 samples, 13.64%)</title><rect x="1018.7" y="1285" width="161.0" height="15.0" fill="rgb(248,33,30)" rx="2" ry="2" />
<text  x="1021.74" y="1295.5" >main</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (78 samples, 0.02%)</title><rect x="1023.8" y="773" width="0.2" height="15.0" fill="rgb(210,152,25)" rx="2" ry="2" />
<text  x="1026.81" y="783.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::get_recv_buffer[abi:cxx11] (384 samples, 0.08%)</title><rect x="741.5" y="1077" width="1.0" height="15.0" fill="rgb(239,140,17)" rx="2" ry="2" />
<text  x="744.48" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (19,964 samples, 4.40%)</title><rect x="170.1" y="869" width="51.8" height="15.0" fill="rgb(246,145,34)" rx="2" ry="2" />
<text  x="173.07" y="879.5" >std::..</text>
</g>
<g >
<title>tcp_sync_mss (144 samples, 0.03%)</title><rect x="418.9" y="469" width="0.4" height="15.0" fill="rgb(250,94,9)" rx="2" ry="2" />
<text  x="421.89" y="479.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (8,886 samples, 1.96%)</title><rect x="934.1" y="885" width="23.1" height="15.0" fill="rgb(209,97,35)" rx="2" ry="2" />
<text  x="937.08" y="895.5" >_..</text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (281 samples, 0.06%)</title><rect x="1031.3" y="949" width="0.7" height="15.0" fill="rgb(240,140,37)" rx="2" ry="2" />
<text  x="1034.31" y="959.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (55 samples, 0.01%)</title><rect x="227.7" y="1061" width="0.2" height="15.0" fill="rgb(246,87,54)" rx="2" ry="2" />
<text  x="230.73" y="1071.5" ></text>
</g>
<g >
<title>syscall_exit_work (77 samples, 0.02%)</title><rect x="221.2" y="661" width="0.2" height="15.0" fill="rgb(228,224,32)" rx="2" ry="2" />
<text  x="224.22" y="671.5" ></text>
</g>
<g >
<title>do_futex (1,210 samples, 0.27%)</title><rect x="964.3" y="805" width="3.2" height="15.0" fill="rgb(237,95,39)" rx="2" ry="2" />
<text  x="967.33" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (45 samples, 0.01%)</title><rect x="605.1" y="901" width="0.1" height="15.0" fill="rgb(219,22,9)" rx="2" ry="2" />
<text  x="608.13" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (324 samples, 0.07%)</title><rect x="525.4" y="789" width="0.9" height="15.0" fill="rgb(207,111,7)" rx="2" ry="2" />
<text  x="528.44" y="799.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (74 samples, 0.02%)</title><rect x="525.7" y="677" width="0.2" height="15.0" fill="rgb(208,158,24)" rx="2" ry="2" />
<text  x="528.66" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (81 samples, 0.02%)</title><rect x="645.9" y="869" width="0.2" height="15.0" fill="rgb(228,98,35)" rx="2" ry="2" />
<text  x="648.94" y="879.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (109 samples, 0.02%)</title><rect x="213.1" y="437" width="0.3" height="15.0" fill="rgb(254,36,30)" rx="2" ry="2" />
<text  x="216.07" y="447.5" ></text>
</g>
<g >
<title>tcp_write_xmit (5,965 samples, 1.31%)</title><rect x="1088.1" y="725" width="15.5" height="15.0" fill="rgb(232,34,32)" rx="2" ry="2" />
<text  x="1091.07" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (97 samples, 0.02%)</title><rect x="1001.3" y="917" width="0.2" height="15.0" fill="rgb(248,198,40)" rx="2" ry="2" />
<text  x="1004.28" y="927.5" ></text>
</g>
<g >
<title>queue_work_on (3,564 samples, 0.78%)</title><rect x="943.4" y="677" width="9.3" height="15.0" fill="rgb(217,179,4)" rx="2" ry="2" />
<text  x="946.45" y="687.5" ></text>
</g>
<g >
<title>update_load_avg (57 samples, 0.01%)</title><rect x="487.0" y="933" width="0.2" height="15.0" fill="rgb(237,120,10)" rx="2" ry="2" />
<text  x="490.04" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::Channel&gt; &gt;::construct&lt;webserver::Channel, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, webserver::EventLoop*&amp;&gt; (293 samples, 0.06%)</title><rect x="1141.9" y="949" width="0.7" height="15.0" fill="rgb(206,64,52)" rx="2" ry="2" />
<text  x="1144.89" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;::arg (80 samples, 0.02%)</title><rect x="518.4" y="773" width="0.3" height="15.0" fill="rgb(206,25,13)" rx="2" ry="2" />
<text  x="521.45" y="783.5" ></text>
</g>
<g >
<title>__wake_up_common (189 samples, 0.04%)</title><rect x="231.9" y="837" width="0.5" height="15.0" fill="rgb(227,107,5)" rx="2" ry="2" />
<text  x="234.92" y="847.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (83 samples, 0.02%)</title><rect x="325.5" y="469" width="0.2" height="15.0" fill="rgb(205,89,51)" rx="2" ry="2" />
<text  x="328.50" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::function&lt;void  (81 samples, 0.02%)</title><rect x="67.9" y="1301" width="0.2" height="15.0" fill="rgb(221,125,24)" rx="2" ry="2" />
<text  x="70.87" y="1311.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry (93 samples, 0.02%)</title><rect x="997.3" y="1013" width="0.3" height="15.0" fill="rgb(205,194,13)" rx="2" ry="2" />
<text  x="1000.31" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (238 samples, 0.05%)</title><rect x="930.6" y="837" width="0.6" height="15.0" fill="rgb(242,74,44)" rx="2" ry="2" />
<text  x="933.59" y="847.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="109.9" y="1301" width="0.3" height="15.0" fill="rgb(213,70,53)" rx="2" ry="2" />
<text  x="112.92" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (74 samples, 0.02%)</title><rect x="113.7" y="1301" width="0.2" height="15.0" fill="rgb(248,105,15)" rx="2" ry="2" />
<text  x="116.70" y="1311.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (548 samples, 0.12%)</title><rect x="1089.5" y="629" width="1.5" height="15.0" fill="rgb(232,196,19)" rx="2" ry="2" />
<text  x="1092.54" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (127 samples, 0.03%)</title><rect x="358.1" y="789" width="0.4" height="15.0" fill="rgb(233,107,5)" rx="2" ry="2" />
<text  x="361.14" y="799.5" ></text>
</g>
<g >
<title>is_cpu_allowed (108 samples, 0.02%)</title><rect x="325.4" y="485" width="0.3" height="15.0" fill="rgb(242,186,14)" rx="2" ry="2" />
<text  x="328.43" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::_M_ptr (86 samples, 0.02%)</title><rect x="281.6" y="885" width="0.2" height="15.0" fill="rgb(220,176,53)" rx="2" ry="2" />
<text  x="284.60" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_work (57 samples, 0.01%)</title><rect x="280.4" y="789" width="0.1" height="15.0" fill="rgb(219,188,23)" rx="2" ry="2" />
<text  x="283.40" y="799.5" ></text>
</g>
<g >
<title>mutex_lock (65 samples, 0.01%)</title><rect x="657.5" y="725" width="0.2" height="15.0" fill="rgb(226,143,46)" rx="2" ry="2" />
<text  x="660.51" y="735.5" ></text>
</g>
<g >
<title>[[nf_nat]] (221 samples, 0.05%)</title><rect x="443.6" y="565" width="0.6" height="15.0" fill="rgb(208,184,44)" rx="2" ry="2" />
<text  x="446.64" y="575.5" ></text>
</g>
<g >
<title>queue_work_on (3,559 samples, 0.78%)</title><rect x="323.7" y="533" width="9.2" height="15.0" fill="rgb(226,208,34)" rx="2" ry="2" />
<text  x="326.68" y="543.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (45 samples, 0.01%)</title><rect x="1061.9" y="805" width="0.1" height="15.0" fill="rgb(221,169,38)" rx="2" ry="2" />
<text  x="1064.87" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (49 samples, 0.01%)</title><rect x="795.6" y="1013" width="0.1" height="15.0" fill="rgb(207,202,21)" rx="2" ry="2" />
<text  x="798.57" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_accept4 (8,017 samples, 1.77%)</title><rect x="1145.9" y="1029" width="20.8" height="15.0" fill="rgb(235,55,47)" rx="2" ry="2" />
<text  x="1148.90" y="1039.5" ></text>
</g>
<g >
<title>next_uptodate_page (212 samples, 0.05%)</title><rect x="903.0" y="837" width="0.6" height="15.0" fill="rgb(221,73,11)" rx="2" ry="2" />
<text  x="906.02" y="847.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (145 samples, 0.03%)</title><rect x="566.0" y="581" width="0.4" height="15.0" fill="rgb(225,61,0)" rx="2" ry="2" />
<text  x="568.99" y="591.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (921 samples, 0.20%)</title><rect x="927.0" y="901" width="2.4" height="15.0" fill="rgb(241,212,46)" rx="2" ry="2" />
<text  x="930.00" y="911.5" ></text>
</g>
<g >
<title>operator new (292 samples, 0.06%)</title><rect x="609.0" y="805" width="0.8" height="15.0" fill="rgb(206,202,24)" rx="2" ry="2" />
<text  x="612.02" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,319 samples, 0.29%)</title><rect x="1182.4" y="1317" width="3.4" height="15.0" fill="rgb(250,228,33)" rx="2" ry="2" />
<text  x="1185.41" y="1327.5" ></text>
</g>
<g >
<title>enqueue_entity (91 samples, 0.02%)</title><rect x="713.6" y="597" width="0.2" height="15.0" fill="rgb(247,167,14)" rx="2" ry="2" />
<text  x="716.58" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (134 samples, 0.03%)</title><rect x="589.4" y="773" width="0.4" height="15.0" fill="rgb(247,183,35)" rx="2" ry="2" />
<text  x="592.42" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (110 samples, 0.02%)</title><rect x="566.1" y="549" width="0.2" height="15.0" fill="rgb(206,52,54)" rx="2" ry="2" />
<text  x="569.05" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (48 samples, 0.01%)</title><rect x="259.5" y="933" width="0.1" height="15.0" fill="rgb(238,69,41)" rx="2" ry="2" />
<text  x="262.49" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (674 samples, 0.15%)</title><rect x="643.5" y="901" width="1.8" height="15.0" fill="rgb(228,212,11)" rx="2" ry="2" />
<text  x="646.55" y="911.5" ></text>
</g>
<g >
<title>fsnotify (110 samples, 0.02%)</title><rect x="883.3" y="917" width="0.3" height="15.0" fill="rgb(251,188,47)" rx="2" ry="2" />
<text  x="886.29" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::_M_ptr (91 samples, 0.02%)</title><rect x="165.1" y="1077" width="0.2" height="15.0" fill="rgb(252,91,9)" rx="2" ry="2" />
<text  x="168.11" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (622 samples, 0.14%)</title><rect x="305.1" y="693" width="1.6" height="15.0" fill="rgb(244,51,43)" rx="2" ry="2" />
<text  x="308.12" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (376 samples, 0.08%)</title><rect x="169.1" y="805" width="1.0" height="15.0" fill="rgb(252,159,34)" rx="2" ry="2" />
<text  x="172.08" y="815.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;std::shared_ptr&lt;webserver::Channel&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::find (216 samples, 0.05%)</title><rect x="351.6" y="901" width="0.5" height="15.0" fill="rgb(245,142,23)" rx="2" ry="2" />
<text  x="354.59" y="911.5" ></text>
</g>
<g >
<title>operator new (261 samples, 0.06%)</title><rect x="610.5" y="805" width="0.6" height="15.0" fill="rgb(213,36,13)" rx="2" ry="2" />
<text  x="613.47" y="815.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (147 samples, 0.03%)</title><rect x="755.7" y="1013" width="0.4" height="15.0" fill="rgb(209,138,31)" rx="2" ry="2" />
<text  x="758.72" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::push_back (124 samples, 0.03%)</title><rect x="48.1" y="1301" width="0.4" height="15.0" fill="rgb(210,78,44)" rx="2" ry="2" />
<text  x="51.13" y="1311.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (315 samples, 0.07%)</title><rect x="719.8" y="629" width="0.8" height="15.0" fill="rgb(248,13,15)" rx="2" ry="2" />
<text  x="722.78" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (96 samples, 0.02%)</title><rect x="780.3" y="997" width="0.2" height="15.0" fill="rgb(213,114,43)" rx="2" ry="2" />
<text  x="783.28" y="1007.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2,303 samples, 0.51%)</title><rect x="680.0" y="901" width="6.0" height="15.0" fill="rgb(245,67,5)" rx="2" ry="2" />
<text  x="683.02" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (67 samples, 0.01%)</title><rect x="1178.2" y="1013" width="0.1" height="15.0" fill="rgb(228,27,24)" rx="2" ry="2" />
<text  x="1181.15" y="1023.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (79 samples, 0.02%)</title><rect x="558.0" y="581" width="0.2" height="15.0" fill="rgb(244,16,9)" rx="2" ry="2" />
<text  x="561.00" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free (183 samples, 0.04%)</title><rect x="855.3" y="965" width="0.5" height="15.0" fill="rgb(237,46,28)" rx="2" ry="2" />
<text  x="858.28" y="975.5" ></text>
</g>
<g >
<title>std::mutex::unlock (90 samples, 0.02%)</title><rect x="129.5" y="1301" width="0.2" height="15.0" fill="rgb(251,225,4)" rx="2" ry="2" />
<text  x="132.47" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (494 samples, 0.11%)</title><rect x="46.8" y="1301" width="1.3" height="15.0" fill="rgb(229,147,48)" rx="2" ry="2" />
<text  x="49.83" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (1,545 samples, 0.34%)</title><rect x="1022.1" y="997" width="4.0" height="15.0" fill="rgb(246,46,34)" rx="2" ry="2" />
<text  x="1025.07" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,554 samples, 0.34%)</title><rect x="1069.8" y="869" width="4.0" height="15.0" fill="rgb(247,119,47)" rx="2" ry="2" />
<text  x="1072.80" y="879.5" ></text>
</g>
<g >
<title>[[nf_nat]] (134 samples, 0.03%)</title><rect x="446.3" y="709" width="0.4" height="15.0" fill="rgb(221,210,8)" rx="2" ry="2" />
<text  x="449.34" y="719.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (164 samples, 0.04%)</title><rect x="337.0" y="661" width="0.4" height="15.0" fill="rgb(236,32,9)" rx="2" ry="2" />
<text  x="339.96" y="671.5" ></text>
</g>
<g >
<title>ip_finish_output2 (21,851 samples, 4.81%)</title><rect x="388.2" y="725" width="56.7" height="15.0" fill="rgb(222,138,2)" rx="2" ry="2" />
<text  x="391.15" y="735.5" >ip_fin..</text>
</g>
<g >
<title>__GI___libc_write (74 samples, 0.02%)</title><rect x="145.1" y="1301" width="0.2" height="15.0" fill="rgb(223,167,6)" rx="2" ry="2" />
<text  x="148.11" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (260 samples, 0.06%)</title><rect x="694.4" y="933" width="0.7" height="15.0" fill="rgb(207,15,37)" rx="2" ry="2" />
<text  x="697.39" y="943.5" ></text>
</g>
<g >
<title>try_charge_memcg (88 samples, 0.02%)</title><rect x="601.2" y="709" width="0.2" height="15.0" fill="rgb(221,54,24)" rx="2" ry="2" />
<text  x="604.21" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (261 samples, 0.06%)</title><rect x="1169.8" y="981" width="0.7" height="15.0" fill="rgb(226,16,10)" rx="2" ry="2" />
<text  x="1172.84" y="991.5" ></text>
</g>
<g >
<title>__GI___libc_free (139 samples, 0.03%)</title><rect x="270.2" y="853" width="0.4" height="15.0" fill="rgb(207,178,16)" rx="2" ry="2" />
<text  x="273.21" y="863.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (39 samples, 0.01%)</title><rect x="334.8" y="581" width="0.1" height="15.0" fill="rgb(244,85,53)" rx="2" ry="2" />
<text  x="337.77" y="591.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::function&lt;void  (460 samples, 0.10%)</title><rect x="624.9" y="1013" width="1.2" height="15.0" fill="rgb(210,203,45)" rx="2" ry="2" />
<text  x="627.89" y="1023.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (309 samples, 0.07%)</title><rect x="415.1" y="405" width="0.8" height="15.0" fill="rgb(215,151,0)" rx="2" ry="2" />
<text  x="418.08" y="415.5" ></text>
</g>
<g >
<title>[[nf_nat]] (100 samples, 0.02%)</title><rect x="444.0" y="549" width="0.2" height="15.0" fill="rgb(218,63,35)" rx="2" ry="2" />
<text  x="446.95" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (44 samples, 0.01%)</title><rect x="774.9" y="885" width="0.1" height="15.0" fill="rgb(235,132,24)" rx="2" ry="2" />
<text  x="777.90" y="895.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (265 samples, 0.06%)</title><rect x="470.5" y="1013" width="0.7" height="15.0" fill="rgb(206,4,35)" rx="2" ry="2" />
<text  x="473.50" y="1023.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (122 samples, 0.03%)</title><rect x="1112.1" y="1029" width="0.3" height="15.0" fill="rgb(210,160,12)" rx="2" ry="2" />
<text  x="1115.10" y="1039.5" ></text>
</g>
<g >
<title>futex_wait_setup (128 samples, 0.03%)</title><rect x="677.7" y="789" width="0.4" height="15.0" fill="rgb(248,31,42)" rx="2" ry="2" />
<text  x="680.74" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (241 samples, 0.05%)</title><rect x="1031.4" y="933" width="0.6" height="15.0" fill="rgb(229,7,37)" rx="2" ry="2" />
<text  x="1034.39" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (706 samples, 0.16%)</title><rect x="307.1" y="741" width="1.8" height="15.0" fill="rgb(249,70,47)" rx="2" ry="2" />
<text  x="310.05" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (42,554 samples, 9.37%)</title><rect x="511.6" y="1061" width="110.6" height="15.0" fill="rgb(207,155,35)" rx="2" ry="2" />
<text  x="514.62" y="1071.5" >std::__invoke..</text>
</g>
<g >
<title>skb_release_data (833 samples, 0.18%)</title><rect x="243.3" y="789" width="2.1" height="15.0" fill="rgb(245,138,50)" rx="2" ry="2" />
<text  x="246.27" y="799.5" ></text>
</g>
<g >
<title>preempt_schedule (108 samples, 0.02%)</title><rect x="656.5" y="661" width="0.3" height="15.0" fill="rgb(254,160,39)" rx="2" ry="2" />
<text  x="659.55" y="671.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (95 samples, 0.02%)</title><rect x="977.4" y="965" width="0.3" height="15.0" fill="rgb(228,126,3)" rx="2" ry="2" />
<text  x="980.42" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,342 samples, 0.52%)</title><rect x="773.7" y="1013" width="6.1" height="15.0" fill="rgb(209,212,49)" rx="2" ry="2" />
<text  x="776.74" y="1023.5" ></text>
</g>
<g >
<title>syscall_exit_work (166 samples, 0.04%)</title><rect x="336.4" y="613" width="0.5" height="15.0" fill="rgb(214,162,47)" rx="2" ry="2" />
<text  x="339.42" y="623.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (18,770 samples, 4.13%)</title><rect x="691.1" y="981" width="48.8" height="15.0" fill="rgb(250,98,25)" rx="2" ry="2" />
<text  x="694.09" y="991.5" >spdl..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (44 samples, 0.01%)</title><rect x="1178.4" y="1029" width="0.1" height="15.0" fill="rgb(227,130,17)" rx="2" ry="2" />
<text  x="1181.35" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (134 samples, 0.03%)</title><rect x="791.0" y="965" width="0.3" height="15.0" fill="rgb(239,90,3)" rx="2" ry="2" />
<text  x="793.99" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (247 samples, 0.05%)</title><rect x="971.7" y="949" width="0.6" height="15.0" fill="rgb(254,174,10)" rx="2" ry="2" />
<text  x="974.66" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::make_arg&lt;true, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;,  (80 samples, 0.02%)</title><rect x="519.4" y="821" width="0.2" height="15.0" fill="rgb(232,160,1)" rx="2" ry="2" />
<text  x="522.42" y="831.5" ></text>
</g>
<g >
<title>__fget_files (300 samples, 0.07%)</title><rect x="1010.8" y="837" width="0.8" height="15.0" fill="rgb(214,200,17)" rx="2" ry="2" />
<text  x="1013.78" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (55 samples, 0.01%)</title><rect x="643.8" y="789" width="0.1" height="15.0" fill="rgb(250,180,22)" rx="2" ry="2" />
<text  x="646.80" y="799.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,997 samples, 1.10%)</title><rect x="636.8" y="949" width="13.0" height="15.0" fill="rgb(234,166,27)" rx="2" ry="2" />
<text  x="639.82" y="959.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (85 samples, 0.02%)</title><rect x="471.4" y="1013" width="0.2" height="15.0" fill="rgb(205,66,31)" rx="2" ry="2" />
<text  x="474.36" y="1023.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (66 samples, 0.01%)</title><rect x="447.8" y="757" width="0.2" height="15.0" fill="rgb(238,173,10)" rx="2" ry="2" />
<text  x="450.85" y="767.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::handle_http_request (148,645 samples, 32.73%)</title><rect x="632.4" y="1093" width="386.3" height="15.0" fill="rgb(214,127,42)" rx="2" ry="2" />
<text  x="635.44" y="1103.5" >webserver::HttpHandler::handle_http_request</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::_M_ptr (53 samples, 0.01%)</title><rect x="164.9" y="1077" width="0.1" height="15.0" fill="rgb(248,113,29)" rx="2" ry="2" />
<text  x="167.89" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,788 samples, 1.49%)</title><rect x="874.9" y="1029" width="17.6" height="15.0" fill="rgb(208,216,48)" rx="2" ry="2" />
<text  x="877.85" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (152 samples, 0.03%)</title><rect x="1108.9" y="933" width="0.4" height="15.0" fill="rgb(214,228,45)" rx="2" ry="2" />
<text  x="1111.88" y="943.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (90 samples, 0.02%)</title><rect x="1174.0" y="997" width="0.2" height="15.0" fill="rgb(211,91,3)" rx="2" ry="2" />
<text  x="1176.95" y="1007.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (2,587 samples, 0.57%)</title><rect x="743.9" y="1029" width="6.7" height="15.0" fill="rgb(232,211,5)" rx="2" ry="2" />
<text  x="746.92" y="1039.5" ></text>
</g>
<g >
<title>ip_finish_output (109 samples, 0.02%)</title><rect x="213.1" y="453" width="0.3" height="15.0" fill="rgb(229,21,13)" rx="2" ry="2" />
<text  x="216.07" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (461 samples, 0.10%)</title><rect x="1000.0" y="885" width="1.2" height="15.0" fill="rgb(216,27,20)" rx="2" ry="2" />
<text  x="1003.00" y="895.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (105 samples, 0.02%)</title><rect x="552.1" y="501" width="0.3" height="15.0" fill="rgb(209,216,38)" rx="2" ry="2" />
<text  x="555.11" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (51 samples, 0.01%)</title><rect x="1075.9" y="1061" width="0.1" height="15.0" fill="rgb(230,140,54)" rx="2" ry="2" />
<text  x="1078.90" y="1071.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (63 samples, 0.01%)</title><rect x="840.3" y="917" width="0.2" height="15.0" fill="rgb(250,102,22)" rx="2" ry="2" />
<text  x="843.30" y="927.5" ></text>
</g>
<g >
<title>psi_task_change (156 samples, 0.03%)</title><rect x="330.9" y="453" width="0.4" height="15.0" fill="rgb(246,181,9)" rx="2" ry="2" />
<text  x="333.94" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (161 samples, 0.04%)</title><rect x="893.8" y="997" width="0.4" height="15.0" fill="rgb(253,44,0)" rx="2" ry="2" />
<text  x="896.79" y="1007.5" ></text>
</g>
<g >
<title>woken_wake_function (60 samples, 0.01%)</title><rect x="437.4" y="421" width="0.1" height="15.0" fill="rgb(239,72,21)" rx="2" ry="2" />
<text  x="440.39" y="431.5" ></text>
</g>
<g >
<title>nf_hook_slow (114 samples, 0.03%)</title><rect x="1100.6" y="501" width="0.3" height="15.0" fill="rgb(225,51,40)" rx="2" ry="2" />
<text  x="1103.62" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (120 samples, 0.03%)</title><rect x="1108.9" y="853" width="0.3" height="15.0" fill="rgb(212,9,30)" rx="2" ry="2" />
<text  x="1111.92" y="863.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (324 samples, 0.07%)</title><rect x="994.8" y="901" width="0.8" height="15.0" fill="rgb(252,130,43)" rx="2" ry="2" />
<text  x="997.76" y="911.5" ></text>
</g>
<g >
<title>_raw_spin_lock (46 samples, 0.01%)</title><rect x="415.7" y="325" width="0.2" height="15.0" fill="rgb(237,59,21)" rx="2" ry="2" />
<text  x="418.73" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (40 samples, 0.01%)</title><rect x="343.4" y="725" width="0.1" height="15.0" fill="rgb(222,218,50)" rx="2" ry="2" />
<text  x="346.40" y="735.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (684 samples, 0.15%)</title><rect x="192.5" y="437" width="1.7" height="15.0" fill="rgb(252,159,31)" rx="2" ry="2" />
<text  x="195.46" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (101 samples, 0.02%)</title><rect x="790.7" y="981" width="0.2" height="15.0" fill="rgb(252,63,32)" rx="2" ry="2" />
<text  x="793.68" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (518 samples, 0.11%)</title><rect x="916.5" y="933" width="1.3" height="15.0" fill="rgb(209,160,13)" rx="2" ry="2" />
<text  x="919.48" y="943.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (60 samples, 0.01%)</title><rect x="1042.7" y="853" width="0.2" height="15.0" fill="rgb(244,117,18)" rx="2" ry="2" />
<text  x="1045.71" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (255 samples, 0.06%)</title><rect x="631.7" y="1077" width="0.6" height="15.0" fill="rgb(232,176,3)" rx="2" ry="2" />
<text  x="634.67" y="1087.5" ></text>
</g>
<g >
<title>memcpy_erms (56 samples, 0.01%)</title><rect x="657.2" y="677" width="0.2" height="15.0" fill="rgb(212,150,40)" rx="2" ry="2" />
<text  x="660.24" y="687.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (340 samples, 0.07%)</title><rect x="724.5" y="661" width="0.9" height="15.0" fill="rgb(224,87,45)" rx="2" ry="2" />
<text  x="727.47" y="671.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::set_method (213 samples, 0.05%)</title><rect x="792.2" y="1061" width="0.6" height="15.0" fill="rgb(225,213,0)" rx="2" ry="2" />
<text  x="795.21" y="1071.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (61 samples, 0.01%)</title><rect x="254.3" y="869" width="0.2" height="15.0" fill="rgb(240,203,12)" rx="2" ry="2" />
<text  x="257.29" y="879.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::send (7,721 samples, 1.70%)</title><rect x="998.6" y="1045" width="20.0" height="15.0" fill="rgb(250,188,47)" rx="2" ry="2" />
<text  x="1001.57" y="1055.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (50 samples, 0.01%)</title><rect x="1175.7" y="965" width="0.2" height="15.0" fill="rgb(250,105,14)" rx="2" ry="2" />
<text  x="1178.74" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (240 samples, 0.05%)</title><rect x="49.0" y="1301" width="0.6" height="15.0" fill="rgb(219,72,53)" rx="2" ry="2" />
<text  x="51.97" y="1311.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (188 samples, 0.04%)</title><rect x="517.7" y="661" width="0.5" height="15.0" fill="rgb(224,141,39)" rx="2" ry="2" />
<text  x="520.69" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (214 samples, 0.05%)</title><rect x="1176.5" y="1045" width="0.6" height="15.0" fill="rgb(222,52,27)" rx="2" ry="2" />
<text  x="1179.50" y="1055.5" ></text>
</g>
<g >
<title>preempt_schedule (78 samples, 0.02%)</title><rect x="941.7" y="629" width="0.2" height="15.0" fill="rgb(244,184,31)" rx="2" ry="2" />
<text  x="944.74" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (173 samples, 0.04%)</title><rect x="151.6" y="1205" width="0.4" height="15.0" fill="rgb(205,149,26)" rx="2" ry="2" />
<text  x="154.58" y="1215.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (145 samples, 0.03%)</title><rect x="57.6" y="1301" width="0.3" height="15.0" fill="rgb(211,155,23)" rx="2" ry="2" />
<text  x="60.57" y="1311.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (196 samples, 0.04%)</title><rect x="1065.9" y="757" width="0.5" height="15.0" fill="rgb(220,136,43)" rx="2" ry="2" />
<text  x="1068.93" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (257 samples, 0.06%)</title><rect x="610.5" y="789" width="0.6" height="15.0" fill="rgb(218,183,36)" rx="2" ry="2" />
<text  x="613.48" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_free (44 samples, 0.01%)</title><rect x="1086.3" y="389" width="0.1" height="15.0" fill="rgb(232,135,26)" rx="2" ry="2" />
<text  x="1089.33" y="399.5" ></text>
</g>
<g >
<title>operator delete (107 samples, 0.02%)</title><rect x="225.6" y="981" width="0.3" height="15.0" fill="rgb(210,85,45)" rx="2" ry="2" />
<text  x="228.62" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (63 samples, 0.01%)</title><rect x="167.7" y="917" width="0.2" height="15.0" fill="rgb(222,42,21)" rx="2" ry="2" />
<text  x="170.70" y="927.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (89 samples, 0.02%)</title><rect x="1051.2" y="693" width="0.2" height="15.0" fill="rgb(205,146,49)" rx="2" ry="2" />
<text  x="1054.17" y="703.5" ></text>
</g>
<g >
<title>new_sync_write (6,842 samples, 1.51%)</title><rect x="316.8" y="597" width="17.8" height="15.0" fill="rgb(229,129,14)" rx="2" ry="2" />
<text  x="319.78" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (49 samples, 0.01%)</title><rect x="1176.0" y="1045" width="0.1" height="15.0" fill="rgb(230,113,44)" rx="2" ry="2" />
<text  x="1178.95" y="1055.5" ></text>
</g>
<g >
<title>update_load_avg (41 samples, 0.01%)</title><rect x="713.7" y="581" width="0.1" height="15.0" fill="rgb(242,31,13)" rx="2" ry="2" />
<text  x="716.71" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (188 samples, 0.04%)</title><rect x="634.5" y="965" width="0.5" height="15.0" fill="rgb(233,163,18)" rx="2" ry="2" />
<text  x="637.53" y="975.5" ></text>
</g>
<g >
<title>memcpy_erms (39 samples, 0.01%)</title><rect x="333.3" y="517" width="0.1" height="15.0" fill="rgb(209,107,53)" rx="2" ry="2" />
<text  x="336.35" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (155 samples, 0.03%)</title><rect x="1001.2" y="933" width="0.4" height="15.0" fill="rgb(210,193,21)" rx="2" ry="2" />
<text  x="1004.24" y="943.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (112 samples, 0.02%)</title><rect x="201.7" y="181" width="0.3" height="15.0" fill="rgb(217,217,27)" rx="2" ry="2" />
<text  x="204.72" y="191.5" ></text>
</g>
<g >
<title>new_do_write (8,541 samples, 1.88%)</title><rect x="934.7" y="853" width="22.2" height="15.0" fill="rgb(254,209,31)" rx="2" ry="2" />
<text  x="937.69" y="863.5" >n..</text>
</g>
<g >
<title>webserver::TcpSocket::get_fd (39 samples, 0.01%)</title><rect x="143.4" y="1301" width="0.1" height="15.0" fill="rgb(247,117,46)" rx="2" ry="2" />
<text  x="146.42" y="1311.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (155 samples, 0.03%)</title><rect x="783.3" y="1013" width="0.4" height="15.0" fill="rgb(225,92,12)" rx="2" ry="2" />
<text  x="786.30" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output2 (8,098 samples, 1.78%)</title><rect x="192.0" y="453" width="21.1" height="15.0" fill="rgb(217,67,26)" rx="2" ry="2" />
<text  x="195.03" y="463.5" ></text>
</g>
<g >
<title>vma_merge (125 samples, 0.03%)</title><rect x="817.3" y="949" width="0.3" height="15.0" fill="rgb(246,80,14)" rx="2" ry="2" />
<text  x="820.28" y="959.5" ></text>
</g>
<g >
<title>mntput_no_expire (80 samples, 0.02%)</title><rect x="850.1" y="949" width="0.3" height="15.0" fill="rgb(208,201,33)" rx="2" ry="2" />
<text  x="853.14" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (99 samples, 0.02%)</title><rect x="519.0" y="693" width="0.2" height="15.0" fill="rgb(249,220,54)" rx="2" ry="2" />
<text  x="521.97" y="703.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (105 samples, 0.02%)</title><rect x="216.9" y="501" width="0.2" height="15.0" fill="rgb(229,40,10)" rx="2" ry="2" />
<text  x="219.87" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (39 samples, 0.01%)</title><rect x="1169.5" y="981" width="0.1" height="15.0" fill="rgb(240,104,51)" rx="2" ry="2" />
<text  x="1172.46" y="991.5" ></text>
</g>
<g >
<title>spdlog::sinks::sink::should_log (67 samples, 0.01%)</title><rect x="577.5" y="821" width="0.1" height="15.0" fill="rgb(245,42,29)" rx="2" ry="2" />
<text  x="580.45" y="831.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,877 samples, 0.63%)</title><rect x="409.7" y="469" width="7.4" height="15.0" fill="rgb(219,53,44)" rx="2" ry="2" />
<text  x="412.67" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (105 samples, 0.02%)</title><rect x="107.5" y="1301" width="0.3" height="15.0" fill="rgb(211,126,53)" rx="2" ry="2" />
<text  x="110.50" y="1311.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (72 samples, 0.02%)</title><rect x="667.1" y="693" width="0.2" height="15.0" fill="rgb(250,154,53)" rx="2" ry="2" />
<text  x="670.09" y="703.5" ></text>
</g>
<g >
<title>dequeue_task_fair (294 samples, 0.06%)</title><rect x="339.7" y="565" width="0.7" height="15.0" fill="rgb(249,107,15)" rx="2" ry="2" />
<text  x="342.66" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (85 samples, 0.02%)</title><rect x="1177.1" y="1045" width="0.2" height="15.0" fill="rgb(243,112,0)" rx="2" ry="2" />
<text  x="1180.08" y="1055.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (40 samples, 0.01%)</title><rect x="1028.5" y="965" width="0.1" height="15.0" fill="rgb(208,85,40)" rx="2" ry="2" />
<text  x="1031.52" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (226 samples, 0.05%)</title><rect x="1026.5" y="1013" width="0.6" height="15.0" fill="rgb(216,38,29)" rx="2" ry="2" />
<text  x="1029.47" y="1023.5" ></text>
</g>
<g >
<title>_IO_new_file_write (64 samples, 0.01%)</title><rect x="144.4" y="1301" width="0.2" height="15.0" fill="rgb(219,66,31)" rx="2" ry="2" />
<text  x="147.40" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (82 samples, 0.02%)</title><rect x="894.3" y="981" width="0.2" height="15.0" fill="rgb(234,63,25)" rx="2" ry="2" />
<text  x="897.25" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (175 samples, 0.04%)</title><rect x="983.2" y="1013" width="0.4" height="15.0" fill="rgb(235,221,14)" rx="2" ry="2" />
<text  x="986.16" y="1023.5" ></text>
</g>
<g >
<title>__fget_files (97 samples, 0.02%)</title><rect x="459.5" y="821" width="0.3" height="15.0" fill="rgb(215,129,38)" rx="2" ry="2" />
<text  x="462.50" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (352 samples, 0.08%)</title><rect x="1113.9" y="997" width="0.9" height="15.0" fill="rgb(243,191,6)" rx="2" ry="2" />
<text  x="1116.91" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (1,237 samples, 0.27%)</title><rect x="1112.4" y="1077" width="3.2" height="15.0" fill="rgb(230,64,33)" rx="2" ry="2" />
<text  x="1115.42" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (71 samples, 0.02%)</title><rect x="1038.2" y="869" width="0.2" height="15.0" fill="rgb(216,169,22)" rx="2" ry="2" />
<text  x="1041.20" y="879.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (416 samples, 0.09%)</title><rect x="213.6" y="421" width="1.1" height="15.0" fill="rgb(233,219,26)" rx="2" ry="2" />
<text  x="216.61" y="431.5" ></text>
</g>
<g >
<title>up_read (40 samples, 0.01%)</title><rect x="1059.8" y="741" width="0.1" height="15.0" fill="rgb(227,55,3)" rx="2" ry="2" />
<text  x="1062.84" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (368 samples, 0.08%)</title><rect x="617.0" y="901" width="1.0" height="15.0" fill="rgb(220,27,8)" rx="2" ry="2" />
<text  x="620.00" y="911.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (157 samples, 0.03%)</title><rect x="912.8" y="1029" width="0.4" height="15.0" fill="rgb(240,95,6)" rx="2" ry="2" />
<text  x="915.82" y="1039.5" ></text>
</g>
<g >
<title>path_init (281 samples, 0.06%)</title><rect x="862.4" y="949" width="0.8" height="15.0" fill="rgb(235,171,12)" rx="2" ry="2" />
<text  x="865.44" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (125 samples, 0.03%)</title><rect x="303.8" y="677" width="0.3" height="15.0" fill="rgb(247,82,15)" rx="2" ry="2" />
<text  x="306.78" y="687.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (50 samples, 0.01%)</title><rect x="332.9" y="533" width="0.2" height="15.0" fill="rgb(237,25,21)" rx="2" ry="2" />
<text  x="335.93" y="543.5" ></text>
</g>
<g >
<title>operator new (322 samples, 0.07%)</title><rect x="980.2" y="869" width="0.9" height="15.0" fill="rgb(246,57,19)" rx="2" ry="2" />
<text  x="983.23" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (86 samples, 0.02%)</title><rect x="547.2" y="565" width="0.2" height="15.0" fill="rgb(223,139,36)" rx="2" ry="2" />
<text  x="550.17" y="575.5" ></text>
</g>
<g >
<title>operator new (183 samples, 0.04%)</title><rect x="1105.9" y="1029" width="0.5" height="15.0" fill="rgb(238,33,10)" rx="2" ry="2" />
<text  x="1108.92" y="1039.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::allocate (798 samples, 0.18%)</title><rect x="506.7" y="1045" width="2.1" height="15.0" fill="rgb(218,134,11)" rx="2" ry="2" />
<text  x="509.74" y="1055.5" ></text>
</g>
<g >
<title>security_file_permission (64 samples, 0.01%)</title><rect x="727.9" y="773" width="0.1" height="15.0" fill="rgb(240,90,44)" rx="2" ry="2" />
<text  x="730.88" y="783.5" ></text>
</g>
<g >
<title>up_write (54 samples, 0.01%)</title><rect x="220.9" y="581" width="0.1" height="15.0" fill="rgb(219,219,20)" rx="2" ry="2" />
<text  x="223.90" y="591.5" ></text>
</g>
<g >
<title>enqueue_task (1,787 samples, 0.39%)</title><rect x="1124.9" y="853" width="4.7" height="15.0" fill="rgb(230,129,45)" rx="2" ry="2" />
<text  x="1127.91" y="863.5" ></text>
</g>
<g >
<title>mod_objcg_state (52 samples, 0.01%)</title><rect x="1160.8" y="885" width="0.1" height="15.0" fill="rgb(252,107,6)" rx="2" ry="2" />
<text  x="1163.75" y="895.5" ></text>
</g>
<g >
<title>switch_fpu_return (342 samples, 0.08%)</title><rect x="496.2" y="1013" width="0.9" height="15.0" fill="rgb(209,149,2)" rx="2" ry="2" />
<text  x="499.21" y="1023.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (60 samples, 0.01%)</title><rect x="1133.3" y="885" width="0.1" height="15.0" fill="rgb(214,224,44)" rx="2" ry="2" />
<text  x="1136.28" y="895.5" ></text>
</g>
<g >
<title>blocking_notifier_call_chain (64 samples, 0.01%)</title><rect x="845.9" y="997" width="0.2" height="15.0" fill="rgb(214,176,33)" rx="2" ry="2" />
<text  x="848.90" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (177 samples, 0.04%)</title><rect x="350.8" y="837" width="0.5" height="15.0" fill="rgb(209,156,7)" rx="2" ry="2" />
<text  x="353.80" y="847.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;int, int&gt; (342 samples, 0.08%)</title><rect x="161.6" y="1045" width="0.9" height="15.0" fill="rgb(252,163,5)" rx="2" ry="2" />
<text  x="164.60" y="1055.5" ></text>
</g>
<g >
<title>__GI_inet_ntop (1,931 samples, 0.43%)</title><rect x="352.5" y="853" width="5.0" height="15.0" fill="rgb(233,30,17)" rx="2" ry="2" />
<text  x="355.47" y="863.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (46 samples, 0.01%)</title><rect x="978.4" y="965" width="0.2" height="15.0" fill="rgb(206,181,41)" rx="2" ry="2" />
<text  x="981.45" y="975.5" ></text>
</g>
<g >
<title>__GI_munmap (11,430 samples, 2.52%)</title><rect x="822.2" y="1061" width="29.7" height="15.0" fill="rgb(238,27,49)" rx="2" ry="2" />
<text  x="825.17" y="1071.5" >__..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt;, false&gt;::_Head_base&lt;std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; (85 samples, 0.02%)</title><rect x="1077.7" y="981" width="0.2" height="15.0" fill="rgb(244,171,38)" rx="2" ry="2" />
<text  x="1080.68" y="991.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (162 samples, 0.04%)</title><rect x="277.5" y="869" width="0.4" height="15.0" fill="rgb(220,179,15)" rx="2" ry="2" />
<text  x="280.49" y="879.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (40 samples, 0.01%)</title><rect x="451.7" y="773" width="0.1" height="15.0" fill="rgb(233,197,6)" rx="2" ry="2" />
<text  x="454.68" y="783.5" ></text>
</g>
<g >
<title>__do_sys_newfstatat (5,732 samples, 1.26%)</title><rect x="852.6" y="1013" width="14.9" height="15.0" fill="rgb(208,79,43)" rx="2" ry="2" />
<text  x="855.58" y="1023.5" ></text>
</g>
<g >
<title>operator new (707 samples, 0.16%)</title><rect x="777.9" y="933" width="1.8" height="15.0" fill="rgb(227,40,9)" rx="2" ry="2" />
<text  x="780.89" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (125 samples, 0.03%)</title><rect x="931.4" y="805" width="0.3" height="15.0" fill="rgb(232,57,30)" rx="2" ry="2" />
<text  x="934.38" y="815.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (688 samples, 0.15%)</title><rect x="307.1" y="725" width="1.8" height="15.0" fill="rgb(212,40,32)" rx="2" ry="2" />
<text  x="310.10" y="735.5" ></text>
</g>
<g >
<title>__schedule (1,705 samples, 0.38%)</title><rect x="564.0" y="613" width="4.4" height="15.0" fill="rgb(205,53,10)" rx="2" ry="2" />
<text  x="566.97" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (997 samples, 0.22%)</title><rect x="731.1" y="869" width="2.6" height="15.0" fill="rgb(232,94,49)" rx="2" ry="2" />
<text  x="734.07" y="879.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (18,613 samples, 4.10%)</title><rect x="1027.1" y="1013" width="48.3" height="15.0" fill="rgb(230,75,18)" rx="2" ry="2" />
<text  x="1030.06" y="1023.5" >spdl..</text>
</g>
<g >
<title>mntput_no_expire (46 samples, 0.01%)</title><rect x="863.9" y="981" width="0.2" height="15.0" fill="rgb(253,192,42)" rx="2" ry="2" />
<text  x="866.94" y="991.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (47 samples, 0.01%)</title><rect x="757.1" y="1045" width="0.1" height="15.0" fill="rgb(249,51,34)" rx="2" ry="2" />
<text  x="760.07" y="1055.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_head (149 samples, 0.03%)</title><rect x="79.1" y="1301" width="0.4" height="15.0" fill="rgb(217,145,4)" rx="2" ry="2" />
<text  x="82.09" y="1311.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (45 samples, 0.01%)</title><rect x="843.4" y="885" width="0.1" height="15.0" fill="rgb(207,169,17)" rx="2" ry="2" />
<text  x="846.40" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_work (219 samples, 0.05%)</title><rect x="461.4" y="869" width="0.6" height="15.0" fill="rgb(247,182,19)" rx="2" ry="2" />
<text  x="464.39" y="879.5" ></text>
</g>
<g >
<title>__strlen_avx2 (184 samples, 0.04%)</title><rect x="789.0" y="1029" width="0.5" height="15.0" fill="rgb(210,112,30)" rx="2" ry="2" />
<text  x="792.03" y="1039.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (119 samples, 0.03%)</title><rect x="309.4" y="757" width="0.3" height="15.0" fill="rgb(233,130,29)" rx="2" ry="2" />
<text  x="312.38" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (277 samples, 0.06%)</title><rect x="1140.4" y="1045" width="0.7" height="15.0" fill="rgb(207,83,52)" rx="2" ry="2" />
<text  x="1143.37" y="1055.5" ></text>
</g>
<g >
<title>fput_many (151 samples, 0.03%)</title><rect x="825.9" y="949" width="0.4" height="15.0" fill="rgb(237,20,7)" rx="2" ry="2" />
<text  x="828.94" y="959.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (625 samples, 0.14%)</title><rect x="975.0" y="965" width="1.7" height="15.0" fill="rgb(221,197,42)" rx="2" ry="2" />
<text  x="978.03" y="975.5" ></text>
</g>
<g >
<title>std::function&lt;void  (590 samples, 0.13%)</title><rect x="608.7" y="869" width="1.5" height="15.0" fill="rgb(205,146,16)" rx="2" ry="2" />
<text  x="611.71" y="879.5" ></text>
</g>
<g >
<title>enqueue_task (709 samples, 0.16%)</title><rect x="736.4" y="757" width="1.8" height="15.0" fill="rgb(223,64,8)" rx="2" ry="2" />
<text  x="739.38" y="767.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (58 samples, 0.01%)</title><rect x="558.5" y="597" width="0.2" height="15.0" fill="rgb(210,81,38)" rx="2" ry="2" />
<text  x="561.52" y="607.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (197 samples, 0.04%)</title><rect x="644.2" y="821" width="0.6" height="15.0" fill="rgb(206,44,15)" rx="2" ry="2" />
<text  x="647.24" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (387 samples, 0.09%)</title><rect x="1109.3" y="917" width="1.0" height="15.0" fill="rgb(246,131,54)" rx="2" ry="2" />
<text  x="1112.31" y="927.5" ></text>
</g>
<g >
<title>mutex_unlock (42 samples, 0.01%)</title><rect x="1050.1" y="741" width="0.1" height="15.0" fill="rgb(215,60,36)" rx="2" ry="2" />
<text  x="1053.08" y="751.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (134 samples, 0.03%)</title><rect x="701.8" y="805" width="0.4" height="15.0" fill="rgb(243,150,35)" rx="2" ry="2" />
<text  x="704.83" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (548 samples, 0.12%)</title><rect x="588.4" y="789" width="1.4" height="15.0" fill="rgb(233,167,36)" rx="2" ry="2" />
<text  x="591.36" y="799.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (219 samples, 0.05%)</title><rect x="1023.6" y="853" width="0.6" height="15.0" fill="rgb(217,119,24)" rx="2" ry="2" />
<text  x="1026.59" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (81 samples, 0.02%)</title><rect x="296.8" y="725" width="0.2" height="15.0" fill="rgb(252,218,3)" rx="2" ry="2" />
<text  x="299.81" y="735.5" ></text>
</g>
<g >
<title>__fput (990 samples, 0.22%)</title><rect x="848.0" y="965" width="2.6" height="15.0" fill="rgb(228,141,22)" rx="2" ry="2" />
<text  x="851.03" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_erase (84 samples, 0.02%)</title><rect x="70.2" y="1301" width="0.2" height="15.0" fill="rgb(236,94,50)" rx="2" ry="2" />
<text  x="73.21" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (79 samples, 0.02%)</title><rect x="645.9" y="853" width="0.2" height="15.0" fill="rgb(236,107,10)" rx="2" ry="2" />
<text  x="648.94" y="863.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (251 samples, 0.06%)</title><rect x="1132.3" y="901" width="0.7" height="15.0" fill="rgb(222,104,20)" rx="2" ry="2" />
<text  x="1135.33" y="911.5" ></text>
</g>
<g >
<title>__libc_read (2,253 samples, 0.50%)</title><rect x="229.8" y="949" width="5.9" height="15.0" fill="rgb(252,194,19)" rx="2" ry="2" />
<text  x="232.81" y="959.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::end (44 samples, 0.01%)</title><rect x="136.3" y="1301" width="0.2" height="15.0" fill="rgb(213,20,5)" rx="2" ry="2" />
<text  x="139.35" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;::arg (75 samples, 0.02%)</title><rect x="1024.5" y="933" width="0.2" height="15.0" fill="rgb(246,165,20)" rx="2" ry="2" />
<text  x="1027.54" y="943.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (322 samples, 0.07%)</title><rect x="403.4" y="501" width="0.9" height="15.0" fill="rgb(240,109,47)" rx="2" ry="2" />
<text  x="406.42" y="511.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (70 samples, 0.02%)</title><rect x="65.3" y="1301" width="0.2" height="15.0" fill="rgb(243,206,47)" rx="2" ry="2" />
<text  x="68.30" y="1311.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (41 samples, 0.01%)</title><rect x="788.3" y="1013" width="0.1" height="15.0" fill="rgb(207,40,5)" rx="2" ry="2" />
<text  x="791.33" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (44 samples, 0.01%)</title><rect x="765.6" y="1045" width="0.2" height="15.0" fill="rgb(206,13,24)" rx="2" ry="2" />
<text  x="768.65" y="1055.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (264 samples, 0.06%)</title><rect x="1157.9" y="901" width="0.7" height="15.0" fill="rgb(222,12,38)" rx="2" ry="2" />
<text  x="1160.89" y="911.5" ></text>
</g>
<g >
<title>lockref_put_return (40 samples, 0.01%)</title><rect x="864.1" y="949" width="0.1" height="15.0" fill="rgb(238,131,38)" rx="2" ry="2" />
<text  x="867.12" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (112 samples, 0.02%)</title><rect x="927.2" y="837" width="0.3" height="15.0" fill="rgb(205,3,29)" rx="2" ry="2" />
<text  x="930.20" y="847.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,003 samples, 3.96%)</title><rect x="174.4" y="661" width="46.8" height="15.0" fill="rgb(225,207,21)" rx="2" ry="2" />
<text  x="177.45" y="671.5" >exit..</text>
</g>
<g >
<title>cpuacct_charge (48 samples, 0.01%)</title><rect x="1126.1" y="789" width="0.1" height="15.0" fill="rgb(234,125,42)" rx="2" ry="2" />
<text  x="1129.08" y="799.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (245 samples, 0.05%)</title><rect x="503.4" y="1013" width="0.7" height="15.0" fill="rgb(233,97,26)" rx="2" ry="2" />
<text  x="506.42" y="1023.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (74 samples, 0.02%)</title><rect x="694.5" y="853" width="0.2" height="15.0" fill="rgb(254,68,50)" rx="2" ry="2" />
<text  x="697.52" y="863.5" ></text>
</g>
<g >
<title>futex_wait_setup (89 samples, 0.02%)</title><rect x="1067.8" y="805" width="0.2" height="15.0" fill="rgb(233,187,44)" rx="2" ry="2" />
<text  x="1070.82" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (954 samples, 0.21%)</title><rect x="278.2" y="821" width="2.5" height="15.0" fill="rgb(242,51,49)" rx="2" ry="2" />
<text  x="281.17" y="831.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (43 samples, 0.01%)</title><rect x="25.4" y="1301" width="0.1" height="15.0" fill="rgb(250,159,22)" rx="2" ry="2" />
<text  x="28.37" y="1311.5" ></text>
</g>
<g >
<title>sched_clock_cpu (40 samples, 0.01%)</title><rect x="328.4" y="469" width="0.1" height="15.0" fill="rgb(242,27,22)" rx="2" ry="2" />
<text  x="331.44" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (52 samples, 0.01%)</title><rect x="585.9" y="821" width="0.1" height="15.0" fill="rgb(239,156,27)" rx="2" ry="2" />
<text  x="588.86" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (119 samples, 0.03%)</title><rect x="87.2" y="1301" width="0.3" height="15.0" fill="rgb(245,180,47)" rx="2" ry="2" />
<text  x="90.24" y="1311.5" ></text>
</g>
<g >
<title>[[ext4]] (177 samples, 0.04%)</title><rect x="854.6" y="965" width="0.4" height="15.0" fill="rgb(208,46,14)" rx="2" ry="2" />
<text  x="857.55" y="975.5" ></text>
</g>
<g >
<title>webserver::Channel::Channel (130 samples, 0.03%)</title><rect x="1142.3" y="917" width="0.3" height="15.0" fill="rgb(236,154,6)" rx="2" ry="2" />
<text  x="1145.30" y="927.5" ></text>
</g>
<g >
<title>check_preempt_curr (84 samples, 0.02%)</title><rect x="1099.6" y="309" width="0.3" height="15.0" fill="rgb(222,76,34)" rx="2" ry="2" />
<text  x="1102.65" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned int&gt; (61 samples, 0.01%)</title><rect x="619.4" y="885" width="0.2" height="15.0" fill="rgb(226,196,17)" rx="2" ry="2" />
<text  x="622.39" y="895.5" ></text>
</g>
<g >
<title>std::operator&amp; (113 samples, 0.02%)</title><rect x="129.7" y="1301" width="0.3" height="15.0" fill="rgb(236,136,1)" rx="2" ry="2" />
<text  x="132.70" y="1311.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (366 samples, 0.08%)</title><rect x="951.2" y="629" width="0.9" height="15.0" fill="rgb(237,31,26)" rx="2" ry="2" />
<text  x="954.19" y="639.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (53 samples, 0.01%)</title><rect x="12.1" y="1301" width="0.2" height="15.0" fill="rgb(228,142,11)" rx="2" ry="2" />
<text  x="15.12" y="1311.5" ></text>
</g>
<g >
<title>perf_output_copy (88 samples, 0.02%)</title><rect x="809.9" y="869" width="0.3" height="15.0" fill="rgb(211,34,0)" rx="2" ry="2" />
<text  x="812.95" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (411 samples, 0.09%)</title><rect x="1033.8" y="821" width="1.0" height="15.0" fill="rgb(238,35,48)" rx="2" ry="2" />
<text  x="1036.75" y="831.5" ></text>
</g>
<g >
<title>native_sched_clock (61 samples, 0.01%)</title><rect x="811.2" y="853" width="0.2" height="15.0" fill="rgb(233,3,46)" rx="2" ry="2" />
<text  x="814.25" y="863.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (58 samples, 0.01%)</title><rect x="651.2" y="837" width="0.1" height="15.0" fill="rgb(232,95,32)" rx="2" ry="2" />
<text  x="654.19" y="847.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (65 samples, 0.01%)</title><rect x="764.8" y="981" width="0.2" height="15.0" fill="rgb(211,136,22)" rx="2" ry="2" />
<text  x="767.79" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (47 samples, 0.01%)</title><rect x="148.8" y="1301" width="0.1" height="15.0" fill="rgb(220,70,18)" rx="2" ry="2" />
<text  x="151.79" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_write (8,812 samples, 1.94%)</title><rect x="314.5" y="677" width="22.9" height="15.0" fill="rgb(209,63,17)" rx="2" ry="2" />
<text  x="317.49" y="687.5" >_..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (81 samples, 0.02%)</title><rect x="631.9" y="1045" width="0.2" height="15.0" fill="rgb(245,155,54)" rx="2" ry="2" />
<text  x="634.88" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (298 samples, 0.07%)</title><rect x="982.2" y="1045" width="0.8" height="15.0" fill="rgb(250,22,17)" rx="2" ry="2" />
<text  x="985.22" y="1055.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (811 samples, 0.18%)</title><rect x="282.3" y="853" width="2.1" height="15.0" fill="rgb(248,224,1)" rx="2" ry="2" />
<text  x="285.28" y="863.5" ></text>
</g>
<g >
<title>__GI__IO_setb (47 samples, 0.01%)</title><rect x="612.8" y="837" width="0.1" height="15.0" fill="rgb(231,174,24)" rx="2" ry="2" />
<text  x="615.78" y="847.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (40 samples, 0.01%)</title><rect x="498.5" y="1077" width="0.1" height="15.0" fill="rgb(241,142,52)" rx="2" ry="2" />
<text  x="501.52" y="1087.5" ></text>
</g>
<g >
<title>ip_output (202 samples, 0.04%)</title><rect x="183.7" y="421" width="0.5" height="15.0" fill="rgb(206,54,21)" rx="2" ry="2" />
<text  x="186.68" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::operator (120 samples, 0.03%)</title><rect x="165.1" y="1109" width="0.3" height="15.0" fill="rgb(216,56,2)" rx="2" ry="2" />
<text  x="168.06" y="1119.5" ></text>
</g>
<g >
<title>enqueue_task_fair (355 samples, 0.08%)</title><rect x="1097.9" y="293" width="0.9" height="15.0" fill="rgb(253,42,41)" rx="2" ry="2" />
<text  x="1100.90" y="303.5" ></text>
</g>
<g >
<title>loopback_xmit (211 samples, 0.05%)</title><rect x="1091.8" y="613" width="0.6" height="15.0" fill="rgb(230,56,45)" rx="2" ry="2" />
<text  x="1094.85" y="623.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (59 samples, 0.01%)</title><rect x="297.4" y="597" width="0.1" height="15.0" fill="rgb(250,223,46)" rx="2" ry="2" />
<text  x="300.36" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::function&lt;void  (134 samples, 0.03%)</title><rect x="627.2" y="1045" width="0.3" height="15.0" fill="rgb(248,167,9)" rx="2" ry="2" />
<text  x="630.16" y="1055.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (45 samples, 0.01%)</title><rect x="347.6" y="757" width="0.1" height="15.0" fill="rgb(225,40,2)" rx="2" ry="2" />
<text  x="350.63" y="767.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,789 samples, 1.05%)</title><rect x="300.7" y="773" width="12.5" height="15.0" fill="rgb(247,170,29)" rx="2" ry="2" />
<text  x="303.71" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (99 samples, 0.02%)</title><rect x="700.1" y="917" width="0.3" height="15.0" fill="rgb(214,4,7)" rx="2" ry="2" />
<text  x="703.11" y="927.5" ></text>
</g>
<g >
<title>pty_write_room (65 samples, 0.01%)</title><rect x="667.3" y="725" width="0.2" height="15.0" fill="rgb(217,83,20)" rx="2" ry="2" />
<text  x="670.32" y="735.5" ></text>
</g>
<g >
<title>wake_up_q (1,521 samples, 0.33%)</title><rect x="681.0" y="805" width="4.0" height="15.0" fill="rgb(217,164,39)" rx="2" ry="2" />
<text  x="684.02" y="815.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (465 samples, 0.10%)</title><rect x="168.9" y="853" width="1.2" height="15.0" fill="rgb(233,154,21)" rx="2" ry="2" />
<text  x="171.85" y="863.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (42 samples, 0.01%)</title><rect x="525.7" y="645" width="0.1" height="15.0" fill="rgb(218,128,2)" rx="2" ry="2" />
<text  x="528.71" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt;, false&gt;::~_Head_base (89 samples, 0.02%)</title><rect x="1078.7" y="949" width="0.3" height="15.0" fill="rgb(233,162,1)" rx="2" ry="2" />
<text  x="1081.73" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (40 samples, 0.01%)</title><rect x="769.5" y="981" width="0.1" height="15.0" fill="rgb(219,36,47)" rx="2" ry="2" />
<text  x="772.52" y="991.5" ></text>
</g>
<g >
<title>do_futex (1,672 samples, 0.37%)</title><rect x="734.2" y="837" width="4.4" height="15.0" fill="rgb(215,131,4)" rx="2" ry="2" />
<text  x="737.22" y="847.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (71 samples, 0.02%)</title><rect x="61.6" y="1301" width="0.2" height="15.0" fill="rgb(222,7,24)" rx="2" ry="2" />
<text  x="64.57" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (56 samples, 0.01%)</title><rect x="1031.5" y="853" width="0.1" height="15.0" fill="rgb(228,189,32)" rx="2" ry="2" />
<text  x="1034.50" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (125 samples, 0.03%)</title><rect x="1025.8" y="917" width="0.3" height="15.0" fill="rgb(253,212,33)" rx="2" ry="2" />
<text  x="1028.76" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (160 samples, 0.04%)</title><rect x="359.4" y="821" width="0.4" height="15.0" fill="rgb(217,76,7)" rx="2" ry="2" />
<text  x="362.43" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (57 samples, 0.01%)</title><rect x="968.4" y="917" width="0.2" height="15.0" fill="rgb(220,188,31)" rx="2" ry="2" />
<text  x="971.43" y="927.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (122 samples, 0.03%)</title><rect x="156.3" y="1269" width="0.4" height="15.0" fill="rgb(223,96,53)" rx="2" ry="2" />
<text  x="159.34" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (124 samples, 0.03%)</title><rect x="740.5" y="997" width="0.3" height="15.0" fill="rgb(237,203,17)" rx="2" ry="2" />
<text  x="743.45" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (554 samples, 0.12%)</title><rect x="760.1" y="1045" width="1.4" height="15.0" fill="rgb(215,47,38)" rx="2" ry="2" />
<text  x="763.07" y="1055.5" ></text>
</g>
<g >
<title>__dynamic_cast (84 samples, 0.02%)</title><rect x="977.1" y="949" width="0.2" height="15.0" fill="rgb(233,151,8)" rx="2" ry="2" />
<text  x="980.07" y="959.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (1,901 samples, 0.42%)</title><rect x="262.9" y="869" width="5.0" height="15.0" fill="rgb(222,1,30)" rx="2" ry="2" />
<text  x="265.92" y="879.5" ></text>
</g>
<g >
<title>psi_flags_change (173 samples, 0.04%)</title><rect x="433.7" y="357" width="0.4" height="15.0" fill="rgb(229,124,31)" rx="2" ry="2" />
<text  x="436.69" y="367.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (40 samples, 0.01%)</title><rect x="757.8" y="965" width="0.1" height="15.0" fill="rgb(210,39,34)" rx="2" ry="2" />
<text  x="760.84" y="975.5" ></text>
</g>
<g >
<title>skb_free_head (41 samples, 0.01%)</title><rect x="245.3" y="773" width="0.1" height="15.0" fill="rgb(235,68,28)" rx="2" ry="2" />
<text  x="248.33" y="783.5" ></text>
</g>
<g >
<title>kfree (689 samples, 0.15%)</title><rect x="243.5" y="773" width="1.8" height="15.0" fill="rgb(209,136,47)" rx="2" ry="2" />
<text  x="246.54" y="783.5" ></text>
</g>
<g >
<title>enqueue_entity (254 samples, 0.06%)</title><rect x="573.7" y="581" width="0.7" height="15.0" fill="rgb(229,60,54)" rx="2" ry="2" />
<text  x="576.72" y="591.5" ></text>
</g>
<g >
<title>webserver::EventLoopThread::thread_func (331,008 samples, 72.88%)</title><rect x="158.7" y="1141" width="860.0" height="15.0" fill="rgb(227,20,52)" rx="2" ry="2" />
<text  x="161.66" y="1151.5" >webserver::EventLoopThread::thread_func</text>
</g>
<g >
<title>enqueue_task (159 samples, 0.04%)</title><rect x="713.5" y="629" width="0.4" height="15.0" fill="rgb(247,101,19)" rx="2" ry="2" />
<text  x="716.51" y="639.5" ></text>
</g>
<g >
<title>sock_def_wakeup (2,932 samples, 0.65%)</title><rect x="202.5" y="181" width="7.6" height="15.0" fill="rgb(223,86,1)" rx="2" ry="2" />
<text  x="205.49" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (81 samples, 0.02%)</title><rect x="1039.3" y="773" width="0.3" height="15.0" fill="rgb(245,219,15)" rx="2" ry="2" />
<text  x="1042.35" y="783.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (108 samples, 0.02%)</title><rect x="960.5" y="693" width="0.3" height="15.0" fill="rgb(221,29,48)" rx="2" ry="2" />
<text  x="963.50" y="703.5" ></text>
</g>
<g >
<title>operator new (85 samples, 0.02%)</title><rect x="606.2" y="853" width="0.2" height="15.0" fill="rgb(207,124,5)" rx="2" ry="2" />
<text  x="609.19" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (10,092 samples, 2.22%)</title><rect x="1079.5" y="1013" width="26.2" height="15.0" fill="rgb(229,37,43)" rx="2" ry="2" />
<text  x="1082.48" y="1023.5" >s..</text>
</g>
<g >
<title>__x64_sys_futex (1,176 samples, 0.26%)</title><rect x="343.8" y="677" width="3.1" height="15.0" fill="rgb(218,85,51)" rx="2" ry="2" />
<text  x="346.85" y="687.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (114 samples, 0.03%)</title><rect x="735.2" y="741" width="0.3" height="15.0" fill="rgb(235,56,9)" rx="2" ry="2" />
<text  x="738.22" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock (183 samples, 0.04%)</title><rect x="1121.8" y="853" width="0.5" height="15.0" fill="rgb(207,98,43)" rx="2" ry="2" />
<text  x="1124.79" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (233 samples, 0.05%)</title><rect x="500.7" y="1061" width="0.6" height="15.0" fill="rgb(215,58,48)" rx="2" ry="2" />
<text  x="503.74" y="1071.5" ></text>
</g>
<g >
<title>remove_wait_queue (50 samples, 0.01%)</title><rect x="727.0" y="725" width="0.1" height="15.0" fill="rgb(213,172,45)" rx="2" ry="2" />
<text  x="729.99" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_S_max_size (94 samples, 0.02%)</title><rect x="509.5" y="1061" width="0.2" height="15.0" fill="rgb(251,163,11)" rx="2" ry="2" />
<text  x="512.50" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (602 samples, 0.13%)</title><rect x="971.4" y="1029" width="1.6" height="15.0" fill="rgb(211,109,40)" rx="2" ry="2" />
<text  x="974.40" y="1039.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (237 samples, 0.05%)</title><rect x="978.4" y="997" width="0.6" height="15.0" fill="rgb(232,6,32)" rx="2" ry="2" />
<text  x="981.42" y="1007.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (66 samples, 0.01%)</title><rect x="654.2" y="725" width="0.2" height="15.0" fill="rgb(253,63,45)" rx="2" ry="2" />
<text  x="657.24" y="735.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (43 samples, 0.01%)</title><rect x="1058.1" y="629" width="0.1" height="15.0" fill="rgb(246,36,5)" rx="2" ry="2" />
<text  x="1061.13" y="639.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1,085 samples, 0.24%)</title><rect x="247.0" y="789" width="2.8" height="15.0" fill="rgb(219,112,14)" rx="2" ry="2" />
<text  x="250.01" y="799.5" ></text>
</g>
<g >
<title>tcp_data_queue (465 samples, 0.10%)</title><rect x="371.9" y="757" width="1.3" height="15.0" fill="rgb(254,228,26)" rx="2" ry="2" />
<text  x="374.95" y="767.5" ></text>
</g>
<g >
<title>__shutdown (2,020 samples, 0.44%)</title><rect x="750.9" y="1029" width="5.2" height="15.0" fill="rgb(212,79,14)" rx="2" ry="2" />
<text  x="753.85" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (71 samples, 0.02%)</title><rect x="775.0" y="901" width="0.2" height="15.0" fill="rgb(224,196,41)" rx="2" ry="2" />
<text  x="778.02" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (613 samples, 0.13%)</title><rect x="763.4" y="1013" width="1.6" height="15.0" fill="rgb(227,91,5)" rx="2" ry="2" />
<text  x="766.42" y="1023.5" ></text>
</g>
<g >
<title>[[nf_defrag_ipv4]] (79 samples, 0.02%)</title><rect x="443.4" y="565" width="0.2" height="15.0" fill="rgb(209,226,49)" rx="2" ry="2" />
<text  x="446.44" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,370 samples, 0.52%)</title><rect x="285.3" y="869" width="6.2" height="15.0" fill="rgb(243,48,34)" rx="2" ry="2" />
<text  x="288.30" y="879.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,430 samples, 0.54%)</title><rect x="679.7" y="949" width="6.4" height="15.0" fill="rgb(239,51,47)" rx="2" ry="2" />
<text  x="682.75" y="959.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (2,053 samples, 0.45%)</title><rect x="745.2" y="997" width="5.4" height="15.0" fill="rgb(239,162,31)" rx="2" ry="2" />
<text  x="748.23" y="1007.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1,408 samples, 0.31%)</title><rect x="974.7" y="997" width="3.7" height="15.0" fill="rgb(245,24,35)" rx="2" ry="2" />
<text  x="977.73" y="1007.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (156 samples, 0.03%)</title><rect x="851.5" y="1045" width="0.4" height="15.0" fill="rgb(242,129,14)" rx="2" ry="2" />
<text  x="854.46" y="1055.5" ></text>
</g>
<g >
<title>psi_group_change (173 samples, 0.04%)</title><rect x="966.8" y="693" width="0.5" height="15.0" fill="rgb(223,37,18)" rx="2" ry="2" />
<text  x="969.82" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::reserve (1,395 samples, 0.31%)</title><rect x="506.2" y="1093" width="3.6" height="15.0" fill="rgb(228,156,49)" rx="2" ry="2" />
<text  x="509.21" y="1103.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (68 samples, 0.01%)</title><rect x="11.0" y="1301" width="0.2" height="15.0" fill="rgb(246,190,24)" rx="2" ry="2" />
<text  x="13.97" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (40 samples, 0.01%)</title><rect x="770.4" y="949" width="0.1" height="15.0" fill="rgb(224,190,45)" rx="2" ry="2" />
<text  x="773.43" y="959.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt;::deallocate (356 samples, 0.08%)</title><rect x="283.2" y="789" width="0.9" height="15.0" fill="rgb(229,213,14)" rx="2" ry="2" />
<text  x="286.17" y="799.5" ></text>
</g>
<g >
<title>__sock_release (15,071 samples, 3.32%)</title><rect x="181.9" y="597" width="39.1" height="15.0" fill="rgb(215,61,7)" rx="2" ry="2" />
<text  x="184.88" y="607.5" >__s..</text>
</g>
<g >
<title>__vsprintf_internal (1,588 samples, 0.35%)</title><rect x="353.0" y="821" width="4.2" height="15.0" fill="rgb(210,50,27)" rx="2" ry="2" />
<text  x="356.05" y="831.5" ></text>
</g>
<g >
<title>resched_curr (56 samples, 0.01%)</title><rect x="332.0" y="437" width="0.2" height="15.0" fill="rgb(215,202,20)" rx="2" ry="2" />
<text  x="335.05" y="447.5" ></text>
</g>
<g >
<title>__fget_light (66 samples, 0.01%)</title><rect x="278.6" y="773" width="0.1" height="15.0" fill="rgb(217,148,2)" rx="2" ry="2" />
<text  x="281.57" y="783.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (82 samples, 0.02%)</title><rect x="660.0" y="645" width="0.2" height="15.0" fill="rgb(214,24,20)" rx="2" ry="2" />
<text  x="662.98" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (210 samples, 0.05%)</title><rect x="272.3" y="757" width="0.5" height="15.0" fill="rgb(212,212,5)" rx="2" ry="2" />
<text  x="275.26" y="767.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (282 samples, 0.06%)</title><rect x="1057.5" y="645" width="0.7" height="15.0" fill="rgb(205,55,11)" rx="2" ry="2" />
<text  x="1060.51" y="655.5" ></text>
</g>
<g >
<title>reweight_entity (54 samples, 0.01%)</title><rect x="207.0" y="69" width="0.1" height="15.0" fill="rgb(246,118,38)" rx="2" ry="2" />
<text  x="210.01" y="79.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (147 samples, 0.03%)</title><rect x="821.8" y="1045" width="0.4" height="15.0" fill="rgb(231,186,47)" rx="2" ry="2" />
<text  x="824.78" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, false, true&gt;::_Node_iterator (41 samples, 0.01%)</title><rect x="99.6" y="1301" width="0.1" height="15.0" fill="rgb(251,67,49)" rx="2" ry="2" />
<text  x="102.56" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (196 samples, 0.04%)</title><rect x="699.1" y="869" width="0.5" height="15.0" fill="rgb(207,224,28)" rx="2" ry="2" />
<text  x="702.08" y="879.5" ></text>
</g>
<g >
<title>resched_curr (53 samples, 0.01%)</title><rect x="556.3" y="469" width="0.1" height="15.0" fill="rgb(219,60,19)" rx="2" ry="2" />
<text  x="559.28" y="479.5" ></text>
</g>
<g >
<title>__legitimize_mnt (48 samples, 0.01%)</title><rect x="881.2" y="901" width="0.1" height="15.0" fill="rgb(229,13,36)" rx="2" ry="2" />
<text  x="884.17" y="911.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (88 samples, 0.02%)</title><rect x="297.3" y="661" width="0.2" height="15.0" fill="rgb(216,175,22)" rx="2" ry="2" />
<text  x="300.30" y="671.5" ></text>
</g>
<g >
<title>set_task_cpu (45 samples, 0.01%)</title><rect x="682.7" y="773" width="0.1" height="15.0" fill="rgb(207,162,37)" rx="2" ry="2" />
<text  x="685.68" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (83 samples, 0.02%)</title><rect x="277.6" y="837" width="0.2" height="15.0" fill="rgb(228,91,52)" rx="2" ry="2" />
<text  x="280.62" y="847.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (143 samples, 0.03%)</title><rect x="276.5" y="885" width="0.4" height="15.0" fill="rgb(243,146,35)" rx="2" ry="2" />
<text  x="279.51" y="895.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;webserver::HttpHandler&gt;::lock (191 samples, 0.04%)</title><rect x="276.4" y="933" width="0.5" height="15.0" fill="rgb(235,156,1)" rx="2" ry="2" />
<text  x="279.38" y="943.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40 samples, 0.01%)</title><rect x="931.7" y="901" width="0.1" height="15.0" fill="rgb(210,91,10)" rx="2" ry="2" />
<text  x="934.74" y="911.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (996 samples, 0.22%)</title><rect x="864.5" y="965" width="2.6" height="15.0" fill="rgb(236,180,53)" rx="2" ry="2" />
<text  x="867.47" y="975.5" ></text>
</g>
<g >
<title>schedule (1,242 samples, 0.27%)</title><rect x="1064.6" y="789" width="3.2" height="15.0" fill="rgb(207,106,50)" rx="2" ry="2" />
<text  x="1067.59" y="799.5" ></text>
</g>
<g >
<title>alloc_empty_file (837 samples, 0.18%)</title><rect x="1161.6" y="933" width="2.2" height="15.0" fill="rgb(224,24,9)" rx="2" ry="2" />
<text  x="1164.58" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (349 samples, 0.08%)</title><rect x="932.3" y="885" width="0.9" height="15.0" fill="rgb(224,71,30)" rx="2" ry="2" />
<text  x="935.34" y="895.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (258 samples, 0.06%)</title><rect x="517.5" y="725" width="0.7" height="15.0" fill="rgb(238,54,34)" rx="2" ry="2" />
<text  x="520.53" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (93 samples, 0.02%)</title><rect x="791.9" y="1045" width="0.3" height="15.0" fill="rgb(251,87,29)" rx="2" ry="2" />
<text  x="794.94" y="1055.5" ></text>
</g>
<g >
<title>set_next_entity (100 samples, 0.02%)</title><rect x="1133.8" y="885" width="0.3" height="15.0" fill="rgb(227,193,8)" rx="2" ry="2" />
<text  x="1136.84" y="895.5" ></text>
</g>
<g >
<title>pty_write_room (87 samples, 0.02%)</title><rect x="333.4" y="549" width="0.3" height="15.0" fill="rgb(234,128,36)" rx="2" ry="2" />
<text  x="336.45" y="559.5" ></text>
</g>
<g >
<title>ksize (48 samples, 0.01%)</title><rect x="219.6" y="501" width="0.1" height="15.0" fill="rgb(239,208,36)" rx="2" ry="2" />
<text  x="222.55" y="511.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (967 samples, 0.21%)</title><rect x="640.7" y="901" width="2.5" height="15.0" fill="rgb(227,175,33)" rx="2" ry="2" />
<text  x="643.70" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::operator (99 samples, 0.02%)</title><rect x="134.9" y="1301" width="0.2" height="15.0" fill="rgb(234,28,43)" rx="2" ry="2" />
<text  x="137.88" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (82 samples, 0.02%)</title><rect x="700.2" y="885" width="0.2" height="15.0" fill="rgb(231,117,20)" rx="2" ry="2" />
<text  x="703.15" y="895.5" ></text>
</g>
<g >
<title>webserver::Channel::get_triggered_events (124 samples, 0.03%)</title><rect x="464.0" y="1109" width="0.3" height="15.0" fill="rgb(208,96,0)" rx="2" ry="2" />
<text  x="466.98" y="1119.5" ></text>
</g>
<g >
<title>tcp_poll (972 samples, 0.21%)</title><rect x="595.2" y="725" width="2.5" height="15.0" fill="rgb(246,60,53)" rx="2" ry="2" />
<text  x="598.16" y="735.5" ></text>
</g>
<g >
<title>new_do_write (8,907 samples, 1.96%)</title><rect x="314.2" y="709" width="23.2" height="15.0" fill="rgb(221,51,53)" rx="2" ry="2" />
<text  x="317.25" y="719.5" >n..</text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (91 samples, 0.02%)</title><rect x="1038.2" y="901" width="0.2" height="15.0" fill="rgb(223,203,24)" rx="2" ry="2" />
<text  x="1041.15" y="911.5" ></text>
</g>
<g >
<title>enqueue_task_fair (722 samples, 0.16%)</title><rect x="205.5" y="85" width="1.9" height="15.0" fill="rgb(254,185,29)" rx="2" ry="2" />
<text  x="208.54" y="95.5" ></text>
</g>
<g >
<title>tcp_ack (108 samples, 0.02%)</title><rect x="1095.4" y="421" width="0.3" height="15.0" fill="rgb(222,179,54)" rx="2" ry="2" />
<text  x="1098.43" y="431.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1,110 samples, 0.24%)</title><rect x="730.9" y="885" width="2.9" height="15.0" fill="rgb(205,185,22)" rx="2" ry="2" />
<text  x="733.88" y="895.5" ></text>
</g>
<g >
<title>operator new (125 samples, 0.03%)</title><rect x="908.0" y="933" width="0.3" height="15.0" fill="rgb(218,92,0)" rx="2" ry="2" />
<text  x="910.96" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (126 samples, 0.03%)</title><rect x="140.9" y="1269" width="0.3" height="15.0" fill="rgb(226,109,37)" rx="2" ry="2" />
<text  x="143.86" y="1279.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (470 samples, 0.10%)</title><rect x="1142.7" y="965" width="1.2" height="15.0" fill="rgb(222,70,40)" rx="2" ry="2" />
<text  x="1145.66" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (250 samples, 0.06%)</title><rect x="617.1" y="885" width="0.7" height="15.0" fill="rgb(228,216,3)" rx="2" ry="2" />
<text  x="620.11" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (53 samples, 0.01%)</title><rect x="256.5" y="853" width="0.1" height="15.0" fill="rgb(205,187,43)" rx="2" ry="2" />
<text  x="259.48" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (42 samples, 0.01%)</title><rect x="1140.6" y="1029" width="0.1" height="15.0" fill="rgb(250,25,25)" rx="2" ry="2" />
<text  x="1143.59" y="1039.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (127 samples, 0.03%)</title><rect x="350.1" y="821" width="0.3" height="15.0" fill="rgb(209,120,6)" rx="2" ry="2" />
<text  x="353.07" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::operator (44 samples, 0.01%)</title><rect x="261.4" y="901" width="0.1" height="15.0" fill="rgb(236,77,51)" rx="2" ry="2" />
<text  x="264.40" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (151 samples, 0.03%)</title><rect x="1179.7" y="1301" width="0.4" height="15.0" fill="rgb(254,103,40)" rx="2" ry="2" />
<text  x="1182.68" y="1311.5" ></text>
</g>
<g >
<title>get_mmap_base (40 samples, 0.01%)</title><rect x="798.1" y="933" width="0.1" height="15.0" fill="rgb(237,210,37)" rx="2" ry="2" />
<text  x="801.15" y="943.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (42,441 samples, 9.35%)</title><rect x="511.9" y="1029" width="110.3" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="514.89" y="1039.5" >std::_Bind&lt;vo..</text>
</g>
<g >
<title>uprobe_mmap (97 samples, 0.02%)</title><rect x="813.7" y="949" width="0.2" height="15.0" fill="rgb(206,34,7)" rx="2" ry="2" />
<text  x="816.66" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (71 samples, 0.02%)</title><rect x="930.3" y="805" width="0.2" height="15.0" fill="rgb(223,61,38)" rx="2" ry="2" />
<text  x="933.34" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (51 samples, 0.01%)</title><rect x="1142.5" y="901" width="0.1" height="15.0" fill="rgb(238,129,31)" rx="2" ry="2" />
<text  x="1145.50" y="911.5" ></text>
</g>
<g >
<title>[[nf_nat]] (58 samples, 0.01%)</title><rect x="441.4" y="533" width="0.2" height="15.0" fill="rgb(231,152,51)" rx="2" ry="2" />
<text  x="444.40" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (45 samples, 0.01%)</title><rect x="281.7" y="853" width="0.1" height="15.0" fill="rgb(248,161,2)" rx="2" ry="2" />
<text  x="284.71" y="863.5" ></text>
</g>
<g >
<title>timerqueue_add (1,152 samples, 0.25%)</title><rect x="476.5" y="965" width="3.0" height="15.0" fill="rgb(252,211,34)" rx="2" ry="2" />
<text  x="479.49" y="975.5" ></text>
</g>
<g >
<title>webserver::Channel::~Channel (227 samples, 0.05%)</title><rect x="1109.7" y="837" width="0.6" height="15.0" fill="rgb(237,11,51)" rx="2" ry="2" />
<text  x="1112.72" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (86 samples, 0.02%)</title><rect x="1004.2" y="933" width="0.2" height="15.0" fill="rgb(231,220,47)" rx="2" ry="2" />
<text  x="1007.17" y="943.5" ></text>
</g>
<g >
<title>vm_area_alloc (656 samples, 0.14%)</title><rect x="813.9" y="949" width="1.7" height="15.0" fill="rgb(209,179,23)" rx="2" ry="2" />
<text  x="816.91" y="959.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt (153 samples, 0.03%)</title><rect x="370.6" y="741" width="0.4" height="15.0" fill="rgb(216,158,42)" rx="2" ry="2" />
<text  x="373.57" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (39 samples, 0.01%)</title><rect x="38.0" y="1301" width="0.1" height="15.0" fill="rgb(235,166,25)" rx="2" ry="2" />
<text  x="40.99" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (844 samples, 0.19%)</title><rect x="695.4" y="917" width="2.2" height="15.0" fill="rgb(209,110,39)" rx="2" ry="2" />
<text  x="698.44" y="927.5" ></text>
</g>
<g >
<title>std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::pair (166 samples, 0.04%)</title><rect x="582.7" y="821" width="0.5" height="15.0" fill="rgb(241,214,31)" rx="2" ry="2" />
<text  x="585.73" y="831.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (676 samples, 0.15%)</title><rect x="527.5" y="709" width="1.8" height="15.0" fill="rgb(247,132,14)" rx="2" ry="2" />
<text  x="530.52" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,418 samples, 1.85%)</title><rect x="315.1" y="661" width="21.8" height="15.0" fill="rgb(228,108,2)" rx="2" ry="2" />
<text  x="318.07" y="671.5" >e..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::function&lt;void  (257 samples, 0.06%)</title><rect x="1113.1" y="1029" width="0.7" height="15.0" fill="rgb(244,185,40)" rx="2" ry="2" />
<text  x="1116.09" y="1039.5" ></text>
</g>
<g >
<title>__virt_addr_valid (59 samples, 0.01%)</title><rect x="249.7" y="741" width="0.1" height="15.0" fill="rgb(239,91,4)" rx="2" ry="2" />
<text  x="252.66" y="751.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (197 samples, 0.04%)</title><rect x="843.2" y="901" width="0.5" height="15.0" fill="rgb(224,10,43)" rx="2" ry="2" />
<text  x="846.18" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (115 samples, 0.03%)</title><rect x="358.2" y="773" width="0.3" height="15.0" fill="rgb(220,105,18)" rx="2" ry="2" />
<text  x="361.16" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (84 samples, 0.02%)</title><rect x="482.3" y="933" width="0.2" height="15.0" fill="rgb(223,160,29)" rx="2" ry="2" />
<text  x="485.26" y="943.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (171 samples, 0.04%)</title><rect x="649.1" y="885" width="0.5" height="15.0" fill="rgb(245,148,7)" rx="2" ry="2" />
<text  x="652.14" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_work (133 samples, 0.03%)</title><rect x="669.9" y="789" width="0.4" height="15.0" fill="rgb(205,9,47)" rx="2" ry="2" />
<text  x="672.92" y="799.5" ></text>
</g>
<g >
<title>destroy_inode (558 samples, 0.12%)</title><rect x="176.4" y="597" width="1.5" height="15.0" fill="rgb(250,11,10)" rx="2" ry="2" />
<text  x="179.41" y="607.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (216 samples, 0.05%)</title><rect x="436.4" y="373" width="0.5" height="15.0" fill="rgb(233,158,39)" rx="2" ry="2" />
<text  x="439.35" y="383.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (934 samples, 0.21%)</title><rect x="472.2" y="1013" width="2.4" height="15.0" fill="rgb(207,68,54)" rx="2" ry="2" />
<text  x="475.18" y="1023.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,303 samples, 0.51%)</title><rect x="1063.3" y="949" width="6.0" height="15.0" fill="rgb(233,227,7)" rx="2" ry="2" />
<text  x="1066.27" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (363 samples, 0.08%)</title><rect x="587.4" y="805" width="0.9" height="15.0" fill="rgb(245,64,44)" rx="2" ry="2" />
<text  x="590.37" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (211 samples, 0.05%)</title><rect x="505.6" y="1045" width="0.6" height="15.0" fill="rgb(212,131,45)" rx="2" ry="2" />
<text  x="508.61" y="1055.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (195 samples, 0.04%)</title><rect x="1076.2" y="1077" width="0.5" height="15.0" fill="rgb(249,71,45)" rx="2" ry="2" />
<text  x="1079.22" y="1087.5" ></text>
</g>
<g >
<title>epoll_wait@plt (114 samples, 0.03%)</title><rect x="499.7" y="1093" width="0.3" height="15.0" fill="rgb(222,23,29)" rx="2" ry="2" />
<text  x="502.69" y="1103.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,693 samples, 0.37%)</title><rect x="571.6" y="645" width="4.4" height="15.0" fill="rgb(251,170,9)" rx="2" ry="2" />
<text  x="574.65" y="655.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (88 samples, 0.02%)</title><rect x="788.3" y="1029" width="0.2" height="15.0" fill="rgb(217,171,17)" rx="2" ry="2" />
<text  x="791.26" y="1039.5" ></text>
</g>
<g >
<title>[[ip_tables]] (92 samples, 0.02%)</title><rect x="211.3" y="277" width="0.2" height="15.0" fill="rgb(211,161,26)" rx="2" ry="2" />
<text  x="214.25" y="287.5" ></text>
</g>
<g >
<title>_copy_from_user (75 samples, 0.02%)</title><rect x="1130.9" y="965" width="0.1" height="15.0" fill="rgb(223,67,1)" rx="2" ry="2" />
<text  x="1133.85" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::function&lt;void  (250 samples, 0.06%)</title><rect x="1113.1" y="1013" width="0.7" height="15.0" fill="rgb(208,59,44)" rx="2" ry="2" />
<text  x="1116.10" y="1023.5" ></text>
</g>
<g >
<title>tty_paranoia_check (47 samples, 0.01%)</title><rect x="558.7" y="597" width="0.1" height="15.0" fill="rgb(241,48,6)" rx="2" ry="2" />
<text  x="561.67" y="607.5" ></text>
</g>
<g >
<title>available_idle_cpu (52 samples, 0.01%)</title><rect x="1097.5" y="309" width="0.1" height="15.0" fill="rgb(246,149,41)" rx="2" ry="2" />
<text  x="1100.51" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (55 samples, 0.01%)</title><rect x="694.6" y="805" width="0.1" height="15.0" fill="rgb(232,104,11)" rx="2" ry="2" />
<text  x="697.56" y="815.5" ></text>
</g>
<g >
<title>cpumask_next (58 samples, 0.01%)</title><rect x="1054.6" y="661" width="0.1" height="15.0" fill="rgb(236,175,38)" rx="2" ry="2" />
<text  x="1057.58" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (61 samples, 0.01%)</title><rect x="1179.0" y="1029" width="0.2" height="15.0" fill="rgb(235,216,37)" rx="2" ry="2" />
<text  x="1182.01" y="1039.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::operator (57 samples, 0.01%)</title><rect x="1004.6" y="965" width="0.1" height="15.0" fill="rgb(230,22,27)" rx="2" ry="2" />
<text  x="1007.55" y="975.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.01%)</title><rect x="17.4" y="1301" width="0.2" height="15.0" fill="rgb(236,186,28)" rx="2" ry="2" />
<text  x="20.43" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (220 samples, 0.05%)</title><rect x="908.4" y="933" width="0.6" height="15.0" fill="rgb(228,118,43)" rx="2" ry="2" />
<text  x="911.44" y="943.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (159 samples, 0.04%)</title><rect x="133.5" y="1301" width="0.4" height="15.0" fill="rgb(212,24,6)" rx="2" ry="2" />
<text  x="136.47" y="1311.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (39 samples, 0.01%)</title><rect x="1100.2" y="405" width="0.1" height="15.0" fill="rgb(205,26,33)" rx="2" ry="2" />
<text  x="1103.16" y="415.5" ></text>
</g>
<g >
<title>psi_task_switch (795 samples, 0.18%)</title><rect x="487.2" y="965" width="2.1" height="15.0" fill="rgb(210,155,21)" rx="2" ry="2" />
<text  x="490.24" y="975.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (172 samples, 0.04%)</title><rect x="176.8" y="565" width="0.4" height="15.0" fill="rgb(235,78,34)" rx="2" ry="2" />
<text  x="179.78" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~pair (71 samples, 0.02%)</title><rect x="130.8" y="1301" width="0.2" height="15.0" fill="rgb(211,75,31)" rx="2" ry="2" />
<text  x="133.82" y="1311.5" ></text>
</g>
<g >
<title>sock_poll (593 samples, 0.13%)</title><rect x="473.1" y="997" width="1.5" height="15.0" fill="rgb(248,17,33)" rx="2" ry="2" />
<text  x="476.06" y="1007.5" ></text>
</g>
<g >
<title>kfree_skbmem (55 samples, 0.01%)</title><rect x="369.8" y="741" width="0.2" height="15.0" fill="rgb(234,134,46)" rx="2" ry="2" />
<text  x="372.81" y="751.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,496 samples, 0.33%)</title><rect x="343.6" y="725" width="3.8" height="15.0" fill="rgb(224,80,20)" rx="2" ry="2" />
<text  x="346.55" y="735.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (117 samples, 0.03%)</title><rect x="118.9" y="1301" width="0.3" height="15.0" fill="rgb(242,26,53)" rx="2" ry="2" />
<text  x="121.92" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (47 samples, 0.01%)</title><rect x="981.6" y="917" width="0.2" height="15.0" fill="rgb(222,204,37)" rx="2" ry="2" />
<text  x="984.64" y="927.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (191 samples, 0.04%)</title><rect x="1121.8" y="869" width="0.5" height="15.0" fill="rgb(237,219,24)" rx="2" ry="2" />
<text  x="1124.77" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (445 samples, 0.10%)</title><rect x="1176.4" y="1061" width="1.1" height="15.0" fill="rgb(222,171,11)" rx="2" ry="2" />
<text  x="1179.38" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (109 samples, 0.02%)</title><rect x="37.5" y="1301" width="0.3" height="15.0" fill="rgb(236,115,53)" rx="2" ry="2" />
<text  x="40.50" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (92 samples, 0.02%)</title><rect x="90.5" y="1301" width="0.2" height="15.0" fill="rgb(249,210,24)" rx="2" ry="2" />
<text  x="93.47" y="1311.5" ></text>
</g>
<g >
<title>__memchr_avx2 (121 samples, 0.03%)</title><rect x="516.5" y="805" width="0.3" height="15.0" fill="rgb(225,62,17)" rx="2" ry="2" />
<text  x="519.48" y="815.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (129 samples, 0.03%)</title><rect x="569.3" y="677" width="0.4" height="15.0" fill="rgb(238,118,39)" rx="2" ry="2" />
<text  x="572.32" y="687.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (88 samples, 0.02%)</title><rect x="945.2" y="613" width="0.2" height="15.0" fill="rgb(217,78,17)" rx="2" ry="2" />
<text  x="948.15" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (115 samples, 0.03%)</title><rect x="656.5" y="693" width="0.3" height="15.0" fill="rgb(227,48,43)" rx="2" ry="2" />
<text  x="659.53" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (912 samples, 0.20%)</title><rect x="527.0" y="757" width="2.3" height="15.0" fill="rgb(243,167,48)" rx="2" ry="2" />
<text  x="529.96" y="767.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;::tuple (64 samples, 0.01%)</title><rect x="986.3" y="949" width="0.2" height="15.0" fill="rgb(212,19,41)" rx="2" ry="2" />
<text  x="989.30" y="959.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (82 samples, 0.02%)</title><rect x="657.2" y="693" width="0.2" height="15.0" fill="rgb(215,8,3)" rx="2" ry="2" />
<text  x="660.17" y="703.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (116 samples, 0.03%)</title><rect x="183.8" y="229" width="0.3" height="15.0" fill="rgb(236,48,17)" rx="2" ry="2" />
<text  x="186.82" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (41 samples, 0.01%)</title><rect x="653.6" y="725" width="0.1" height="15.0" fill="rgb(244,209,20)" rx="2" ry="2" />
<text  x="656.60" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (107 samples, 0.02%)</title><rect x="701.9" y="773" width="0.3" height="15.0" fill="rgb(219,59,51)" rx="2" ry="2" />
<text  x="704.88" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (321 samples, 0.07%)</title><rect x="1105.8" y="1077" width="0.8" height="15.0" fill="rgb(206,106,27)" rx="2" ry="2" />
<text  x="1108.79" y="1087.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (210 samples, 0.05%)</title><rect x="520.0" y="821" width="0.5" height="15.0" fill="rgb(247,221,7)" rx="2" ry="2" />
<text  x="522.97" y="831.5" ></text>
</g>
<g >
<title>__fsnotify_parent (49 samples, 0.01%)</title><rect x="705.7" y="773" width="0.1" height="15.0" fill="rgb(221,147,4)" rx="2" ry="2" />
<text  x="708.68" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (105 samples, 0.02%)</title><rect x="1003.8" y="933" width="0.3" height="15.0" fill="rgb(240,14,0)" rx="2" ry="2" />
<text  x="1006.78" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (166 samples, 0.04%)</title><rect x="768.4" y="1013" width="0.5" height="15.0" fill="rgb(209,137,7)" rx="2" ry="2" />
<text  x="771.44" y="1023.5" ></text>
</g>
<g >
<title>__napi_poll (6,712 samples, 1.48%)</title><rect x="195.4" y="373" width="17.5" height="15.0" fill="rgb(225,86,11)" rx="2" ry="2" />
<text  x="198.43" y="383.5" ></text>
</g>
<g >
<title>__build_skb_around (57 samples, 0.01%)</title><rect x="406.7" y="453" width="0.1" height="15.0" fill="rgb(234,19,20)" rx="2" ry="2" />
<text  x="409.69" y="463.5" ></text>
</g>
<g >
<title>memset_erms (249 samples, 0.05%)</title><rect x="865.3" y="933" width="0.7" height="15.0" fill="rgb(217,116,33)" rx="2" ry="2" />
<text  x="868.32" y="943.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (99 samples, 0.02%)</title><rect x="1160.9" y="901" width="0.2" height="15.0" fill="rgb(227,33,46)" rx="2" ry="2" />
<text  x="1163.89" y="911.5" ></text>
</g>
<g >
<title>enqueue_task_fair (607 samples, 0.13%)</title><rect x="663.1" y="629" width="1.6" height="15.0" fill="rgb(236,122,43)" rx="2" ry="2" />
<text  x="666.08" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,025 samples, 0.23%)</title><rect x="762.9" y="1045" width="2.6" height="15.0" fill="rgb(223,61,43)" rx="2" ry="2" />
<text  x="765.86" y="1055.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (48 samples, 0.01%)</title><rect x="1082.4" y="757" width="0.2" height="15.0" fill="rgb(216,192,32)" rx="2" ry="2" />
<text  x="1085.45" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (154 samples, 0.03%)</title><rect x="1030.1" y="949" width="0.4" height="15.0" fill="rgb(221,102,14)" rx="2" ry="2" />
<text  x="1033.08" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (109 samples, 0.02%)</title><rect x="51.4" y="1301" width="0.3" height="15.0" fill="rgb(207,133,40)" rx="2" ry="2" />
<text  x="54.41" y="1311.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char*&gt; (93 samples, 0.02%)</title><rect x="104.1" y="1301" width="0.2" height="15.0" fill="rgb(232,148,17)" rx="2" ry="2" />
<text  x="107.05" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (90 samples, 0.02%)</title><rect x="989.7" y="997" width="0.2" height="15.0" fill="rgb(210,188,12)" rx="2" ry="2" />
<text  x="992.67" y="1007.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (2,429 samples, 0.53%)</title><rect x="957.5" y="885" width="6.3" height="15.0" fill="rgb(252,76,16)" rx="2" ry="2" />
<text  x="960.50" y="895.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (447 samples, 0.10%)</title><rect x="599.9" y="741" width="1.1" height="15.0" fill="rgb(232,164,40)" rx="2" ry="2" />
<text  x="602.87" y="751.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (109 samples, 0.02%)</title><rect x="267.2" y="821" width="0.3" height="15.0" fill="rgb(232,163,18)" rx="2" ry="2" />
<text  x="270.17" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (39 samples, 0.01%)</title><rect x="359.3" y="821" width="0.1" height="15.0" fill="rgb(212,12,7)" rx="2" ry="2" />
<text  x="362.33" y="831.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (94 samples, 0.02%)</title><rect x="754.1" y="949" width="0.3" height="15.0" fill="rgb(211,223,13)" rx="2" ry="2" />
<text  x="757.12" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (89 samples, 0.02%)</title><rect x="149.7" y="1253" width="0.2" height="15.0" fill="rgb(243,223,23)" rx="2" ry="2" />
<text  x="152.66" y="1263.5" ></text>
</g>
<g >
<title>spdlog::logger::should_flush_ (42 samples, 0.01%)</title><rect x="521.2" y="821" width="0.1" height="15.0" fill="rgb(224,191,52)" rx="2" ry="2" />
<text  x="524.22" y="831.5" ></text>
</g>
<g >
<title>webserver::EventLoopThreadPool::get_next_loop (59 samples, 0.01%)</title><rect x="33.4" y="1301" width="0.2" height="15.0" fill="rgb(215,161,11)" rx="2" ry="2" />
<text  x="36.41" y="1311.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (410 samples, 0.09%)</title><rect x="453.6" y="773" width="1.0" height="15.0" fill="rgb(220,26,32)" rx="2" ry="2" />
<text  x="456.58" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (280 samples, 0.06%)</title><rect x="534.9" y="757" width="0.8" height="15.0" fill="rgb(216,69,10)" rx="2" ry="2" />
<text  x="537.93" y="767.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4,182 samples, 0.92%)</title><rect x="240.0" y="837" width="10.9" height="15.0" fill="rgb(254,169,53)" rx="2" ry="2" />
<text  x="243.01" y="847.5" ></text>
</g>
<g >
<title>inet_sendmsg (116 samples, 0.03%)</title><rect x="365.3" y="837" width="0.3" height="15.0" fill="rgb(239,65,27)" rx="2" ry="2" />
<text  x="368.25" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (86 samples, 0.02%)</title><rect x="982.5" y="997" width="0.3" height="15.0" fill="rgb(228,194,9)" rx="2" ry="2" />
<text  x="985.55" y="1007.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.02%)</title><rect x="894.0" y="933" width="0.2" height="15.0" fill="rgb(211,78,7)" rx="2" ry="2" />
<text  x="896.98" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (97 samples, 0.02%)</title><rect x="37.2" y="1301" width="0.3" height="15.0" fill="rgb(206,21,6)" rx="2" ry="2" />
<text  x="40.25" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (143 samples, 0.03%)</title><rect x="912.8" y="1013" width="0.4" height="15.0" fill="rgb(236,76,3)" rx="2" ry="2" />
<text  x="915.84" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::clear (21,736 samples, 4.79%)</title><rect x="165.7" y="1109" width="56.5" height="15.0" fill="rgb(234,13,53)" rx="2" ry="2" />
<text  x="168.68" y="1119.5" >std::..</text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (8,194 samples, 1.80%)</title><rect x="649.8" y="949" width="21.3" height="15.0" fill="rgb(250,67,18)" rx="2" ry="2" />
<text  x="652.80" y="959.5" >s..</text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (155 samples, 0.03%)</title><rect x="164.3" y="1077" width="0.4" height="15.0" fill="rgb(209,25,46)" rx="2" ry="2" />
<text  x="167.26" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (63 samples, 0.01%)</title><rect x="260.7" y="917" width="0.2" height="15.0" fill="rgb(215,21,36)" rx="2" ry="2" />
<text  x="263.69" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_lock (57 samples, 0.01%)</title><rect x="548.2" y="533" width="0.2" height="15.0" fill="rgb(225,22,35)" rx="2" ry="2" />
<text  x="551.20" y="543.5" ></text>
</g>
<g >
<title>std::make_shared&lt;webserver::Channel, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, webserver::EventLoop*&amp;&gt; (1,275 samples, 0.28%)</title><rect x="1141.1" y="1045" width="3.3" height="15.0" fill="rgb(208,107,9)" rx="2" ry="2" />
<text  x="1144.13" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (419 samples, 0.09%)</title><rect x="930.1" y="901" width="1.1" height="15.0" fill="rgb(241,217,15)" rx="2" ry="2" />
<text  x="933.15" y="911.5" ></text>
</g>
<g >
<title>_start (61,944 samples, 13.64%)</title><rect x="1018.7" y="1317" width="161.0" height="15.0" fill="rgb(241,178,28)" rx="2" ry="2" />
<text  x="1021.74" y="1327.5" >_start</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,754 samples, 0.39%)</title><rect x="751.1" y="1013" width="4.6" height="15.0" fill="rgb(244,160,10)" rx="2" ry="2" />
<text  x="754.15" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (78 samples, 0.02%)</title><rect x="911.3" y="1029" width="0.2" height="15.0" fill="rgb(206,89,30)" rx="2" ry="2" />
<text  x="914.26" y="1039.5" ></text>
</g>
<g >
<title>psi_group_change (178 samples, 0.04%)</title><rect x="554.7" y="485" width="0.4" height="15.0" fill="rgb(242,191,44)" rx="2" ry="2" />
<text  x="557.67" y="495.5" ></text>
</g>
<g >
<title>tcp_ack_tstamp (39 samples, 0.01%)</title><rect x="370.5" y="741" width="0.1" height="15.0" fill="rgb(247,95,44)" rx="2" ry="2" />
<text  x="373.47" y="751.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (41 samples, 0.01%)</title><rect x="590.9" y="757" width="0.1" height="15.0" fill="rgb(210,112,26)" rx="2" ry="2" />
<text  x="593.93" y="767.5" ></text>
</g>
<g >
<title>std::function&lt;void  (624 samples, 0.14%)</title><rect x="608.6" y="885" width="1.7" height="15.0" fill="rgb(245,79,7)" rx="2" ry="2" />
<text  x="611.64" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (49 samples, 0.01%)</title><rect x="742.2" y="1045" width="0.1" height="15.0" fill="rgb(205,59,1)" rx="2" ry="2" />
<text  x="745.18" y="1055.5" ></text>
</g>
<g >
<title>sync_regs (214 samples, 0.05%)</title><rect x="906.2" y="917" width="0.6" height="15.0" fill="rgb(246,135,50)" rx="2" ry="2" />
<text  x="909.23" y="927.5" ></text>
</g>
<g >
<title>__queue_work (705 samples, 0.16%)</title><rect x="712.4" y="677" width="1.8" height="15.0" fill="rgb(226,223,29)" rx="2" ry="2" />
<text  x="715.36" y="687.5" ></text>
</g>
<g >
<title>ip_rcv_core (73 samples, 0.02%)</title><rect x="211.8" y="309" width="0.2" height="15.0" fill="rgb(206,71,0)" rx="2" ry="2" />
<text  x="214.85" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (120 samples, 0.03%)</title><rect x="770.6" y="949" width="0.4" height="15.0" fill="rgb(231,117,28)" rx="2" ry="2" />
<text  x="773.64" y="959.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (210 samples, 0.05%)</title><rect x="793.6" y="1045" width="0.6" height="15.0" fill="rgb(245,39,36)" rx="2" ry="2" />
<text  x="796.62" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (89 samples, 0.02%)</title><rect x="694.5" y="885" width="0.2" height="15.0" fill="rgb(213,40,1)" rx="2" ry="2" />
<text  x="697.49" y="895.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr (69 samples, 0.02%)</title><rect x="1077.7" y="965" width="0.2" height="15.0" fill="rgb(210,42,46)" rx="2" ry="2" />
<text  x="1080.72" y="975.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (490 samples, 0.11%)</title><rect x="696.3" y="821" width="1.3" height="15.0" fill="rgb(232,165,19)" rx="2" ry="2" />
<text  x="699.30" y="831.5" ></text>
</g>
<g >
<title>walk_component (187 samples, 0.04%)</title><rect x="863.3" y="949" width="0.5" height="15.0" fill="rgb(220,193,46)" rx="2" ry="2" />
<text  x="866.33" y="959.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (61 samples, 0.01%)</title><rect x="556.5" y="469" width="0.1" height="15.0" fill="rgb(218,45,2)" rx="2" ry="2" />
<text  x="559.47" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (138 samples, 0.03%)</title><rect x="545.6" y="517" width="0.4" height="15.0" fill="rgb(232,193,26)" rx="2" ry="2" />
<text  x="548.63" y="527.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (73 samples, 0.02%)</title><rect x="1049.1" y="693" width="0.2" height="15.0" fill="rgb(210,79,46)" rx="2" ry="2" />
<text  x="1052.08" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (132 samples, 0.03%)</title><rect x="907.9" y="949" width="0.4" height="15.0" fill="rgb(230,110,51)" rx="2" ry="2" />
<text  x="910.94" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (56 samples, 0.01%)</title><rect x="111.4" y="1301" width="0.1" height="15.0" fill="rgb(246,117,2)" rx="2" ry="2" />
<text  x="114.37" y="1311.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (44 samples, 0.01%)</title><rect x="128.8" y="1301" width="0.1" height="15.0" fill="rgb(246,201,47)" rx="2" ry="2" />
<text  x="131.83" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (145 samples, 0.03%)</title><rect x="764.4" y="965" width="0.4" height="15.0" fill="rgb(225,173,46)" rx="2" ry="2" />
<text  x="767.39" y="975.5" ></text>
</g>
<g >
<title>psi_group_change (197 samples, 0.04%)</title><rect x="1067.0" y="741" width="0.5" height="15.0" fill="rgb(227,131,40)" rx="2" ry="2" />
<text  x="1070.04" y="751.5" ></text>
</g>
<g >
<title>sock_def_wakeup (424 samples, 0.09%)</title><rect x="752.6" y="933" width="1.1" height="15.0" fill="rgb(212,41,40)" rx="2" ry="2" />
<text  x="755.57" y="943.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (695 samples, 0.15%)</title><rect x="305.0" y="709" width="1.8" height="15.0" fill="rgb(232,65,32)" rx="2" ry="2" />
<text  x="307.98" y="719.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (131 samples, 0.03%)</title><rect x="1121.9" y="837" width="0.4" height="15.0" fill="rgb(229,93,45)" rx="2" ry="2" />
<text  x="1124.93" y="847.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (79 samples, 0.02%)</title><rect x="1068.6" y="837" width="0.2" height="15.0" fill="rgb(242,89,20)" rx="2" ry="2" />
<text  x="1071.57" y="847.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (237 samples, 0.05%)</title><rect x="845.1" y="965" width="0.6" height="15.0" fill="rgb(206,139,17)" rx="2" ry="2" />
<text  x="848.07" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (86 samples, 0.02%)</title><rect x="74.5" y="1301" width="0.3" height="15.0" fill="rgb(219,197,7)" rx="2" ry="2" />
<text  x="77.53" y="1311.5" ></text>
</g>
<g >
<title>update_curr (94 samples, 0.02%)</title><rect x="959.8" y="677" width="0.2" height="15.0" fill="rgb(222,219,46)" rx="2" ry="2" />
<text  x="962.76" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (210 samples, 0.05%)</title><rect x="928.8" y="885" width="0.5" height="15.0" fill="rgb(215,5,14)" rx="2" ry="2" />
<text  x="931.79" y="895.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (141 samples, 0.03%)</title><rect x="907.9" y="965" width="0.4" height="15.0" fill="rgb(224,170,9)" rx="2" ry="2" />
<text  x="910.91" y="975.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;webserver::HttpHandler,  (54 samples, 0.01%)</title><rect x="611.4" y="885" width="0.2" height="15.0" fill="rgb(212,181,44)" rx="2" ry="2" />
<text  x="614.41" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*&gt; (21,515 samples, 4.74%)</title><rect x="166.1" y="1045" width="55.9" height="15.0" fill="rgb(236,105,2)" rx="2" ry="2" />
<text  x="169.14" y="1055.5" >std::..</text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (697 samples, 0.15%)</title><rect x="1024.3" y="965" width="1.8" height="15.0" fill="rgb(209,175,0)" rx="2" ry="2" />
<text  x="1027.28" y="975.5" ></text>
</g>
<g >
<title>__update_load_avg_se (45 samples, 0.01%)</title><rect x="206.9" y="37" width="0.1" height="15.0" fill="rgb(223,216,32)" rx="2" ry="2" />
<text  x="209.86" y="47.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (44 samples, 0.01%)</title><rect x="711.5" y="629" width="0.1" height="15.0" fill="rgb(219,200,2)" rx="2" ry="2" />
<text  x="714.47" y="639.5" ></text>
</g>
<g >
<title>mutex_lock (55 samples, 0.01%)</title><rect x="1049.9" y="741" width="0.2" height="15.0" fill="rgb(217,19,18)" rx="2" ry="2" />
<text  x="1052.93" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (55 samples, 0.01%)</title><rect x="350.9" y="821" width="0.2" height="15.0" fill="rgb(227,52,10)" rx="2" ry="2" />
<text  x="353.94" y="831.5" ></text>
</g>
<g >
<title>__fget_light (286 samples, 0.06%)</title><rect x="1117.3" y="981" width="0.7" height="15.0" fill="rgb(210,10,18)" rx="2" ry="2" />
<text  x="1120.29" y="991.5" ></text>
</g>
<g >
<title>__legitimize_path (205 samples, 0.05%)</title><rect x="856.1" y="917" width="0.5" height="15.0" fill="rgb(216,157,13)" rx="2" ry="2" />
<text  x="859.07" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (52 samples, 0.01%)</title><rect x="577.3" y="805" width="0.1" height="15.0" fill="rgb(247,54,52)" rx="2" ry="2" />
<text  x="580.30" y="815.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (63 samples, 0.01%)</title><rect x="34.6" y="1301" width="0.2" height="15.0" fill="rgb(236,121,40)" rx="2" ry="2" />
<text  x="37.64" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (177 samples, 0.04%)</title><rect x="1086.5" y="405" width="0.5" height="15.0" fill="rgb(214,227,31)" rx="2" ry="2" />
<text  x="1089.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (72 samples, 0.02%)</title><rect x="351.3" y="853" width="0.2" height="15.0" fill="rgb(210,4,21)" rx="2" ry="2" />
<text  x="354.28" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (61 samples, 0.01%)</title><rect x="351.8" y="853" width="0.1" height="15.0" fill="rgb(233,216,17)" rx="2" ry="2" />
<text  x="354.78" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (46 samples, 0.01%)</title><rect x="972.8" y="997" width="0.1" height="15.0" fill="rgb(240,228,41)" rx="2" ry="2" />
<text  x="975.79" y="1007.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (80 samples, 0.02%)</title><rect x="1096.9" y="293" width="0.2" height="15.0" fill="rgb(211,119,40)" rx="2" ry="2" />
<text  x="1099.93" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (292 samples, 0.06%)</title><rect x="124.3" y="1301" width="0.8" height="15.0" fill="rgb(208,73,21)" rx="2" ry="2" />
<text  x="127.30" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (64 samples, 0.01%)</title><rect x="84.2" y="1301" width="0.2" height="15.0" fill="rgb(244,18,19)" rx="2" ry="2" />
<text  x="87.21" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (41 samples, 0.01%)</title><rect x="634.4" y="981" width="0.1" height="15.0" fill="rgb(210,101,36)" rx="2" ry="2" />
<text  x="637.42" y="991.5" ></text>
</g>
<g >
<title>step_into (113 samples, 0.02%)</title><rect x="887.7" y="917" width="0.3" height="15.0" fill="rgb(246,123,28)" rx="2" ry="2" />
<text  x="890.74" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_free (96 samples, 0.02%)</title><rect x="890.6" y="981" width="0.2" height="15.0" fill="rgb(246,174,49)" rx="2" ry="2" />
<text  x="893.57" y="991.5" ></text>
</g>
<g >
<title>available_idle_cpu (210 samples, 0.05%)</title><rect x="426.9" y="389" width="0.6" height="15.0" fill="rgb(245,155,28)" rx="2" ry="2" />
<text  x="429.92" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (148 samples, 0.03%)</title><rect x="296.1" y="645" width="0.4" height="15.0" fill="rgb(207,159,41)" rx="2" ry="2" />
<text  x="299.12" y="655.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (54 samples, 0.01%)</title><rect x="162.0" y="1013" width="0.1" height="15.0" fill="rgb(208,83,25)" rx="2" ry="2" />
<text  x="165.01" y="1023.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (77 samples, 0.02%)</title><rect x="859.7" y="917" width="0.2" height="15.0" fill="rgb(229,65,12)" rx="2" ry="2" />
<text  x="862.73" y="927.5" ></text>
</g>
<g >
<title>psi_task_switch (295 samples, 0.06%)</title><rect x="1066.8" y="757" width="0.8" height="15.0" fill="rgb(239,211,46)" rx="2" ry="2" />
<text  x="1069.81" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (44 samples, 0.01%)</title><rect x="915.5" y="965" width="0.1" height="15.0" fill="rgb(243,90,15)" rx="2" ry="2" />
<text  x="918.52" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (436 samples, 0.10%)</title><rect x="310.0" y="757" width="1.2" height="15.0" fill="rgb(238,218,52)" rx="2" ry="2" />
<text  x="313.02" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (73 samples, 0.02%)</title><rect x="297.7" y="821" width="0.2" height="15.0" fill="rgb(250,22,7)" rx="2" ry="2" />
<text  x="300.71" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (407 samples, 0.09%)</title><rect x="988.4" y="1013" width="1.0" height="15.0" fill="rgb(215,228,3)" rx="2" ry="2" />
<text  x="991.37" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (55 samples, 0.01%)</title><rect x="1023.9" y="757" width="0.1" height="15.0" fill="rgb(223,17,22)" rx="2" ry="2" />
<text  x="1026.87" y="767.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (40 samples, 0.01%)</title><rect x="1037.1" y="901" width="0.1" height="15.0" fill="rgb(221,213,38)" rx="2" ry="2" />
<text  x="1040.06" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (41 samples, 0.01%)</title><rect x="309.8" y="741" width="0.1" height="15.0" fill="rgb(233,0,31)" rx="2" ry="2" />
<text  x="312.84" y="751.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (56 samples, 0.01%)</title><rect x="511.3" y="1077" width="0.1" height="15.0" fill="rgb(209,29,34)" rx="2" ry="2" />
<text  x="514.29" y="1087.5" ></text>
</g>
<g >
<title>native_write_msr (58 samples, 0.01%)</title><rect x="331.8" y="421" width="0.1" height="15.0" fill="rgb(244,66,54)" rx="2" ry="2" />
<text  x="334.80" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (112 samples, 0.02%)</title><rect x="92.8" y="1301" width="0.3" height="15.0" fill="rgb(224,51,24)" rx="2" ry="2" />
<text  x="95.83" y="1311.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;webserver::HttpHandler*,  (2,394 samples, 0.53%)</title><rect x="270.1" y="869" width="6.3" height="15.0" fill="rgb(235,41,16)" rx="2" ry="2" />
<text  x="273.14" y="879.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (106 samples, 0.02%)</title><rect x="407.2" y="437" width="0.3" height="15.0" fill="rgb(240,87,28)" rx="2" ry="2" />
<text  x="410.20" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,068 samples, 1.78%)</title><rect x="935.5" y="805" width="21.0" height="15.0" fill="rgb(237,164,51)" rx="2" ry="2" />
<text  x="938.51" y="815.5" ></text>
</g>
<g >
<title>_int_free (56 samples, 0.01%)</title><rect x="1108.3" y="837" width="0.1" height="15.0" fill="rgb(242,93,38)" rx="2" ry="2" />
<text  x="1111.27" y="847.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2,139 samples, 0.47%)</title><rect x="733.8" y="933" width="5.6" height="15.0" fill="rgb(244,146,45)" rx="2" ry="2" />
<text  x="736.85" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (879 samples, 0.19%)</title><rect x="979.6" y="949" width="2.2" height="15.0" fill="rgb(212,33,52)" rx="2" ry="2" />
<text  x="982.56" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (97 samples, 0.02%)</title><rect x="532.2" y="789" width="0.3" height="15.0" fill="rgb(235,143,49)" rx="2" ry="2" />
<text  x="535.20" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (123 samples, 0.03%)</title><rect x="606.5" y="853" width="0.3" height="15.0" fill="rgb(219,66,17)" rx="2" ry="2" />
<text  x="609.49" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::get (46 samples, 0.01%)</title><rect x="1004.6" y="949" width="0.1" height="15.0" fill="rgb(214,160,46)" rx="2" ry="2" />
<text  x="1007.58" y="959.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (88 samples, 0.02%)</title><rect x="984.1" y="1045" width="0.2" height="15.0" fill="rgb(251,151,12)" rx="2" ry="2" />
<text  x="987.07" y="1055.5" ></text>
</g>
<g >
<title>exc_page_fault (2,974 samples, 0.65%)</title><rect x="897.1" y="917" width="7.7" height="15.0" fill="rgb(231,173,39)" rx="2" ry="2" />
<text  x="900.06" y="927.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (146 samples, 0.03%)</title><rect x="346.9" y="677" width="0.4" height="15.0" fill="rgb(235,101,0)" rx="2" ry="2" />
<text  x="349.92" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (165 samples, 0.04%)</title><rect x="276.5" y="901" width="0.4" height="15.0" fill="rgb(224,31,45)" rx="2" ry="2" />
<text  x="279.45" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (111 samples, 0.02%)</title><rect x="310.2" y="725" width="0.3" height="15.0" fill="rgb(230,188,54)" rx="2" ry="2" />
<text  x="313.17" y="735.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (72 samples, 0.02%)</title><rect x="307.2" y="677" width="0.2" height="15.0" fill="rgb(219,26,13)" rx="2" ry="2" />
<text  x="310.25" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (128 samples, 0.03%)</title><rect x="302.0" y="757" width="0.4" height="15.0" fill="rgb(254,93,44)" rx="2" ry="2" />
<text  x="305.04" y="767.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (71 samples, 0.02%)</title><rect x="694.5" y="837" width="0.2" height="15.0" fill="rgb(253,58,42)" rx="2" ry="2" />
<text  x="697.53" y="847.5" ></text>
</g>
<g >
<title>enqueue_task (474 samples, 0.10%)</title><rect x="966.0" y="725" width="1.3" height="15.0" fill="rgb(250,89,23)" rx="2" ry="2" />
<text  x="969.04" y="735.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (64 samples, 0.01%)</title><rect x="700.8" y="853" width="0.2" height="15.0" fill="rgb(205,62,1)" rx="2" ry="2" />
<text  x="703.83" y="863.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (55 samples, 0.01%)</title><rect x="1136.8" y="1013" width="0.1" height="15.0" fill="rgb(246,92,7)" rx="2" ry="2" />
<text  x="1139.78" y="1023.5" ></text>
</g>
<g >
<title>fput_many (42 samples, 0.01%)</title><rect x="539.0" y="645" width="0.1" height="15.0" fill="rgb(215,204,45)" rx="2" ry="2" />
<text  x="541.99" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (183 samples, 0.04%)</title><rect x="744.5" y="965" width="0.5" height="15.0" fill="rgb(227,60,21)" rx="2" ry="2" />
<text  x="747.51" y="975.5" ></text>
</g>
<g >
<title>psi_task_switch (308 samples, 0.07%)</title><rect x="341.0" y="565" width="0.8" height="15.0" fill="rgb(210,3,4)" rx="2" ry="2" />
<text  x="344.05" y="575.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (183 samples, 0.04%)</title><rect x="623.5" y="1045" width="0.5" height="15.0" fill="rgb(234,58,12)" rx="2" ry="2" />
<text  x="626.52" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (101 samples, 0.02%)</title><rect x="99.0" y="1301" width="0.3" height="15.0" fill="rgb(239,171,50)" rx="2" ry="2" />
<text  x="102.03" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (171 samples, 0.04%)</title><rect x="260.9" y="885" width="0.5" height="15.0" fill="rgb(215,77,9)" rx="2" ry="2" />
<text  x="263.94" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2,098 samples, 0.46%)</title><rect x="733.9" y="901" width="5.5" height="15.0" fill="rgb(248,160,32)" rx="2" ry="2" />
<text  x="736.92" y="911.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (74 samples, 0.02%)</title><rect x="532.0" y="693" width="0.2" height="15.0" fill="rgb(223,64,10)" rx="2" ry="2" />
<text  x="534.97" y="703.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (24,658 samples, 5.43%)</title><rect x="514.1" y="933" width="64.0" height="15.0" fill="rgb(250,220,42)" rx="2" ry="2" />
<text  x="517.06" y="943.5" >spdlog:..</text>
</g>
<g >
<title>do_softirq (149 samples, 0.03%)</title><rect x="183.8" y="373" width="0.4" height="15.0" fill="rgb(242,92,9)" rx="2" ry="2" />
<text  x="186.77" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::formatter*, std::default_delete&lt;spdlog::formatter&gt; &gt;::_M_head (197 samples, 0.04%)</title><rect x="77.8" y="1301" width="0.5" height="15.0" fill="rgb(230,18,9)" rx="2" ry="2" />
<text  x="80.79" y="1311.5" ></text>
</g>
<g >
<title>ip_local_deliver (125 samples, 0.03%)</title><rect x="183.8" y="261" width="0.3" height="15.0" fill="rgb(249,102,36)" rx="2" ry="2" />
<text  x="186.81" y="271.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,482 samples, 0.55%)</title><rect x="957.4" y="917" width="6.4" height="15.0" fill="rgb(245,23,15)" rx="2" ry="2" />
<text  x="960.37" y="927.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (74 samples, 0.02%)</title><rect x="30.6" y="1301" width="0.2" height="15.0" fill="rgb(249,159,33)" rx="2" ry="2" />
<text  x="33.59" y="1311.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (99 samples, 0.02%)</title><rect x="178.2" y="581" width="0.3" height="15.0" fill="rgb(230,144,1)" rx="2" ry="2" />
<text  x="181.23" y="591.5" ></text>
</g>
<g >
<title>__fget_files (239 samples, 0.05%)</title><rect x="593.5" y="741" width="0.6" height="15.0" fill="rgb(235,228,34)" rx="2" ry="2" />
<text  x="596.50" y="751.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (125 samples, 0.03%)</title><rect x="1124.5" y="853" width="0.4" height="15.0" fill="rgb(248,61,27)" rx="2" ry="2" />
<text  x="1127.53" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, void&gt; (94 samples, 0.02%)</title><rect x="117.9" y="1301" width="0.3" height="15.0" fill="rgb(242,175,30)" rx="2" ry="2" />
<text  x="120.93" y="1311.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (69 samples, 0.02%)</title><rect x="703.3" y="853" width="0.2" height="15.0" fill="rgb(250,164,40)" rx="2" ry="2" />
<text  x="706.27" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (61 samples, 0.01%)</title><rect x="1075.9" y="1077" width="0.1" height="15.0" fill="rgb(219,216,8)" rx="2" ry="2" />
<text  x="1078.88" y="1087.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61 samples, 0.01%)</title><rect x="894.3" y="949" width="0.2" height="15.0" fill="rgb(223,107,32)" rx="2" ry="2" />
<text  x="897.30" y="959.5" ></text>
</g>
<g >
<title>inet_release (14,872 samples, 3.27%)</title><rect x="182.2" y="581" width="38.7" height="15.0" fill="rgb(242,228,2)" rx="2" ry="2" />
<text  x="185.24" y="591.5" >ine..</text>
</g>
<g >
<title>_raw_spin_lock (78 samples, 0.02%)</title><rect x="944.1" y="645" width="0.2" height="15.0" fill="rgb(219,161,36)" rx="2" ry="2" />
<text  x="947.14" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt; (39 samples, 0.01%)</title><rect x="919.2" y="933" width="0.1" height="15.0" fill="rgb(214,59,19)" rx="2" ry="2" />
<text  x="922.16" y="943.5" ></text>
</g>
<g >
<title>__do_softirq (3,326 samples, 0.73%)</title><rect x="1092.8" y="613" width="8.6" height="15.0" fill="rgb(246,68,35)" rx="2" ry="2" />
<text  x="1095.76" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (73 samples, 0.02%)</title><rect x="284.8" y="853" width="0.2" height="15.0" fill="rgb(211,207,22)" rx="2" ry="2" />
<text  x="287.80" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (163 samples, 0.04%)</title><rect x="586.4" y="805" width="0.4" height="15.0" fill="rgb(242,81,3)" rx="2" ry="2" />
<text  x="589.42" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (89 samples, 0.02%)</title><rect x="311.4" y="597" width="0.2" height="15.0" fill="rgb(242,13,32)" rx="2" ry="2" />
<text  x="314.39" y="607.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (62 samples, 0.01%)</title><rect x="217.3" y="533" width="0.2" height="15.0" fill="rgb(210,184,32)" rx="2" ry="2" />
<text  x="220.29" y="543.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (203 samples, 0.04%)</title><rect x="438.9" y="485" width="0.5" height="15.0" fill="rgb(240,133,15)" rx="2" ry="2" />
<text  x="441.92" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (213 samples, 0.05%)</title><rect x="565.9" y="597" width="0.6" height="15.0" fill="rgb(216,62,25)" rx="2" ry="2" />
<text  x="568.93" y="607.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,006 samples, 0.22%)</title><rect x="1172.2" y="1013" width="2.7" height="15.0" fill="rgb(238,193,27)" rx="2" ry="2" />
<text  x="1175.24" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (145 samples, 0.03%)</title><rect x="740.4" y="1045" width="0.4" height="15.0" fill="rgb(211,198,20)" rx="2" ry="2" />
<text  x="743.40" y="1055.5" ></text>
</g>
<g >
<title>fmt::v8::visit_format_arg&lt;fmt::v8::detail::default_arg_formatter&lt;char&gt;, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt; (457 samples, 0.10%)</title><rect x="689.1" y="981" width="1.2" height="15.0" fill="rgb(233,122,37)" rx="2" ry="2" />
<text  x="692.12" y="991.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;webserver::HttpHandler::HttpVersion&amp;&gt; (114 samples, 0.03%)</title><rect x="787.4" y="997" width="0.3" height="15.0" fill="rgb(254,175,32)" rx="2" ry="2" />
<text  x="790.41" y="1007.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (281 samples, 0.06%)</title><rect x="255.1" y="917" width="0.7" height="15.0" fill="rgb(220,31,23)" rx="2" ry="2" />
<text  x="258.06" y="927.5" ></text>
</g>
<g >
<title>schedule (650 samples, 0.14%)</title><rect x="731.3" y="773" width="1.7" height="15.0" fill="rgb(235,82,15)" rx="2" ry="2" />
<text  x="734.31" y="783.5" ></text>
</g>
<g >
<title>flush_tlb_func (337 samples, 0.07%)</title><rect x="837.9" y="885" width="0.9" height="15.0" fill="rgb(252,18,6)" rx="2" ry="2" />
<text  x="840.89" y="895.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (63 samples, 0.01%)</title><rect x="340.5" y="533" width="0.2" height="15.0" fill="rgb(209,18,6)" rx="2" ry="2" />
<text  x="343.50" y="543.5" ></text>
</g>
<g >
<title>_int_malloc (121 samples, 0.03%)</title><rect x="1114.3" y="917" width="0.3" height="15.0" fill="rgb(251,84,50)" rx="2" ry="2" />
<text  x="1117.29" y="927.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (136 samples, 0.03%)</title><rect x="973.9" y="997" width="0.3" height="15.0" fill="rgb(220,114,54)" rx="2" ry="2" />
<text  x="976.86" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (171 samples, 0.04%)</title><rect x="578.7" y="901" width="0.4" height="15.0" fill="rgb(247,188,5)" rx="2" ry="2" />
<text  x="581.65" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_mbegin (53 samples, 0.01%)</title><rect x="74.4" y="1301" width="0.1" height="15.0" fill="rgb(251,177,32)" rx="2" ry="2" />
<text  x="77.39" y="1311.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true, true&gt; (41 samples, 0.01%)</title><rect x="132.7" y="1301" width="0.1" height="15.0" fill="rgb(247,107,0)" rx="2" ry="2" />
<text  x="135.72" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (47 samples, 0.01%)</title><rect x="284.9" y="837" width="0.1" height="15.0" fill="rgb(244,4,49)" rx="2" ry="2" />
<text  x="287.86" y="847.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (45 samples, 0.01%)</title><rect x="768.9" y="1045" width="0.1" height="15.0" fill="rgb(224,187,12)" rx="2" ry="2" />
<text  x="771.89" y="1055.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (46 samples, 0.01%)</title><rect x="568.1" y="597" width="0.2" height="15.0" fill="rgb(225,112,21)" rx="2" ry="2" />
<text  x="571.14" y="607.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (52 samples, 0.01%)</title><rect x="839.2" y="885" width="0.1" height="15.0" fill="rgb(251,95,37)" rx="2" ry="2" />
<text  x="842.16" y="895.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (68 samples, 0.01%)</title><rect x="116.5" y="1301" width="0.2" height="15.0" fill="rgb(230,150,45)" rx="2" ry="2" />
<text  x="119.47" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (163 samples, 0.04%)</title><rect x="982.5" y="1029" width="0.4" height="15.0" fill="rgb(205,103,36)" rx="2" ry="2" />
<text  x="985.51" y="1039.5" ></text>
</g>
<g >
<title>webserver::HttpManager::handler (150,533 samples, 33.15%)</title><rect x="627.6" y="1109" width="391.1" height="15.0" fill="rgb(240,181,38)" rx="2" ry="2" />
<text  x="630.55" y="1119.5" >webserver::HttpManager::handler</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (19,930 samples, 4.39%)</title><rect x="170.1" y="821" width="51.8" height="15.0" fill="rgb(210,15,3)" rx="2" ry="2" />
<text  x="173.13" y="831.5" >std::..</text>
</g>
<g >
<title>[web_server] (138 samples, 0.03%)</title><rect x="1020.7" y="1029" width="0.3" height="15.0" fill="rgb(215,153,31)" rx="2" ry="2" />
<text  x="1023.68" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (163 samples, 0.04%)</title><rect x="701.2" y="853" width="0.4" height="15.0" fill="rgb(214,223,27)" rx="2" ry="2" />
<text  x="704.19" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;webserver::Channel, void&gt; (56 samples, 0.01%)</title><rect x="585.0" y="869" width="0.1" height="15.0" fill="rgb(239,91,2)" rx="2" ry="2" />
<text  x="588.00" y="879.5" ></text>
</g>
<g >
<title>complete_walk (311 samples, 0.07%)</title><rect x="855.9" y="949" width="0.8" height="15.0" fill="rgb(236,214,36)" rx="2" ry="2" />
<text  x="858.93" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (63 samples, 0.01%)</title><rect x="850.6" y="965" width="0.2" height="15.0" fill="rgb(244,126,4)" rx="2" ry="2" />
<text  x="853.63" y="975.5" ></text>
</g>
<g >
<title>add_wait_queue (42 samples, 0.01%)</title><rect x="544.7" y="581" width="0.2" height="15.0" fill="rgb(215,179,53)" rx="2" ry="2" />
<text  x="547.75" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (42 samples, 0.01%)</title><rect x="994.3" y="917" width="0.1" height="15.0" fill="rgb(228,78,25)" rx="2" ry="2" />
<text  x="997.26" y="927.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (81 samples, 0.02%)</title><rect x="974.0" y="981" width="0.2" height="15.0" fill="rgb(237,113,47)" rx="2" ry="2" />
<text  x="977.00" y="991.5" ></text>
</g>
<g >
<title>security_file_permission (53 samples, 0.01%)</title><rect x="1134.7" y="981" width="0.2" height="15.0" fill="rgb(217,226,3)" rx="2" ry="2" />
<text  x="1137.71" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_work (65 samples, 0.01%)</title><rect x="963.3" y="789" width="0.1" height="15.0" fill="rgb(254,102,8)" rx="2" ry="2" />
<text  x="966.28" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (57 samples, 0.01%)</title><rect x="744.4" y="965" width="0.1" height="15.0" fill="rgb(216,125,46)" rx="2" ry="2" />
<text  x="747.36" y="975.5" ></text>
</g>
<g >
<title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (62 samples, 0.01%)</title><rect x="104.6" y="1285" width="0.1" height="15.0" fill="rgb(206,124,26)" rx="2" ry="2" />
<text  x="107.58" y="1295.5" ></text>
</g>
<g >
<title>x86_pmu_filter_match (39 samples, 0.01%)</title><rect x="813.3" y="901" width="0.1" height="15.0" fill="rgb(243,197,46)" rx="2" ry="2" />
<text  x="816.30" y="911.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (2,178 samples, 0.48%)</title><rect x="992.6" y="1045" width="5.6" height="15.0" fill="rgb(205,7,12)" rx="2" ry="2" />
<text  x="995.58" y="1055.5" ></text>
</g>
<g >
<title>__fdget_pos (231 samples, 0.05%)</title><rect x="230.5" y="885" width="0.6" height="15.0" fill="rgb(252,219,41)" rx="2" ry="2" />
<text  x="233.52" y="895.5" ></text>
</g>
<g >
<title>fput_many (43 samples, 0.01%)</title><rect x="239.5" y="853" width="0.1" height="15.0" fill="rgb(228,210,24)" rx="2" ry="2" />
<text  x="242.48" y="863.5" ></text>
</g>
<g >
<title>security_file_free (48 samples, 0.01%)</title><rect x="181.7" y="613" width="0.1" height="15.0" fill="rgb(235,0,40)" rx="2" ry="2" />
<text  x="184.70" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (190 samples, 0.04%)</title><rect x="271.4" y="773" width="0.5" height="15.0" fill="rgb(212,100,54)" rx="2" ry="2" />
<text  x="274.40" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (116 samples, 0.03%)</title><rect x="1144.0" y="981" width="0.3" height="15.0" fill="rgb(230,153,3)" rx="2" ry="2" />
<text  x="1147.03" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (43 samples, 0.01%)</title><rect x="585.0" y="837" width="0.1" height="15.0" fill="rgb(222,106,39)" rx="2" ry="2" />
<text  x="588.04" y="847.5" ></text>
</g>
<g >
<title>is_cpu_allowed (109 samples, 0.02%)</title><rect x="659.9" y="661" width="0.3" height="15.0" fill="rgb(208,177,20)" rx="2" ry="2" />
<text  x="662.91" y="671.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (269 samples, 0.06%)</title><rect x="639.3" y="917" width="0.7" height="15.0" fill="rgb(244,154,42)" rx="2" ry="2" />
<text  x="642.33" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (55 samples, 0.01%)</title><rect x="1140.7" y="1029" width="0.1" height="15.0" fill="rgb(229,205,3)" rx="2" ry="2" />
<text  x="1143.70" y="1039.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (58 samples, 0.01%)</title><rect x="221.3" y="645" width="0.1" height="15.0" fill="rgb(244,219,2)" rx="2" ry="2" />
<text  x="224.27" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1125" width="160.8" height="15.0" fill="rgb(250,116,27)" rx="2" ry="2" />
<text  x="1021.74" y="1135.5" >std::__invoke_impl&lt;v..</text>
</g>
<g >
<title>_IO_str_init_static_internal (95 samples, 0.02%)</title><rect x="612.7" y="853" width="0.2" height="15.0" fill="rgb(227,102,48)" rx="2" ry="2" />
<text  x="615.66" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (360 samples, 0.08%)</title><rect x="775.3" y="869" width="1.0" height="15.0" fill="rgb(210,164,24)" rx="2" ry="2" />
<text  x="778.32" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (130 samples, 0.03%)</title><rect x="297.2" y="725" width="0.3" height="15.0" fill="rgb(205,87,23)" rx="2" ry="2" />
<text  x="300.20" y="735.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::shutdown (2,047 samples, 0.45%)</title><rect x="750.8" y="1045" width="5.3" height="15.0" fill="rgb(246,7,39)" rx="2" ry="2" />
<text  x="753.78" y="1055.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (18,909 samples, 4.16%)</title><rect x="395.1" y="613" width="49.1" height="15.0" fill="rgb(213,30,19)" rx="2" ry="2" />
<text  x="398.10" y="623.5" >__ne..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (152 samples, 0.03%)</title><rect x="1112.0" y="1061" width="0.4" height="15.0" fill="rgb(243,81,1)" rx="2" ry="2" />
<text  x="1115.02" y="1071.5" ></text>
</g>
<g >
<title>fsnotify (45 samples, 0.01%)</title><rect x="849.8" y="933" width="0.1" height="15.0" fill="rgb(253,9,40)" rx="2" ry="2" />
<text  x="852.79" y="943.5" ></text>
</g>
<g >
<title>___slab_alloc (99 samples, 0.02%)</title><rect x="407.2" y="421" width="0.3" height="15.0" fill="rgb(235,21,29)" rx="2" ry="2" />
<text  x="410.21" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple&lt;true, true&gt; (53 samples, 0.01%)</title><rect x="785.7" y="1029" width="0.1" height="15.0" fill="rgb(231,7,19)" rx="2" ry="2" />
<text  x="788.70" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (44 samples, 0.01%)</title><rect x="1005.5" y="885" width="0.1" height="15.0" fill="rgb(251,76,37)" rx="2" ry="2" />
<text  x="1008.49" y="895.5" ></text>
</g>
<g >
<title>available_idle_cpu (95 samples, 0.02%)</title><rect x="204.8" y="101" width="0.3" height="15.0" fill="rgb(209,117,41)" rx="2" ry="2" />
<text  x="207.81" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (447 samples, 0.10%)</title><rect x="257.8" y="901" width="1.1" height="15.0" fill="rgb(215,111,2)" rx="2" ry="2" />
<text  x="260.78" y="911.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (5,262 samples, 1.16%)</title><rect x="1004.7" y="965" width="13.7" height="15.0" fill="rgb(243,166,38)" rx="2" ry="2" />
<text  x="1007.75" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (55 samples, 0.01%)</title><rect x="1142.2" y="869" width="0.1" height="15.0" fill="rgb(217,41,45)" rx="2" ry="2" />
<text  x="1145.16" y="879.5" ></text>
</g>
<g >
<title>_itoa_word (119 samples, 0.03%)</title><rect x="1174.5" y="997" width="0.3" height="15.0" fill="rgb(206,13,5)" rx="2" ry="2" />
<text  x="1177.48" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (42,503 samples, 9.36%)</title><rect x="511.7" y="1045" width="110.5" height="15.0" fill="rgb(250,51,26)" rx="2" ry="2" />
<text  x="514.74" y="1055.5" >std::__invoke..</text>
</g>
<g >
<title>std::locale::~locale (56 samples, 0.01%)</title><rect x="982.8" y="997" width="0.1" height="15.0" fill="rgb(246,130,29)" rx="2" ry="2" />
<text  x="985.79" y="1007.5" ></text>
</g>
<g >
<title>remove_wait_queue (64 samples, 0.01%)</title><rect x="953.3" y="693" width="0.2" height="15.0" fill="rgb(215,146,48)" rx="2" ry="2" />
<text  x="956.31" y="703.5" ></text>
</g>
<g >
<title>operator new (388 samples, 0.09%)</title><rect x="1142.9" y="901" width="1.0" height="15.0" fill="rgb(244,187,45)" rx="2" ry="2" />
<text  x="1145.87" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (402 samples, 0.09%)</title><rect x="529.7" y="741" width="1.0" height="15.0" fill="rgb(219,121,31)" rx="2" ry="2" />
<text  x="532.70" y="751.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (552 samples, 0.12%)</title><rect x="925.3" y="789" width="1.5" height="15.0" fill="rgb(217,213,12)" rx="2" ry="2" />
<text  x="928.32" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (142 samples, 0.03%)</title><rect x="501.0" y="1045" width="0.3" height="15.0" fill="rgb(219,111,17)" rx="2" ry="2" />
<text  x="503.97" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (98 samples, 0.02%)</title><rect x="87.0" y="1301" width="0.2" height="15.0" fill="rgb(213,66,14)" rx="2" ry="2" />
<text  x="89.98" y="1311.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2,250 samples, 0.50%)</title><rect x="1063.3" y="917" width="5.9" height="15.0" fill="rgb(253,191,52)" rx="2" ry="2" />
<text  x="1066.35" y="927.5" ></text>
</g>
<g >
<title>operator new (188 samples, 0.04%)</title><rect x="1170.0" y="933" width="0.4" height="15.0" fill="rgb(207,87,15)" rx="2" ry="2" />
<text  x="1172.95" y="943.5" ></text>
</g>
<g >
<title>select_task_rq_fair (242 samples, 0.05%)</title><rect x="1097.1" y="325" width="0.7" height="15.0" fill="rgb(214,152,36)" rx="2" ry="2" />
<text  x="1100.14" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (171 samples, 0.04%)</title><rect x="729.9" y="837" width="0.5" height="15.0" fill="rgb(221,28,27)" rx="2" ry="2" />
<text  x="732.95" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (162 samples, 0.04%)</title><rect x="931.3" y="885" width="0.4" height="15.0" fill="rgb(224,104,17)" rx="2" ry="2" />
<text  x="934.30" y="895.5" ></text>
</g>
<g >
<title>read_tsc (141 samples, 0.03%)</title><rect x="492.1" y="997" width="0.4" height="15.0" fill="rgb(249,121,45)" rx="2" ry="2" />
<text  x="495.13" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (734 samples, 0.16%)</title><rect x="641.3" y="869" width="1.9" height="15.0" fill="rgb(254,30,0)" rx="2" ry="2" />
<text  x="644.25" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (188 samples, 0.04%)</title><rect x="698.6" y="821" width="0.5" height="15.0" fill="rgb(250,164,7)" rx="2" ry="2" />
<text  x="701.57" y="831.5" ></text>
</g>
<g >
<title>tty_buffer_alloc (55 samples, 0.01%)</title><rect x="726.2" y="677" width="0.2" height="15.0" fill="rgb(234,84,35)" rx="2" ry="2" />
<text  x="729.23" y="687.5" ></text>
</g>
<g >
<title>n_tty_write (7,842 samples, 1.73%)</title><rect x="707.2" y="741" width="20.4" height="15.0" fill="rgb(233,32,12)" rx="2" ry="2" />
<text  x="710.21" y="751.5" ></text>
</g>
<g >
<title>process_echoes (92 samples, 0.02%)</title><rect x="546.8" y="581" width="0.2" height="15.0" fill="rgb(220,162,36)" rx="2" ry="2" />
<text  x="549.77" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (42 samples, 0.01%)</title><rect x="19.9" y="1301" width="0.1" height="15.0" fill="rgb(244,103,53)" rx="2" ry="2" />
<text  x="22.87" y="1311.5" ></text>
</g>
<g >
<title>sk_reset_timer (147 samples, 0.03%)</title><rect x="216.3" y="485" width="0.4" height="15.0" fill="rgb(233,42,34)" rx="2" ry="2" />
<text  x="219.31" y="495.5" ></text>
</g>
<g >
<title>std::mutex::lock (3,173 samples, 0.70%)</title><rect x="562.1" y="789" width="8.2" height="15.0" fill="rgb(206,166,39)" rx="2" ry="2" />
<text  x="565.09" y="799.5" ></text>
</g>
<g >
<title>from_kuid_munged (44 samples, 0.01%)</title><rect x="853.7" y="981" width="0.1" height="15.0" fill="rgb(208,127,3)" rx="2" ry="2" />
<text  x="856.65" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt;::operator++ (39 samples, 0.01%)</title><rect x="38.9" y="1301" width="0.1" height="15.0" fill="rgb(245,181,22)" rx="2" ry="2" />
<text  x="41.85" y="1311.5" ></text>
</g>
<g >
<title>insert_work (72 samples, 0.02%)</title><rect x="659.3" y="677" width="0.1" height="15.0" fill="rgb(252,28,35)" rx="2" ry="2" />
<text  x="662.26" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,362 samples, 0.52%)</title><rect x="285.3" y="853" width="6.2" height="15.0" fill="rgb(206,163,45)" rx="2" ry="2" />
<text  x="288.32" y="863.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (40 samples, 0.01%)</title><rect x="280.5" y="805" width="0.2" height="15.0" fill="rgb(248,95,27)" rx="2" ry="2" />
<text  x="283.55" y="815.5" ></text>
</g>
<g >
<title>[[nfnetlink]] (72 samples, 0.02%)</title><rect x="1102.1" y="597" width="0.2" height="15.0" fill="rgb(238,174,14)" rx="2" ry="2" />
<text  x="1105.08" y="607.5" ></text>
</g>
<g >
<title>__fsnotify_parent (82 samples, 0.02%)</title><rect x="1044.2" y="789" width="0.2" height="15.0" fill="rgb(245,37,6)" rx="2" ry="2" />
<text  x="1047.22" y="799.5" ></text>
</g>
<g >
<title>__alloc_skb (1,032 samples, 0.23%)</title><rect x="453.3" y="789" width="2.7" height="15.0" fill="rgb(242,15,27)" rx="2" ry="2" />
<text  x="456.33" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::Epoll*, std::default_delete&lt;webserver::Epoll&gt; &gt;::_M_head (89 samples, 0.02%)</title><rect x="78.8" y="1301" width="0.2" height="15.0" fill="rgb(233,50,51)" rx="2" ry="2" />
<text  x="81.77" y="1311.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (63 samples, 0.01%)</title><rect x="1124.7" y="837" width="0.2" height="15.0" fill="rgb(210,189,4)" rx="2" ry="2" />
<text  x="1127.69" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,027 samples, 0.23%)</title><rect x="304.2" y="757" width="2.6" height="15.0" fill="rgb(223,131,54)" rx="2" ry="2" />
<text  x="307.17" y="767.5" ></text>
</g>
<g >
<title>psi_flags_change (39 samples, 0.01%)</title><rect x="207.8" y="69" width="0.1" height="15.0" fill="rgb(207,173,7)" rx="2" ry="2" />
<text  x="210.83" y="79.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (158 samples, 0.03%)</title><rect x="1039.2" y="917" width="0.4" height="15.0" fill="rgb(235,118,8)" rx="2" ry="2" />
<text  x="1042.19" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (160 samples, 0.04%)</title><rect x="156.7" y="1269" width="0.4" height="15.0" fill="rgb(228,157,54)" rx="2" ry="2" />
<text  x="159.73" y="1279.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (98 samples, 0.02%)</title><rect x="531.9" y="757" width="0.3" height="15.0" fill="rgb(218,107,4)" rx="2" ry="2" />
<text  x="534.92" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (124 samples, 0.03%)</title><rect x="512.8" y="885" width="0.3" height="15.0" fill="rgb(220,65,19)" rx="2" ry="2" />
<text  x="515.82" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::max_size (160 samples, 0.04%)</title><rect x="509.3" y="1077" width="0.4" height="15.0" fill="rgb(232,150,37)" rx="2" ry="2" />
<text  x="512.33" y="1087.5" ></text>
</g>
<g >
<title>enqueue_task (686 samples, 0.15%)</title><rect x="1097.9" y="309" width="1.7" height="15.0" fill="rgb(232,29,34)" rx="2" ry="2" />
<text  x="1100.86" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (68 samples, 0.01%)</title><rect x="121.6" y="1301" width="0.1" height="15.0" fill="rgb(243,36,32)" rx="2" ry="2" />
<text  x="124.56" y="1311.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (210 samples, 0.05%)</title><rect x="711.4" y="677" width="0.5" height="15.0" fill="rgb(235,43,1)" rx="2" ry="2" />
<text  x="714.39" y="687.5" ></text>
</g>
<g >
<title>webserver::EventLoopThreadPool::get_next_loop (242 samples, 0.05%)</title><rect x="1137.5" y="1093" width="0.6" height="15.0" fill="rgb(208,193,21)" rx="2" ry="2" />
<text  x="1140.46" y="1103.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::find (891 samples, 0.20%)</title><rect x="629.3" y="1093" width="2.4" height="15.0" fill="rgb(241,167,3)" rx="2" ry="2" />
<text  x="632.34" y="1103.5" ></text>
</g>
<g >
<title>enqueue_entity (212 samples, 0.05%)</title><rect x="682.9" y="725" width="0.6" height="15.0" fill="rgb(219,23,24)" rx="2" ry="2" />
<text  x="685.93" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (71 samples, 0.02%)</title><rect x="743.5" y="997" width="0.2" height="15.0" fill="rgb(230,19,19)" rx="2" ry="2" />
<text  x="746.48" y="1007.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (159 samples, 0.04%)</title><rect x="311.3" y="709" width="0.4" height="15.0" fill="rgb(225,7,13)" rx="2" ry="2" />
<text  x="314.27" y="719.5" ></text>
</g>
<g >
<title>enqueue_task_fair (447 samples, 0.10%)</title><rect x="722.6" y="629" width="1.1" height="15.0" fill="rgb(246,10,31)" rx="2" ry="2" />
<text  x="725.56" y="639.5" ></text>
</g>
<g >
<title>__mod_timer (542 samples, 0.12%)</title><rect x="449.2" y="741" width="1.4" height="15.0" fill="rgb(229,142,4)" rx="2" ry="2" />
<text  x="452.15" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (60 samples, 0.01%)</title><rect x="165.2" y="1061" width="0.1" height="15.0" fill="rgb(228,216,43)" rx="2" ry="2" />
<text  x="168.19" y="1071.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.constprop.0 (108 samples, 0.02%)</title><rect x="442.1" y="581" width="0.3" height="15.0" fill="rgb(216,127,45)" rx="2" ry="2" />
<text  x="445.07" y="591.5" ></text>
</g>
<g >
<title>queue_work_on (176 samples, 0.04%)</title><rect x="545.5" y="549" width="0.5" height="15.0" fill="rgb(212,142,13)" rx="2" ry="2" />
<text  x="548.54" y="559.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::function&lt;void  (527 samples, 0.12%)</title><rect x="624.8" y="1045" width="1.3" height="15.0" fill="rgb(214,74,43)" rx="2" ry="2" />
<text  x="627.76" y="1055.5" ></text>
</g>
<g >
<title>webserver::HttpManager::add_http_connection (41,688 samples, 9.18%)</title><rect x="513.6" y="949" width="108.4" height="15.0" fill="rgb(214,162,1)" rx="2" ry="2" />
<text  x="516.65" y="959.5" >webserver::Ht..</text>
</g>
<g >
<title>llist_add_batch (52 samples, 0.01%)</title><rect x="838.8" y="885" width="0.1" height="15.0" fill="rgb(222,26,33)" rx="2" ry="2" />
<text  x="841.77" y="895.5" ></text>
</g>
<g >
<title>vfs_read (974 samples, 0.21%)</title><rect x="231.2" y="885" width="2.6" height="15.0" fill="rgb(235,198,39)" rx="2" ry="2" />
<text  x="234.22" y="895.5" ></text>
</g>
<g >
<title>preempt_schedule (134 samples, 0.03%)</title><rect x="545.2" y="517" width="0.3" height="15.0" fill="rgb(227,32,14)" rx="2" ry="2" />
<text  x="548.19" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (419 samples, 0.09%)</title><rect x="169.0" y="837" width="1.1" height="15.0" fill="rgb(209,199,52)" rx="2" ry="2" />
<text  x="171.97" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (165 samples, 0.04%)</title><rect x="167.1" y="917" width="0.4" height="15.0" fill="rgb(239,103,42)" rx="2" ry="2" />
<text  x="170.11" y="927.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (417 samples, 0.09%)</title><rect x="192.7" y="421" width="1.1" height="15.0" fill="rgb(221,115,38)" rx="2" ry="2" />
<text  x="195.73" y="431.5" ></text>
</g>
<g >
<title>user_path_at_empty (1,028 samples, 0.23%)</title><rect x="864.4" y="981" width="2.7" height="15.0" fill="rgb(213,148,20)" rx="2" ry="2" />
<text  x="867.38" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (52 samples, 0.01%)</title><rect x="743.8" y="965" width="0.1" height="15.0" fill="rgb(251,120,32)" rx="2" ry="2" />
<text  x="746.76" y="975.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (141 samples, 0.03%)</title><rect x="918.2" y="917" width="0.4" height="15.0" fill="rgb(246,124,13)" rx="2" ry="2" />
<text  x="921.19" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (99 samples, 0.02%)</title><rect x="51.8" y="1301" width="0.3" height="15.0" fill="rgb(231,148,2)" rx="2" ry="2" />
<text  x="54.85" y="1311.5" ></text>
</g>
<g >
<title>_int_free (77 samples, 0.02%)</title><rect x="625.4" y="901" width="0.2" height="15.0" fill="rgb(215,42,3)" rx="2" ry="2" />
<text  x="628.39" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (241 samples, 0.05%)</title><rect x="922.1" y="901" width="0.6" height="15.0" fill="rgb(244,89,52)" rx="2" ry="2" />
<text  x="925.10" y="911.5" ></text>
</g>
<g >
<title>kfree (92 samples, 0.02%)</title><rect x="369.0" y="709" width="0.3" height="15.0" fill="rgb(210,149,19)" rx="2" ry="2" />
<text  x="372.01" y="719.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (66 samples, 0.01%)</title><rect x="977.7" y="965" width="0.1" height="15.0" fill="rgb(212,155,11)" rx="2" ry="2" />
<text  x="980.67" y="975.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (81 samples, 0.02%)</title><rect x="11.9" y="1221" width="0.2" height="15.0" fill="rgb(244,116,48)" rx="2" ry="2" />
<text  x="14.91" y="1231.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (46 samples, 0.01%)</title><rect x="1073.6" y="757" width="0.1" height="15.0" fill="rgb(252,17,29)" rx="2" ry="2" />
<text  x="1076.60" y="767.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (515 samples, 0.11%)</title><rect x="757.0" y="1061" width="1.3" height="15.0" fill="rgb(221,133,35)" rx="2" ry="2" />
<text  x="759.96" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (424 samples, 0.09%)</title><rect x="641.9" y="805" width="1.1" height="15.0" fill="rgb(235,158,21)" rx="2" ry="2" />
<text  x="644.93" y="815.5" ></text>
</g>
<g >
<title>_IO_new_file_write (10,072 samples, 2.22%)</title><rect x="704.2" y="869" width="26.2" height="15.0" fill="rgb(211,137,52)" rx="2" ry="2" />
<text  x="707.23" y="879.5" >_..</text>
</g>
<g >
<title>update_load_avg (46 samples, 0.01%)</title><rect x="574.5" y="581" width="0.1" height="15.0" fill="rgb(241,67,36)" rx="2" ry="2" />
<text  x="577.50" y="591.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (184 samples, 0.04%)</title><rect x="780.9" y="997" width="0.5" height="15.0" fill="rgb(218,18,3)" rx="2" ry="2" />
<text  x="783.90" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (185 samples, 0.04%)</title><rect x="1175.4" y="1029" width="0.5" height="15.0" fill="rgb(227,115,39)" rx="2" ry="2" />
<text  x="1178.44" y="1039.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (8,376 samples, 1.84%)</title><rect x="1041.3" y="949" width="21.7" height="15.0" fill="rgb(230,60,21)" rx="2" ry="2" />
<text  x="1044.27" y="959.5" >_..</text>
</g>
<g >
<title>spdlog::logger::info&lt;char const  (21,366 samples, 4.70%)</title><rect x="914.2" y="1029" width="55.5" height="15.0" fill="rgb(232,182,18)" rx="2" ry="2" />
<text  x="917.15" y="1039.5" >spdlo..</text>
</g>
<g >
<title>_int_free (54 samples, 0.01%)</title><rect x="911.0" y="949" width="0.2" height="15.0" fill="rgb(240,154,35)" rx="2" ry="2" />
<text  x="914.03" y="959.5" ></text>
</g>
<g >
<title>sock_put (59 samples, 0.01%)</title><rect x="404.7" y="517" width="0.2" height="15.0" fill="rgb(253,83,2)" rx="2" ry="2" />
<text  x="407.71" y="527.5" ></text>
</g>
<g >
<title>spdlog::logger::should_flush_ (42 samples, 0.01%)</title><rect x="635.5" y="965" width="0.1" height="15.0" fill="rgb(246,194,15)" rx="2" ry="2" />
<text  x="638.50" y="975.5" ></text>
</g>
<g >
<title>__sprintf (1,251 samples, 0.28%)</title><rect x="1171.6" y="1045" width="3.3" height="15.0" fill="rgb(219,64,37)" rx="2" ry="2" />
<text  x="1174.61" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1269" width="860.0" height="15.0" fill="rgb(244,205,0)" rx="2" ry="2" />
<text  x="161.66" y="1279.5" >std::function&lt;void </text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (85 samples, 0.02%)</title><rect x="1071.3" y="757" width="0.2" height="15.0" fill="rgb(246,55,27)" rx="2" ry="2" />
<text  x="1074.26" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (226 samples, 0.05%)</title><rect x="784.9" y="949" width="0.6" height="15.0" fill="rgb(225,34,21)" rx="2" ry="2" />
<text  x="787.92" y="959.5" ></text>
</g>
<g >
<title>syscall_exit_work (67 samples, 0.01%)</title><rect x="234.9" y="885" width="0.2" height="15.0" fill="rgb(212,92,28)" rx="2" ry="2" />
<text  x="237.90" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (144 samples, 0.03%)</title><rect x="284.7" y="885" width="0.3" height="15.0" fill="rgb(243,131,41)" rx="2" ry="2" />
<text  x="287.67" y="895.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (103 samples, 0.02%)</title><rect x="688.8" y="965" width="0.2" height="15.0" fill="rgb(252,173,46)" rx="2" ry="2" />
<text  x="691.77" y="975.5" ></text>
</g>
<g >
<title>kmalloc_slab (71 samples, 0.02%)</title><rect x="454.2" y="757" width="0.2" height="15.0" fill="rgb(239,174,22)" rx="2" ry="2" />
<text  x="457.22" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (365 samples, 0.08%)</title><rect x="424.7" y="389" width="1.0" height="15.0" fill="rgb(229,20,16)" rx="2" ry="2" />
<text  x="427.75" y="399.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (145 samples, 0.03%)</title><rect x="428.3" y="389" width="0.4" height="15.0" fill="rgb(220,32,7)" rx="2" ry="2" />
<text  x="431.30" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (39 samples, 0.01%)</title><rect x="1031.5" y="821" width="0.1" height="15.0" fill="rgb(235,41,6)" rx="2" ry="2" />
<text  x="1034.54" y="831.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (51 samples, 0.01%)</title><rect x="1031.5" y="837" width="0.1" height="15.0" fill="rgb(246,10,48)" rx="2" ry="2" />
<text  x="1034.51" y="847.5" ></text>
</g>
<g >
<title>available_idle_cpu (40 samples, 0.01%)</title><rect x="345.1" y="581" width="0.1" height="15.0" fill="rgb(233,11,20)" rx="2" ry="2" />
<text  x="348.12" y="591.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (92 samples, 0.02%)</title><rect x="1032.3" y="933" width="0.2" height="15.0" fill="rgb(207,34,26)" rx="2" ry="2" />
<text  x="1035.29" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (67 samples, 0.01%)</title><rect x="790.0" y="1029" width="0.2" height="15.0" fill="rgb(219,85,33)" rx="2" ry="2" />
<text  x="793.05" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (188 samples, 0.04%)</title><rect x="238.0" y="917" width="0.5" height="15.0" fill="rgb(234,228,16)" rx="2" ry="2" />
<text  x="240.98" y="927.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (83 samples, 0.02%)</title><rect x="549.2" y="501" width="0.2" height="15.0" fill="rgb(205,172,1)" rx="2" ry="2" />
<text  x="552.18" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::function&lt;void  (62 samples, 0.01%)</title><rect x="41.6" y="1301" width="0.2" height="15.0" fill="rgb(216,229,11)" rx="2" ry="2" />
<text  x="44.62" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock (61 samples, 0.01%)</title><rect x="842.7" y="917" width="0.1" height="15.0" fill="rgb(226,164,35)" rx="2" ry="2" />
<text  x="845.69" y="927.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (42 samples, 0.01%)</title><rect x="178.5" y="581" width="0.1" height="15.0" fill="rgb(231,192,26)" rx="2" ry="2" />
<text  x="181.48" y="591.5" ></text>
</g>
<g >
<title>tcp_data_queue (1,723 samples, 0.38%)</title><rect x="1095.8" y="421" width="4.5" height="15.0" fill="rgb(238,134,2)" rx="2" ry="2" />
<text  x="1098.78" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;webserver::HttpConnection&gt;::operator (687 samples, 0.15%)</title><rect x="274.5" y="821" width="1.8" height="15.0" fill="rgb(213,149,10)" rx="2" ry="2" />
<text  x="277.48" y="831.5" ></text>
</g>
<g >
<title>update_cfs_group (44 samples, 0.01%)</title><rect x="207.1" y="69" width="0.2" height="15.0" fill="rgb(222,210,47)" rx="2" ry="2" />
<text  x="210.15" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (130 samples, 0.03%)</title><rect x="512.8" y="901" width="0.4" height="15.0" fill="rgb(237,163,48)" rx="2" ry="2" />
<text  x="515.82" y="911.5" ></text>
</g>
<g >
<title>do_futex (746 samples, 0.16%)</title><rect x="731.1" y="821" width="2.0" height="15.0" fill="rgb(212,14,51)" rx="2" ry="2" />
<text  x="734.15" y="831.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (281 samples, 0.06%)</title><rect x="525.5" y="773" width="0.8" height="15.0" fill="rgb(211,40,43)" rx="2" ry="2" />
<text  x="528.52" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_free (80 samples, 0.02%)</title><rect x="982.5" y="933" width="0.3" height="15.0" fill="rgb(240,110,17)" rx="2" ry="2" />
<text  x="985.55" y="943.5" ></text>
</g>
<g >
<title>uprobe_munmap (52 samples, 0.01%)</title><rect x="844.7" y="917" width="0.1" height="15.0" fill="rgb(247,194,38)" rx="2" ry="2" />
<text  x="847.66" y="927.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (70 samples, 0.02%)</title><rect x="639.5" y="853" width="0.1" height="15.0" fill="rgb(218,191,46)" rx="2" ry="2" />
<text  x="642.45" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (372 samples, 0.08%)</title><rect x="646.6" y="917" width="1.0" height="15.0" fill="rgb(250,169,32)" rx="2" ry="2" />
<text  x="649.61" y="927.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (68 samples, 0.01%)</title><rect x="971.0" y="1029" width="0.2" height="15.0" fill="rgb(241,191,20)" rx="2" ry="2" />
<text  x="974.03" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (283 samples, 0.06%)</title><rect x="969.8" y="1045" width="0.7" height="15.0" fill="rgb(211,108,21)" rx="2" ry="2" />
<text  x="972.81" y="1055.5" ></text>
</g>
<g >
<title>webserver::EventLoop::loop (61,906 samples, 13.63%)</title><rect x="1018.7" y="1269" width="160.9" height="15.0" fill="rgb(212,142,45)" rx="2" ry="2" />
<text  x="1021.74" y="1279.5" >webserver::EventLoop..</text>
</g>
<g >
<title>pick_file (112 samples, 0.02%)</title><rect x="172.5" y="645" width="0.3" height="15.0" fill="rgb(242,85,24)" rx="2" ry="2" />
<text  x="175.47" y="655.5" ></text>
</g>
<g >
<title>update_load_avg (39 samples, 0.01%)</title><rect x="675.1" y="725" width="0.1" height="15.0" fill="rgb(245,175,20)" rx="2" ry="2" />
<text  x="678.08" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (124 samples, 0.03%)</title><rect x="1039.3" y="853" width="0.3" height="15.0" fill="rgb(226,104,28)" rx="2" ry="2" />
<text  x="1042.27" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (51 samples, 0.01%)</title><rect x="1026.5" y="997" width="0.2" height="15.0" fill="rgb(205,92,9)" rx="2" ry="2" />
<text  x="1029.53" y="1007.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::details::flag_formatter*, false&gt;::_M_head (210 samples, 0.05%)</title><rect x="71.0" y="1301" width="0.5" height="15.0" fill="rgb(221,80,38)" rx="2" ry="2" />
<text  x="73.96" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (71 samples, 0.02%)</title><rect x="1037.5" y="917" width="0.2" height="15.0" fill="rgb(224,228,32)" rx="2" ry="2" />
<text  x="1040.48" y="927.5" ></text>
</g>
<g >
<title>net_rx_action (341 samples, 0.08%)</title><rect x="1086.2" y="549" width="0.9" height="15.0" fill="rgb(216,62,5)" rx="2" ry="2" />
<text  x="1089.20" y="559.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (100 samples, 0.02%)</title><rect x="1031.7" y="885" width="0.3" height="15.0" fill="rgb(251,155,25)" rx="2" ry="2" />
<text  x="1034.73" y="895.5" ></text>
</g>
<g >
<title>___slab_alloc (81 samples, 0.02%)</title><rect x="455.4" y="741" width="0.2" height="15.0" fill="rgb(225,12,10)" rx="2" ry="2" />
<text  x="458.41" y="751.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (209 samples, 0.05%)</title><rect x="311.2" y="757" width="0.5" height="15.0" fill="rgb(224,18,39)" rx="2" ry="2" />
<text  x="314.16" y="767.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (68 samples, 0.01%)</title><rect x="1037.7" y="949" width="0.2" height="15.0" fill="rgb(210,123,7)" rx="2" ry="2" />
<text  x="1040.69" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (85 samples, 0.02%)</title><rect x="982.5" y="949" width="0.3" height="15.0" fill="rgb(229,165,21)" rx="2" ry="2" />
<text  x="985.55" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (72 samples, 0.02%)</title><rect x="913.0" y="981" width="0.1" height="15.0" fill="rgb(240,76,9)" rx="2" ry="2" />
<text  x="915.96" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (488 samples, 0.11%)</title><rect x="893.5" y="1061" width="1.3" height="15.0" fill="rgb(211,149,43)" rx="2" ry="2" />
<text  x="896.49" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (905 samples, 0.20%)</title><rect x="774.6" y="917" width="2.3" height="15.0" fill="rgb(207,220,6)" rx="2" ry="2" />
<text  x="777.59" y="927.5" ></text>
</g>
<g >
<title>native_write_msr (82 samples, 0.02%)</title><rect x="960.5" y="661" width="0.3" height="15.0" fill="rgb(211,192,21)" rx="2" ry="2" />
<text  x="963.55" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (53 samples, 0.01%)</title><rect x="24.3" y="1301" width="0.1" height="15.0" fill="rgb(230,77,47)" rx="2" ry="2" />
<text  x="27.30" y="1311.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (92 samples, 0.02%)</title><rect x="333.1" y="517" width="0.2" height="15.0" fill="rgb(213,143,50)" rx="2" ry="2" />
<text  x="336.11" y="527.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (2,871 samples, 0.63%)</title><rect x="260.9" y="917" width="7.4" height="15.0" fill="rgb(232,118,24)" rx="2" ry="2" />
<text  x="263.87" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (879 samples, 0.19%)</title><rect x="999.7" y="949" width="2.3" height="15.0" fill="rgb(248,175,34)" rx="2" ry="2" />
<text  x="1002.67" y="959.5" ></text>
</g>
<g >
<title>mutex_lock (191 samples, 0.04%)</title><rect x="715.0" y="725" width="0.5" height="15.0" fill="rgb(249,132,10)" rx="2" ry="2" />
<text  x="718.05" y="735.5" ></text>
</g>
<g >
<title>__schedule (1,807 samples, 0.40%)</title><rect x="673.0" y="757" width="4.7" height="15.0" fill="rgb(221,51,54)" rx="2" ry="2" />
<text  x="676.04" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (53 samples, 0.01%)</title><rect x="621.5" y="869" width="0.2" height="15.0" fill="rgb(228,167,38)" rx="2" ry="2" />
<text  x="624.55" y="879.5" ></text>
</g>
<g >
<title>_IO_no_init (82 samples, 0.02%)</title><rect x="1171.9" y="1013" width="0.2" height="15.0" fill="rgb(231,205,28)" rx="2" ry="2" />
<text  x="1174.89" y="1023.5" ></text>
</g>
<g >
<title>_IO_new_do_write (8,565 samples, 1.89%)</title><rect x="934.6" y="869" width="22.3" height="15.0" fill="rgb(225,89,1)" rx="2" ry="2" />
<text  x="937.62" y="879.5" >_..</text>
</g>
<g >
<title>std::__cxx11::to_string (576 samples, 0.13%)</title><rect x="359.2" y="853" width="1.5" height="15.0" fill="rgb(224,208,50)" rx="2" ry="2" />
<text  x="362.16" y="863.5" ></text>
</g>
<g >
<title>__fget_files (174 samples, 0.04%)</title><rect x="746.6" y="885" width="0.5" height="15.0" fill="rgb(214,30,41)" rx="2" ry="2" />
<text  x="749.63" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,172 samples, 0.26%)</title><rect x="1014.0" y="885" width="3.0" height="15.0" fill="rgb(220,187,36)" rx="2" ry="2" />
<text  x="1016.96" y="895.5" ></text>
</g>
<g >
<title>ksys_write (7,289 samples, 1.60%)</title><rect x="935.7" y="773" width="18.9" height="15.0" fill="rgb(254,127,18)" rx="2" ry="2" />
<text  x="938.70" y="783.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (18,533 samples, 4.08%)</title><rect x="691.5" y="965" width="48.1" height="15.0" fill="rgb(213,69,19)" rx="2" ry="2" />
<text  x="694.47" y="975.5" >spdl..</text>
</g>
<g >
<title>syscall_return_via_sysret (51 samples, 0.01%)</title><rect x="968.1" y="853" width="0.1" height="15.0" fill="rgb(212,109,42)" rx="2" ry="2" />
<text  x="971.09" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (115 samples, 0.03%)</title><rect x="972.6" y="1013" width="0.3" height="15.0" fill="rgb(246,73,2)" rx="2" ry="2" />
<text  x="975.64" y="1023.5" ></text>
</g>
<g >
<title>iput (137 samples, 0.03%)</title><rect x="179.2" y="597" width="0.3" height="15.0" fill="rgb(226,59,12)" rx="2" ry="2" />
<text  x="182.18" y="607.5" ></text>
</g>
<g >
<title>_IO_no_init (101 samples, 0.02%)</title><rect x="612.4" y="853" width="0.3" height="15.0" fill="rgb(233,189,15)" rx="2" ry="2" />
<text  x="615.40" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (498 samples, 0.11%)</title><rect x="629.9" y="1061" width="1.2" height="15.0" fill="rgb(221,197,0)" rx="2" ry="2" />
<text  x="632.85" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (648 samples, 0.14%)</title><rect x="1169.0" y="1029" width="1.7" height="15.0" fill="rgb(205,164,22)" rx="2" ry="2" />
<text  x="1172.00" y="1039.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (84 samples, 0.02%)</title><rect x="892.2" y="981" width="0.2" height="15.0" fill="rgb(228,29,4)" rx="2" ry="2" />
<text  x="895.17" y="991.5" ></text>
</g>
<g >
<title>spdlog::logger::log (69 samples, 0.02%)</title><rect x="628.7" y="1029" width="0.2" height="15.0" fill="rgb(213,123,44)" rx="2" ry="2" />
<text  x="631.68" y="1039.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;int, int&gt; (399 samples, 0.09%)</title><rect x="161.5" y="1061" width="1.0" height="15.0" fill="rgb(233,226,24)" rx="2" ry="2" />
<text  x="164.49" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,632 samples, 0.58%)</title><rect x="563.2" y="709" width="6.8" height="15.0" fill="rgb(223,170,51)" rx="2" ry="2" />
<text  x="566.17" y="719.5" ></text>
</g>
<g >
<title>std::mutex::unlock (127 samples, 0.03%)</title><rect x="1112.1" y="1045" width="0.3" height="15.0" fill="rgb(212,29,50)" rx="2" ry="2" />
<text  x="1115.09" y="1055.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (727 samples, 0.16%)</title><rect x="335.0" y="629" width="1.9" height="15.0" fill="rgb(234,190,9)" rx="2" ry="2" />
<text  x="337.96" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (99 samples, 0.02%)</title><rect x="1005.4" y="917" width="0.2" height="15.0" fill="rgb(250,189,2)" rx="2" ry="2" />
<text  x="1008.35" y="927.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (58 samples, 0.01%)</title><rect x="914.0" y="1029" width="0.2" height="15.0" fill="rgb(249,51,39)" rx="2" ry="2" />
<text  x="917.00" y="1039.5" ></text>
</g>
<g >
<title>evict (506 samples, 0.11%)</title><rect x="177.9" y="597" width="1.3" height="15.0" fill="rgb(210,172,28)" rx="2" ry="2" />
<text  x="180.86" y="607.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (55 samples, 0.01%)</title><rect x="171.8" y="709" width="0.2" height="15.0" fill="rgb(219,217,1)" rx="2" ry="2" />
<text  x="174.81" y="719.5" ></text>
</g>
<g >
<title>downgrade_write (83 samples, 0.02%)</title><rect x="824.3" y="965" width="0.2" height="15.0" fill="rgb(249,130,1)" rx="2" ry="2" />
<text  x="827.33" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,129 samples, 0.47%)</title><rect x="563.2" y="693" width="5.6" height="15.0" fill="rgb(229,35,45)" rx="2" ry="2" />
<text  x="566.24" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (53 samples, 0.01%)</title><rect x="693.0" y="933" width="0.1" height="15.0" fill="rgb(209,120,53)" rx="2" ry="2" />
<text  x="695.95" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (68 samples, 0.01%)</title><rect x="1144.9" y="1077" width="0.1" height="15.0" fill="rgb(252,150,35)" rx="2" ry="2" />
<text  x="1147.86" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (86 samples, 0.02%)</title><rect x="1078.7" y="933" width="0.3" height="15.0" fill="rgb(249,180,45)" rx="2" ry="2" />
<text  x="1081.73" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (56 samples, 0.01%)</title><rect x="620.2" y="853" width="0.1" height="15.0" fill="rgb(239,226,49)" rx="2" ry="2" />
<text  x="623.18" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (53 samples, 0.01%)</title><rect x="589.6" y="709" width="0.1" height="15.0" fill="rgb(250,109,12)" rx="2" ry="2" />
<text  x="592.60" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void  (42,737 samples, 9.41%)</title><rect x="511.2" y="1093" width="111.0" height="15.0" fill="rgb(219,75,22)" rx="2" ry="2" />
<text  x="514.19" y="1103.5" >std::function..</text>
</g>
<g >
<title>__x86_indirect_thunk_r13 (56 samples, 0.01%)</title><rect x="883.6" y="917" width="0.1" height="15.0" fill="rgb(239,173,8)" rx="2" ry="2" />
<text  x="886.58" y="927.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,438 samples, 0.32%)</title><rect x="958.7" y="757" width="3.7" height="15.0" fill="rgb(211,38,24)" rx="2" ry="2" />
<text  x="961.66" y="767.5" ></text>
</g>
<g >
<title>__fget_files (125 samples, 0.03%)</title><rect x="651.9" y="757" width="0.4" height="15.0" fill="rgb(210,58,16)" rx="2" ry="2" />
<text  x="654.93" y="767.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (50 samples, 0.01%)</title><rect x="1038.2" y="821" width="0.2" height="15.0" fill="rgb(244,144,54)" rx="2" ry="2" />
<text  x="1041.24" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (130 samples, 0.03%)</title><rect x="969.3" y="949" width="0.3" height="15.0" fill="rgb(209,23,38)" rx="2" ry="2" />
<text  x="972.26" y="959.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (3,292 samples, 0.72%)</title><rect x="671.2" y="949" width="8.5" height="15.0" fill="rgb(220,202,23)" rx="2" ry="2" />
<text  x="674.19" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_lock (63 samples, 0.01%)</title><rect x="1051.4" y="693" width="0.2" height="15.0" fill="rgb(216,135,16)" rx="2" ry="2" />
<text  x="1054.41" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (39 samples, 0.01%)</title><rect x="1005.1" y="933" width="0.1" height="15.0" fill="rgb(232,43,6)" rx="2" ry="2" />
<text  x="1008.10" y="943.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (58 samples, 0.01%)</title><rect x="1013.8" y="885" width="0.2" height="15.0" fill="rgb(222,224,40)" rx="2" ry="2" />
<text  x="1016.81" y="895.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (81 samples, 0.02%)</title><rect x="1038.2" y="885" width="0.2" height="15.0" fill="rgb(249,58,42)" rx="2" ry="2" />
<text  x="1041.17" y="895.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (55 samples, 0.01%)</title><rect x="179.4" y="581" width="0.1" height="15.0" fill="rgb(227,153,36)" rx="2" ry="2" />
<text  x="182.38" y="591.5" ></text>
</g>
<g >
<title>__ksize (81 samples, 0.02%)</title><rect x="407.8" y="453" width="0.2" height="15.0" fill="rgb(237,37,22)" rx="2" ry="2" />
<text  x="410.76" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (1,243 samples, 0.27%)</title><rect x="767.9" y="1061" width="3.3" height="15.0" fill="rgb(224,28,19)" rx="2" ry="2" />
<text  x="770.93" y="1071.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (390 samples, 0.09%)</title><rect x="1111.0" y="1077" width="1.0" height="15.0" fill="rgb(229,3,42)" rx="2" ry="2" />
<text  x="1113.98" y="1087.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (84 samples, 0.02%)</title><rect x="924.1" y="885" width="0.3" height="15.0" fill="rgb(229,10,11)" rx="2" ry="2" />
<text  x="927.14" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (311 samples, 0.07%)</title><rect x="106.7" y="1301" width="0.8" height="15.0" fill="rgb(236,203,40)" rx="2" ry="2" />
<text  x="109.69" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (957 samples, 0.21%)</title><rect x="263.3" y="821" width="2.5" height="15.0" fill="rgb(215,170,43)" rx="2" ry="2" />
<text  x="266.28" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (69 samples, 0.02%)</title><rect x="69.8" y="1301" width="0.1" height="15.0" fill="rgb(206,212,50)" rx="2" ry="2" />
<text  x="72.77" y="1311.5" ></text>
</g>
<g >
<title>ldsem_down_read (43 samples, 0.01%)</title><rect x="1060.0" y="741" width="0.1" height="15.0" fill="rgb(227,38,34)" rx="2" ry="2" />
<text  x="1063.01" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (45 samples, 0.01%)</title><rect x="794.0" y="1013" width="0.1" height="15.0" fill="rgb(207,122,46)" rx="2" ry="2" />
<text  x="796.99" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_free (146 samples, 0.03%)</title><rect x="1083.8" y="805" width="0.4" height="15.0" fill="rgb(222,140,50)" rx="2" ry="2" />
<text  x="1086.79" y="815.5" ></text>
</g>
<g >
<title>tcp_release_cb (45 samples, 0.01%)</title><rect x="752.5" y="917" width="0.1" height="15.0" fill="rgb(235,80,36)" rx="2" ry="2" />
<text  x="755.45" y="927.5" ></text>
</g>
<g >
<title>update_curr (218 samples, 0.05%)</title><rect x="483.6" y="933" width="0.6" height="15.0" fill="rgb(252,156,0)" rx="2" ry="2" />
<text  x="486.61" y="943.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt; (47 samples, 0.01%)</title><rect x="743.1" y="1013" width="0.1" height="15.0" fill="rgb(247,34,14)" rx="2" ry="2" />
<text  x="746.12" y="1023.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (77 samples, 0.02%)</title><rect x="700.2" y="869" width="0.2" height="15.0" fill="rgb(253,211,46)" rx="2" ry="2" />
<text  x="703.16" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (47 samples, 0.01%)</title><rect x="1002.4" y="949" width="0.1" height="15.0" fill="rgb(208,6,41)" rx="2" ry="2" />
<text  x="1005.38" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (130 samples, 0.03%)</title><rect x="740.4" y="1029" width="0.4" height="15.0" fill="rgb(206,13,5)" rx="2" ry="2" />
<text  x="743.44" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (634 samples, 0.14%)</title><rect x="763.4" y="1029" width="1.6" height="15.0" fill="rgb(244,150,18)" rx="2" ry="2" />
<text  x="766.37" y="1039.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (176 samples, 0.04%)</title><rect x="151.6" y="1285" width="0.4" height="15.0" fill="rgb(239,174,20)" rx="2" ry="2" />
<text  x="154.58" y="1295.5" ></text>
</g>
<g >
<title>eventfd_write (6,084 samples, 1.34%)</title><rect x="1118.7" y="981" width="15.8" height="15.0" fill="rgb(207,170,42)" rx="2" ry="2" />
<text  x="1121.73" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (36,836 samples, 8.11%)</title><rect x="364.0" y="885" width="95.8" height="15.0" fill="rgb(254,128,11)" rx="2" ry="2" />
<text  x="367.04" y="895.5" >__x64_sys_s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (246 samples, 0.05%)</title><rect x="792.8" y="1045" width="0.6" height="15.0" fill="rgb(226,131,21)" rx="2" ry="2" />
<text  x="795.78" y="1055.5" ></text>
</g>
<g >
<title>sock_def_readable (6,517 samples, 1.43%)</title><rect x="420.9" y="469" width="16.9" height="15.0" fill="rgb(212,12,33)" rx="2" ry="2" />
<text  x="423.88" y="479.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (210 samples, 0.05%)</title><rect x="58.3" y="1301" width="0.5" height="15.0" fill="rgb(237,143,27)" rx="2" ry="2" />
<text  x="61.26" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;spdlog::sinks::sink,  (150 samples, 0.03%)</title><rect x="106.3" y="1301" width="0.4" height="15.0" fill="rgb(230,32,5)" rx="2" ry="2" />
<text  x="109.30" y="1311.5" ></text>
</g>
<g >
<title>try_to_unlazy (288 samples, 0.06%)</title><rect x="856.0" y="933" width="0.7" height="15.0" fill="rgb(230,216,13)" rx="2" ry="2" />
<text  x="858.99" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (21,341 samples, 4.70%)</title><rect x="166.5" y="997" width="55.5" height="15.0" fill="rgb(214,89,17)" rx="2" ry="2" />
<text  x="169.53" y="1007.5" >std::..</text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (39 samples, 0.01%)</title><rect x="700.2" y="805" width="0.1" height="15.0" fill="rgb(234,112,20)" rx="2" ry="2" />
<text  x="703.21" y="815.5" ></text>
</g>
<g >
<title>path_lookupat (3,102 samples, 0.68%)</title><rect x="855.8" y="965" width="8.0" height="15.0" fill="rgb(218,193,0)" rx="2" ry="2" />
<text  x="858.76" y="975.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (104 samples, 0.02%)</title><rect x="997.0" y="1013" width="0.3" height="15.0" fill="rgb(224,172,22)" rx="2" ry="2" />
<text  x="1000.04" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (39 samples, 0.01%)</title><rect x="97.1" y="1301" width="0.1" height="15.0" fill="rgb(224,55,1)" rx="2" ry="2" />
<text  x="100.15" y="1311.5" ></text>
</g>
<g >
<title>vfs_write (7,193 samples, 1.58%)</title><rect x="316.2" y="613" width="18.7" height="15.0" fill="rgb(246,147,31)" rx="2" ry="2" />
<text  x="319.18" y="623.5" ></text>
</g>
<g >
<title>tcp_poll (278 samples, 0.06%)</title><rect x="473.9" y="981" width="0.7" height="15.0" fill="rgb(206,210,36)" rx="2" ry="2" />
<text  x="476.88" y="991.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (306 samples, 0.07%)</title><rect x="747.2" y="901" width="0.8" height="15.0" fill="rgb(211,197,54)" rx="2" ry="2" />
<text  x="750.18" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (20,937 samples, 4.61%)</title><rect x="167.5" y="933" width="54.4" height="15.0" fill="rgb(230,132,14)" rx="2" ry="2" />
<text  x="170.54" y="943.5" >std::..</text>
</g>
<g >
<title>std::__weak_ptr&lt;webserver::Channel,  (79 samples, 0.02%)</title><rect x="1144.1" y="949" width="0.2" height="15.0" fill="rgb(205,147,16)" rx="2" ry="2" />
<text  x="1147.13" y="959.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (10,330 samples, 2.27%)</title><rect x="703.7" y="949" width="26.8" height="15.0" fill="rgb(206,50,51)" rx="2" ry="2" />
<text  x="706.65" y="959.5" >s..</text>
</g>
<g >
<title>std::_Function_base::_M_empty (49 samples, 0.01%)</title><rect x="68.8" y="1301" width="0.1" height="15.0" fill="rgb(208,114,35)" rx="2" ry="2" />
<text  x="71.77" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (45 samples, 0.01%)</title><rect x="448.2" y="757" width="0.1" height="15.0" fill="rgb(251,63,17)" rx="2" ry="2" />
<text  x="451.23" y="767.5" ></text>
</g>
<g >
<title>__update_load_avg_se (120 samples, 0.03%)</title><rect x="431.7" y="325" width="0.4" height="15.0" fill="rgb(252,52,17)" rx="2" ry="2" />
<text  x="434.74" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (148 samples, 0.03%)</title><rect x="533.8" y="709" width="0.4" height="15.0" fill="rgb(215,196,37)" rx="2" ry="2" />
<text  x="536.81" y="719.5" ></text>
</g>
<g >
<title>reweight_entity (79 samples, 0.02%)</title><rect x="1126.8" y="821" width="0.2" height="15.0" fill="rgb(254,39,41)" rx="2" ry="2" />
<text  x="1129.81" y="831.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (109 samples, 0.02%)</title><rect x="656.5" y="677" width="0.3" height="15.0" fill="rgb(220,120,54)" rx="2" ry="2" />
<text  x="659.55" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (152 samples, 0.03%)</title><rect x="579.5" y="933" width="0.4" height="15.0" fill="rgb(206,11,29)" rx="2" ry="2" />
<text  x="582.51" y="943.5" ></text>
</g>
<g >
<title>std::pair&lt;bool, std::shared_ptr&lt;webserver::TcpSocket&gt; &gt;::pair&lt;bool, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, true&gt; (104 samples, 0.02%)</title><rect x="1170.7" y="1077" width="0.3" height="15.0" fill="rgb(228,225,34)" rx="2" ry="2" />
<text  x="1173.73" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (172 samples, 0.04%)</title><rect x="259.0" y="933" width="0.4" height="15.0" fill="rgb(215,82,44)" rx="2" ry="2" />
<text  x="261.97" y="943.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (83 samples, 0.02%)</title><rect x="415.6" y="341" width="0.3" height="15.0" fill="rgb(226,9,15)" rx="2" ry="2" />
<text  x="418.64" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (44 samples, 0.01%)</title><rect x="74.8" y="1301" width="0.1" height="15.0" fill="rgb(209,199,49)" rx="2" ry="2" />
<text  x="77.77" y="1311.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (1,590 samples, 0.35%)</title><rect x="343.4" y="741" width="4.1" height="15.0" fill="rgb(248,141,52)" rx="2" ry="2" />
<text  x="346.38" y="751.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (48 samples, 0.01%)</title><rect x="749.7" y="933" width="0.1" height="15.0" fill="rgb(212,64,17)" rx="2" ry="2" />
<text  x="752.66" y="943.5" ></text>
</g>
<g >
<title>futex_wait (1,446 samples, 0.32%)</title><rect x="1064.3" y="821" width="3.7" height="15.0" fill="rgb(226,218,19)" rx="2" ry="2" />
<text  x="1067.29" y="831.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (44 samples, 0.01%)</title><rect x="1037.0" y="917" width="0.2" height="15.0" fill="rgb(230,175,9)" rx="2" ry="2" />
<text  x="1040.05" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (98 samples, 0.02%)</title><rect x="282.5" y="805" width="0.3" height="15.0" fill="rgb(254,191,12)" rx="2" ry="2" />
<text  x="285.50" y="815.5" ></text>
</g>
<g >
<title>page_add_file_rmap (396 samples, 0.09%)</title><rect x="901.9" y="821" width="1.0" height="15.0" fill="rgb(230,63,37)" rx="2" ry="2" />
<text  x="904.85" y="831.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (133 samples, 0.03%)</title><rect x="919.7" y="917" width="0.4" height="15.0" fill="rgb(248,197,9)" rx="2" ry="2" />
<text  x="922.75" y="927.5" ></text>
</g>
<g >
<title>pick_next_task_fair (399 samples, 0.09%)</title><rect x="486.2" y="965" width="1.0" height="15.0" fill="rgb(242,121,27)" rx="2" ry="2" />
<text  x="489.17" y="975.5" ></text>
</g>
<g >
<title>__queue_work (78 samples, 0.02%)</title><rect x="1049.3" y="693" width="0.3" height="15.0" fill="rgb(243,15,27)" rx="2" ry="2" />
<text  x="1052.35" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,290 samples, 0.94%)</title><rect x="896.2" y="949" width="11.1" height="15.0" fill="rgb(234,79,47)" rx="2" ry="2" />
<text  x="899.16" y="959.5" ></text>
</g>
<g >
<title>mod_objcg_state (82 samples, 0.02%)</title><rect x="880.2" y="885" width="0.3" height="15.0" fill="rgb(252,125,6)" rx="2" ry="2" />
<text  x="883.25" y="895.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (50 samples, 0.01%)</title><rect x="17.8" y="1301" width="0.1" height="15.0" fill="rgb(219,142,32)" rx="2" ry="2" />
<text  x="20.76" y="1311.5" ></text>
</g>
<g >
<title>prepend_path (426 samples, 0.09%)</title><rect x="803.7" y="917" width="1.2" height="15.0" fill="rgb(238,166,11)" rx="2" ry="2" />
<text  x="806.75" y="927.5" ></text>
</g>
<g >
<title>nf_hook_slow (3,321 samples, 0.73%)</title><rect x="378.7" y="709" width="8.7" height="15.0" fill="rgb(219,50,27)" rx="2" ry="2" />
<text  x="381.73" y="719.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (2,295 samples, 0.51%)</title><rect x="1063.3" y="933" width="6.0" height="15.0" fill="rgb(214,142,30)" rx="2" ry="2" />
<text  x="1066.29" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (54 samples, 0.01%)</title><rect x="631.9" y="1029" width="0.2" height="15.0" fill="rgb(246,151,14)" rx="2" ry="2" />
<text  x="634.95" y="1039.5" ></text>
</g>
<g >
<title>enqueue_task (749 samples, 0.16%)</title><rect x="722.5" y="645" width="2.0" height="15.0" fill="rgb(220,121,34)" rx="2" ry="2" />
<text  x="725.52" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (205 samples, 0.05%)</title><rect x="168.0" y="869" width="0.5" height="15.0" fill="rgb(225,94,9)" rx="2" ry="2" />
<text  x="170.99" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (70 samples, 0.02%)</title><rect x="620.4" y="853" width="0.2" height="15.0" fill="rgb(226,27,17)" rx="2" ry="2" />
<text  x="623.44" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (58 samples, 0.01%)</title><rect x="68.9" y="1301" width="0.2" height="15.0" fill="rgb(239,170,7)" rx="2" ry="2" />
<text  x="71.90" y="1311.5" ></text>
</g>
<g >
<title>__queue_work (93 samples, 0.02%)</title><rect x="656.9" y="677" width="0.3" height="15.0" fill="rgb(228,14,19)" rx="2" ry="2" />
<text  x="659.91" y="687.5" ></text>
</g>
<g >
<title>operator new (188 samples, 0.04%)</title><rect x="1114.1" y="949" width="0.5" height="15.0" fill="rgb(217,226,24)" rx="2" ry="2" />
<text  x="1117.12" y="959.5" ></text>
</g>
<g >
<title>__remove_hrtimer (313 samples, 0.07%)</title><rect x="479.7" y="981" width="0.8" height="15.0" fill="rgb(216,198,49)" rx="2" ry="2" />
<text  x="482.70" y="991.5" ></text>
</g>
<g >
<title>sock_poll (210 samples, 0.05%)</title><rect x="264.9" y="773" width="0.6" height="15.0" fill="rgb(215,105,42)" rx="2" ry="2" />
<text  x="267.92" y="783.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (130 samples, 0.03%)</title><rect x="589.4" y="757" width="0.4" height="15.0" fill="rgb(241,169,43)" rx="2" ry="2" />
<text  x="592.42" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::data (47 samples, 0.01%)</title><rect x="504.7" y="1093" width="0.1" height="15.0" fill="rgb(206,155,25)" rx="2" ry="2" />
<text  x="507.67" y="1103.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (301 samples, 0.07%)</title><rect x="586.2" y="837" width="0.8" height="15.0" fill="rgb(245,0,51)" rx="2" ry="2" />
<text  x="589.17" y="847.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (152 samples, 0.03%)</title><rect x="892.5" y="1045" width="0.4" height="15.0" fill="rgb(231,126,54)" rx="2" ry="2" />
<text  x="895.50" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (44 samples, 0.01%)</title><rect x="1001.4" y="901" width="0.1" height="15.0" fill="rgb(234,51,37)" rx="2" ry="2" />
<text  x="1004.41" y="911.5" ></text>
</g>
<g >
<title>netif_rx (130 samples, 0.03%)</title><rect x="193.2" y="389" width="0.4" height="15.0" fill="rgb(222,65,33)" rx="2" ry="2" />
<text  x="196.24" y="399.5" ></text>
</g>
<g >
<title>tcp_release_cb (55 samples, 0.01%)</title><rect x="240.9" y="805" width="0.2" height="15.0" fill="rgb(230,180,29)" rx="2" ry="2" />
<text  x="243.93" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (154 samples, 0.03%)</title><rect x="970.0" y="1029" width="0.4" height="15.0" fill="rgb(234,216,9)" rx="2" ry="2" />
<text  x="973.03" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (94 samples, 0.02%)</title><rect x="517.9" y="613" width="0.2" height="15.0" fill="rgb(209,202,50)" rx="2" ry="2" />
<text  x="520.88" y="623.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (64 samples, 0.01%)</title><rect x="766.2" y="997" width="0.2" height="15.0" fill="rgb(228,183,0)" rx="2" ry="2" />
<text  x="769.24" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (91 samples, 0.02%)</title><rect x="276.6" y="853" width="0.3" height="15.0" fill="rgb(234,35,0)" rx="2" ry="2" />
<text  x="279.64" y="863.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1,176 samples, 0.26%)</title><rect x="974.9" y="981" width="3.1" height="15.0" fill="rgb(214,15,46)" rx="2" ry="2" />
<text  x="977.95" y="991.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (102 samples, 0.02%)</title><rect x="1006.8" y="949" width="0.2" height="15.0" fill="rgb(212,101,5)" rx="2" ry="2" />
<text  x="1009.75" y="959.5" ></text>
</g>
<g >
<title>__check_object_size (114 samples, 0.03%)</title><rect x="456.2" y="789" width="0.3" height="15.0" fill="rgb(245,143,6)" rx="2" ry="2" />
<text  x="459.22" y="799.5" ></text>
</g>
<g >
<title>std::make_unique&lt;webserver::HttpConnection, webserver::EventLoop*&amp;, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;&gt; (2,358 samples, 0.52%)</title><rect x="1138.5" y="1077" width="6.1" height="15.0" fill="rgb(237,41,47)" rx="2" ry="2" />
<text  x="1141.52" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (52 samples, 0.01%)</title><rect x="686.2" y="933" width="0.1" height="15.0" fill="rgb(237,58,5)" rx="2" ry="2" />
<text  x="689.19" y="943.5" ></text>
</g>
<g >
<title>_copy_from_user (78 samples, 0.02%)</title><rect x="745.8" y="917" width="0.2" height="15.0" fill="rgb(249,64,49)" rx="2" ry="2" />
<text  x="748.83" y="927.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (290 samples, 0.06%)</title><rect x="450.9" y="773" width="0.8" height="15.0" fill="rgb(249,192,32)" rx="2" ry="2" />
<text  x="453.93" y="783.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (266 samples, 0.06%)</title><rect x="902.0" y="805" width="0.7" height="15.0" fill="rgb(224,225,8)" rx="2" ry="2" />
<text  x="905.02" y="815.5" ></text>
</g>
<g >
<title>irqtime_account_irq (164 samples, 0.04%)</title><rect x="393.5" y="661" width="0.4" height="15.0" fill="rgb(249,155,40)" rx="2" ry="2" />
<text  x="396.49" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (101 samples, 0.02%)</title><rect x="156.0" y="1301" width="0.3" height="15.0" fill="rgb(211,192,28)" rx="2" ry="2" />
<text  x="159.00" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (541 samples, 0.12%)</title><rect x="618.3" y="901" width="1.4" height="15.0" fill="rgb(227,85,50)" rx="2" ry="2" />
<text  x="621.32" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (56 samples, 0.01%)</title><rect x="529.4" y="789" width="0.1" height="15.0" fill="rgb(214,197,37)" rx="2" ry="2" />
<text  x="532.39" y="799.5" ></text>
</g>
<g >
<title>std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~pair (111 samples, 0.02%)</title><rect x="350.1" y="789" width="0.3" height="15.0" fill="rgb(229,56,53)" rx="2" ry="2" />
<text  x="353.11" y="799.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1,093 samples, 0.24%)</title><rect x="247.0" y="805" width="2.8" height="15.0" fill="rgb(212,76,24)" rx="2" ry="2" />
<text  x="249.99" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (104 samples, 0.02%)</title><rect x="769.4" y="997" width="0.3" height="15.0" fill="rgb(254,34,6)" rx="2" ry="2" />
<text  x="772.39" y="1007.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (251 samples, 0.06%)</title><rect x="945.6" y="597" width="0.7" height="15.0" fill="rgb(220,78,22)" rx="2" ry="2" />
<text  x="948.60" y="607.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (106 samples, 0.02%)</title><rect x="1094.5" y="453" width="0.3" height="15.0" fill="rgb(235,18,36)" rx="2" ry="2" />
<text  x="1097.54" y="463.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (41 samples, 0.01%)</title><rect x="674.4" y="693" width="0.1" height="15.0" fill="rgb(225,212,5)" rx="2" ry="2" />
<text  x="677.35" y="703.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (7,528 samples, 1.66%)</title><rect x="585.3" y="885" width="19.5" height="15.0" fill="rgb(222,121,37)" rx="2" ry="2" />
<text  x="588.27" y="895.5" ></text>
</g>
<g >
<title>pick_next_task_fair (63 samples, 0.01%)</title><rect x="711.6" y="629" width="0.1" height="15.0" fill="rgb(206,164,25)" rx="2" ry="2" />
<text  x="714.59" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (496 samples, 0.11%)</title><rect x="257.7" y="933" width="1.3" height="15.0" fill="rgb(251,182,42)" rx="2" ry="2" />
<text  x="260.68" y="943.5" ></text>
</g>
<g >
<title>strncpy_from_user (150 samples, 0.03%)</title><rect x="890.2" y="965" width="0.4" height="15.0" fill="rgb(219,171,8)" rx="2" ry="2" />
<text  x="893.18" y="975.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1,044 samples, 0.23%)</title><rect x="400.3" y="517" width="2.7" height="15.0" fill="rgb(235,48,33)" rx="2" ry="2" />
<text  x="403.33" y="527.5" ></text>
</g>
<g >
<title>__schedule (131 samples, 0.03%)</title><rect x="545.2" y="501" width="0.3" height="15.0" fill="rgb(222,154,52)" rx="2" ry="2" />
<text  x="548.20" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output (92 samples, 0.02%)</title><rect x="416.3" y="437" width="0.3" height="15.0" fill="rgb(236,3,21)" rx="2" ry="2" />
<text  x="419.35" y="447.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (84 samples, 0.02%)</title><rect x="240.2" y="821" width="0.3" height="15.0" fill="rgb(241,122,9)" rx="2" ry="2" />
<text  x="243.24" y="831.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (121 samples, 0.03%)</title><rect x="1181.6" y="1317" width="0.3" height="15.0" fill="rgb(214,187,54)" rx="2" ry="2" />
<text  x="1184.58" y="1327.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (51 samples, 0.01%)</title><rect x="307.3" y="613" width="0.1" height="15.0" fill="rgb(221,220,22)" rx="2" ry="2" />
<text  x="310.30" y="623.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (87 samples, 0.02%)</title><rect x="309.7" y="757" width="0.2" height="15.0" fill="rgb(210,32,13)" rx="2" ry="2" />
<text  x="312.72" y="767.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (97 samples, 0.02%)</title><rect x="227.3" y="1077" width="0.2" height="15.0" fill="rgb(245,69,14)" rx="2" ry="2" />
<text  x="230.28" y="1087.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (42,228 samples, 9.30%)</title><rect x="512.3" y="997" width="109.7" height="15.0" fill="rgb(249,225,10)" rx="2" ry="2" />
<text  x="515.30" y="1007.5" >std::__invoke..</text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (199 samples, 0.04%)</title><rect x="1115.1" y="1029" width="0.5" height="15.0" fill="rgb(218,37,34)" rx="2" ry="2" />
<text  x="1118.12" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::data (60 samples, 0.01%)</title><rect x="51.7" y="1301" width="0.1" height="15.0" fill="rgb(227,97,16)" rx="2" ry="2" />
<text  x="54.69" y="1311.5" ></text>
</g>
<g >
<title>__bitmap_or_equal (43 samples, 0.01%)</title><rect x="838.9" y="869" width="0.1" height="15.0" fill="rgb(214,227,11)" rx="2" ry="2" />
<text  x="841.91" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (63 samples, 0.01%)</title><rect x="1108.0" y="901" width="0.1" height="15.0" fill="rgb(245,129,21)" rx="2" ry="2" />
<text  x="1110.95" y="911.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (47 samples, 0.01%)</title><rect x="851.0" y="949" width="0.1" height="15.0" fill="rgb(225,49,8)" rx="2" ry="2" />
<text  x="854.00" y="959.5" ></text>
</g>
<g >
<title>_int_free (150 samples, 0.03%)</title><rect x="283.4" y="741" width="0.4" height="15.0" fill="rgb(224,158,53)" rx="2" ry="2" />
<text  x="286.41" y="751.5" ></text>
</g>
<g >
<title>__fget_light (199 samples, 0.04%)</title><rect x="746.6" y="901" width="0.5" height="15.0" fill="rgb(254,14,25)" rx="2" ry="2" />
<text  x="749.56" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::detail::to_pointer&lt;char&gt; (88 samples, 0.02%)</title><rect x="1025.5" y="901" width="0.3" height="15.0" fill="rgb(246,18,1)" rx="2" ry="2" />
<text  x="1028.52" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (42 samples, 0.01%)</title><rect x="526.6" y="741" width="0.1" height="15.0" fill="rgb(206,25,12)" rx="2" ry="2" />
<text  x="529.60" y="751.5" ></text>
</g>
<g >
<title>lock_sock_nested (57 samples, 0.01%)</title><rect x="752.2" y="933" width="0.1" height="15.0" fill="rgb(251,176,26)" rx="2" ry="2" />
<text  x="755.15" y="943.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (44 samples, 0.01%)</title><rect x="126.5" y="1301" width="0.1" height="15.0" fill="rgb(220,56,12)" rx="2" ry="2" />
<text  x="129.47" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;int&gt; (271 samples, 0.06%)</title><rect x="923.2" y="885" width="0.7" height="15.0" fill="rgb(243,221,51)" rx="2" ry="2" />
<text  x="926.24" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::to_unsigned&lt;long&gt; (69 samples, 0.02%)</title><rect x="51.1" y="1301" width="0.2" height="15.0" fill="rgb(252,83,50)" rx="2" ry="2" />
<text  x="54.12" y="1311.5" ></text>
</g>
<g >
<title>webserver::EventLoop::is_in_loop_thread (40 samples, 0.01%)</title><rect x="268.2" y="901" width="0.1" height="15.0" fill="rgb(253,156,33)" rx="2" ry="2" />
<text  x="271.22" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (53 samples, 0.01%)</title><rect x="690.6" y="981" width="0.1" height="15.0" fill="rgb(206,50,1)" rx="2" ry="2" />
<text  x="693.56" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (304 samples, 0.07%)</title><rect x="361.9" y="837" width="0.8" height="15.0" fill="rgb(224,109,46)" rx="2" ry="2" />
<text  x="364.90" y="847.5" ></text>
</g>
<g >
<title>psi_group_change (248 samples, 0.05%)</title><rect x="683.9" y="725" width="0.7" height="15.0" fill="rgb(246,54,6)" rx="2" ry="2" />
<text  x="686.93" y="735.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (92 samples, 0.02%)</title><rect x="117.7" y="1301" width="0.2" height="15.0" fill="rgb(243,6,53)" rx="2" ry="2" />
<text  x="120.69" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (67 samples, 0.01%)</title><rect x="894.0" y="917" width="0.2" height="15.0" fill="rgb(248,133,33)" rx="2" ry="2" />
<text  x="897.00" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (114 samples, 0.03%)</title><rect x="296.2" y="613" width="0.3" height="15.0" fill="rgb(233,27,12)" rx="2" ry="2" />
<text  x="299.18" y="623.5" ></text>
</g>
<g >
<title>alloc_fd (331 samples, 0.07%)</title><rect x="1147.1" y="981" width="0.8" height="15.0" fill="rgb(228,163,21)" rx="2" ry="2" />
<text  x="1150.08" y="991.5" ></text>
</g>
<g >
<title>webserver::EventLoop::do_pending_functors (45,141 samples, 9.94%)</title><rect x="510.3" y="1109" width="117.3" height="15.0" fill="rgb(238,212,52)" rx="2" ry="2" />
<text  x="513.26" y="1119.5" >webserver::Eve..</text>
</g>
<g >
<title>webserver::Channel::unregister_read (2,848 samples, 0.63%)</title><rect x="743.2" y="1061" width="7.4" height="15.0" fill="rgb(254,162,4)" rx="2" ry="2" />
<text  x="746.25" y="1071.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (384 samples, 0.08%)</title><rect x="980.1" y="901" width="1.0" height="15.0" fill="rgb(248,39,28)" rx="2" ry="2" />
<text  x="983.12" y="911.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (7,167 samples, 1.58%)</title><rect x="540.2" y="613" width="18.6" height="15.0" fill="rgb(206,161,44)" rx="2" ry="2" />
<text  x="543.17" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (51 samples, 0.01%)</title><rect x="929.0" y="869" width="0.2" height="15.0" fill="rgb(233,60,38)" rx="2" ry="2" />
<text  x="932.02" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_lock (45 samples, 0.01%)</title><rect x="568.1" y="581" width="0.2" height="15.0" fill="rgb(245,138,51)" rx="2" ry="2" />
<text  x="571.14" y="591.5" ></text>
</g>
<g >
<title>preempt_schedule (77 samples, 0.02%)</title><rect x="444.7" y="677" width="0.2" height="15.0" fill="rgb(234,54,52)" rx="2" ry="2" />
<text  x="447.70" y="687.5" ></text>
</g>
<g >
<title>syscall_exit_work (79 samples, 0.02%)</title><rect x="679.0" y="821" width="0.2" height="15.0" fill="rgb(207,15,12)" rx="2" ry="2" />
<text  x="682.04" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (466 samples, 0.10%)</title><rect x="207.9" y="69" width="1.2" height="15.0" fill="rgb(230,49,21)" rx="2" ry="2" />
<text  x="210.93" y="79.5" ></text>
</g>
<g >
<title>syscall_exit_work (106 samples, 0.02%)</title><rect x="569.7" y="677" width="0.2" height="15.0" fill="rgb(210,51,51)" rx="2" ry="2" />
<text  x="572.66" y="687.5" ></text>
</g>
<g >
<title>preempt_schedule (101 samples, 0.02%)</title><rect x="717.2" y="677" width="0.2" height="15.0" fill="rgb(227,132,40)" rx="2" ry="2" />
<text  x="720.16" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (305 samples, 0.07%)</title><rect x="923.2" y="901" width="0.8" height="15.0" fill="rgb(229,195,20)" rx="2" ry="2" />
<text  x="926.17" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (135 samples, 0.03%)</title><rect x="183.8" y="277" width="0.3" height="15.0" fill="rgb(249,171,54)" rx="2" ry="2" />
<text  x="186.80" y="287.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (45 samples, 0.01%)</title><rect x="668.0" y="741" width="0.1" height="15.0" fill="rgb(208,116,4)" rx="2" ry="2" />
<text  x="671.00" y="751.5" ></text>
</g>
<g >
<title>tcp_done (53 samples, 0.01%)</title><rect x="1086.8" y="373" width="0.1" height="15.0" fill="rgb(240,45,13)" rx="2" ry="2" />
<text  x="1089.80" y="383.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (201 samples, 0.04%)</title><rect x="644.8" y="885" width="0.5" height="15.0" fill="rgb(239,169,10)" rx="2" ry="2" />
<text  x="647.77" y="895.5" ></text>
</g>
<g >
<title>do_epoll_ctl (851 samples, 0.19%)</title><rect x="746.0" y="917" width="2.2" height="15.0" fill="rgb(221,11,13)" rx="2" ry="2" />
<text  x="749.03" y="927.5" ></text>
</g>
<g >
<title>std::__alloc_on_swap&lt;std::allocator&lt;char&gt; &gt; (52 samples, 0.01%)</title><rect x="82.9" y="1301" width="0.1" height="15.0" fill="rgb(212,77,40)" rx="2" ry="2" />
<text  x="85.89" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (574 samples, 0.13%)</title><rect x="1005.2" y="933" width="1.5" height="15.0" fill="rgb(206,18,47)" rx="2" ry="2" />
<text  x="1008.24" y="943.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (255 samples, 0.06%)</title><rect x="1169.9" y="965" width="0.6" height="15.0" fill="rgb(245,63,37)" rx="2" ry="2" />
<text  x="1172.85" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,178 samples, 0.48%)</title><rect x="1094.9" y="453" width="5.6" height="15.0" fill="rgb(213,168,10)" rx="2" ry="2" />
<text  x="1097.87" y="463.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (47 samples, 0.01%)</title><rect x="293.5" y="821" width="0.1" height="15.0" fill="rgb(215,145,42)" rx="2" ry="2" />
<text  x="296.49" y="831.5" ></text>
</g>
<g >
<title>vfs_write (7,683 samples, 1.69%)</title><rect x="539.1" y="645" width="20.0" height="15.0" fill="rgb(239,134,43)" rx="2" ry="2" />
<text  x="542.10" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (47 samples, 0.01%)</title><rect x="1142.5" y="885" width="0.1" height="15.0" fill="rgb(205,190,8)" rx="2" ry="2" />
<text  x="1145.51" y="895.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (91 samples, 0.02%)</title><rect x="119.5" y="1301" width="0.2" height="15.0" fill="rgb(220,85,23)" rx="2" ry="2" />
<text  x="122.48" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (130 samples, 0.03%)</title><rect x="970.6" y="1029" width="0.4" height="15.0" fill="rgb(231,4,48)" rx="2" ry="2" />
<text  x="973.64" y="1039.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (396 samples, 0.09%)</title><rect x="1109.3" y="949" width="1.0" height="15.0" fill="rgb(211,103,8)" rx="2" ry="2" />
<text  x="1112.29" y="959.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (26,704 samples, 5.88%)</title><rect x="377.3" y="757" width="69.4" height="15.0" fill="rgb(247,1,51)" rx="2" ry="2" />
<text  x="380.34" y="767.5" >__ip_qu..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (515 samples, 0.11%)</title><rect x="1107.4" y="997" width="1.3" height="15.0" fill="rgb(244,60,43)" rx="2" ry="2" />
<text  x="1110.36" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt; (53 samples, 0.01%)</title><rect x="998.4" y="997" width="0.2" height="15.0" fill="rgb(246,224,43)" rx="2" ry="2" />
<text  x="1001.43" y="1007.5" ></text>
</g>
<g >
<title>strlen@plt (48 samples, 0.01%)</title><rect x="358.7" y="821" width="0.1" height="15.0" fill="rgb(215,9,36)" rx="2" ry="2" />
<text  x="361.67" y="831.5" ></text>
</g>
<g >
<title>update_curr (117 samples, 0.03%)</title><rect x="949.5" y="565" width="0.3" height="15.0" fill="rgb(205,194,30)" rx="2" ry="2" />
<text  x="952.50" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (94 samples, 0.02%)</title><rect x="318.2" y="565" width="0.2" height="15.0" fill="rgb(242,85,23)" rx="2" ry="2" />
<text  x="321.20" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (120 samples, 0.03%)</title><rect x="535.3" y="725" width="0.4" height="15.0" fill="rgb(231,83,22)" rx="2" ry="2" />
<text  x="538.35" y="735.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (160 samples, 0.04%)</title><rect x="867.1" y="981" width="0.4" height="15.0" fill="rgb(213,95,12)" rx="2" ry="2" />
<text  x="870.05" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned int&gt; (94 samples, 0.02%)</title><rect x="694.8" y="869" width="0.2" height="15.0" fill="rgb(231,141,25)" rx="2" ry="2" />
<text  x="697.78" y="879.5" ></text>
</g>
<g >
<title>strlen (91 samples, 0.02%)</title><rect x="813.4" y="933" width="0.3" height="15.0" fill="rgb(231,0,25)" rx="2" ry="2" />
<text  x="816.42" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::visit_format_arg&lt;fmt::v8::detail::default_arg_formatter&lt;char&gt;, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt; (232 samples, 0.05%)</title><rect x="518.7" y="789" width="0.6" height="15.0" fill="rgb(236,100,12)" rx="2" ry="2" />
<text  x="521.66" y="799.5" ></text>
</g>
<g >
<title>perf_output_end (72 samples, 0.02%)</title><rect x="813.1" y="885" width="0.2" height="15.0" fill="rgb(238,130,0)" rx="2" ry="2" />
<text  x="816.11" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, webserver::ChannelHash, true&gt;::_M_cget (147 samples, 0.03%)</title><rect x="98.6" y="1301" width="0.4" height="15.0" fill="rgb(235,57,21)" rx="2" ry="2" />
<text  x="101.61" y="1311.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (50 samples, 0.01%)</title><rect x="1035.4" y="805" width="0.2" height="15.0" fill="rgb(225,0,1)" rx="2" ry="2" />
<text  x="1038.44" y="815.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (50 samples, 0.01%)</title><rect x="237.4" y="917" width="0.2" height="15.0" fill="rgb(254,202,44)" rx="2" ry="2" />
<text  x="240.44" y="927.5" ></text>
</g>
<g >
<title>psi_task_switch (80 samples, 0.02%)</title><rect x="1134.1" y="901" width="0.2" height="15.0" fill="rgb(236,199,12)" rx="2" ry="2" />
<text  x="1137.11" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,702 samples, 2.14%)</title><rect x="1080.3" y="901" width="25.2" height="15.0" fill="rgb(216,16,31)" rx="2" ry="2" />
<text  x="1083.32" y="911.5" >d..</text>
</g>
<g >
<title>_raw_write_unlock_irq (45 samples, 0.01%)</title><rect x="471.6" y="1013" width="0.1" height="15.0" fill="rgb(246,212,35)" rx="2" ry="2" />
<text  x="474.59" y="1023.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (65 samples, 0.01%)</title><rect x="328.2" y="469" width="0.2" height="15.0" fill="rgb(231,99,7)" rx="2" ry="2" />
<text  x="331.24" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (39 samples, 0.01%)</title><rect x="699.7" y="901" width="0.1" height="15.0" fill="rgb(246,53,4)" rx="2" ry="2" />
<text  x="702.68" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (1,386 samples, 0.31%)</title><rect x="410.5" y="421" width="3.6" height="15.0" fill="rgb(244,6,24)" rx="2" ry="2" />
<text  x="413.49" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (197 samples, 0.04%)</title><rect x="262.0" y="837" width="0.6" height="15.0" fill="rgb(209,118,21)" rx="2" ry="2" />
<text  x="265.05" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (85 samples, 0.02%)</title><rect x="584.7" y="917" width="0.2" height="15.0" fill="rgb(235,105,51)" rx="2" ry="2" />
<text  x="587.68" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,138 samples, 2.45%)</title><rect x="822.5" y="1045" width="29.0" height="15.0" fill="rgb(239,187,17)" rx="2" ry="2" />
<text  x="825.51" y="1055.5" >en..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::_Tuple_impl (57 samples, 0.01%)</title><rect x="78.4" y="1301" width="0.1" height="15.0" fill="rgb(230,195,37)" rx="2" ry="2" />
<text  x="81.39" y="1311.5" ></text>
</g>
<g >
<title>wake_up_q (1,044 samples, 0.23%)</title><rect x="964.8" y="773" width="2.7" height="15.0" fill="rgb(206,116,26)" rx="2" ry="2" />
<text  x="967.77" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (60 samples, 0.01%)</title><rect x="792.6" y="1013" width="0.1" height="15.0" fill="rgb(209,217,7)" rx="2" ry="2" />
<text  x="795.58" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (56 samples, 0.01%)</title><rect x="579.3" y="901" width="0.1" height="15.0" fill="rgb(241,87,34)" rx="2" ry="2" />
<text  x="582.26" y="911.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (51 samples, 0.01%)</title><rect x="1086.6" y="373" width="0.1" height="15.0" fill="rgb(215,187,9)" rx="2" ry="2" />
<text  x="1089.56" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (83 samples, 0.02%)</title><rect x="929.5" y="853" width="0.2" height="15.0" fill="rgb(214,93,50)" rx="2" ry="2" />
<text  x="932.47" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (1,298 samples, 0.29%)</title><rect x="999.2" y="997" width="3.4" height="15.0" fill="rgb(241,1,12)" rx="2" ry="2" />
<text  x="1002.24" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (49 samples, 0.01%)</title><rect x="929.5" y="789" width="0.2" height="15.0" fill="rgb(207,38,18)" rx="2" ry="2" />
<text  x="932.55" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (97 samples, 0.02%)</title><rect x="532.7" y="757" width="0.2" height="15.0" fill="rgb(230,106,29)" rx="2" ry="2" />
<text  x="535.66" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::erase (1,053 samples, 0.23%)</title><rect x="348.8" y="885" width="2.7" height="15.0" fill="rgb(215,133,41)" rx="2" ry="2" />
<text  x="351.76" y="895.5" ></text>
</g>
<g >
<title>preempt_schedule (64 samples, 0.01%)</title><rect x="544.6" y="549" width="0.1" height="15.0" fill="rgb(224,195,45)" rx="2" ry="2" />
<text  x="547.58" y="559.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::operator (49 samples, 0.01%)</title><rect x="351.1" y="821" width="0.1" height="15.0" fill="rgb(222,26,12)" rx="2" ry="2" />
<text  x="354.12" y="831.5" ></text>
</g>
<g >
<title>irqtime_account_irq (111 samples, 0.02%)</title><rect x="194.8" y="389" width="0.3" height="15.0" fill="rgb(232,11,24)" rx="2" ry="2" />
<text  x="197.78" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (49 samples, 0.01%)</title><rect x="343.0" y="693" width="0.2" height="15.0" fill="rgb(249,83,12)" rx="2" ry="2" />
<text  x="346.04" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_v (83 samples, 0.02%)</title><rect x="504.4" y="1061" width="0.2" height="15.0" fill="rgb(224,91,32)" rx="2" ry="2" />
<text  x="507.42" y="1071.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (90 samples, 0.02%)</title><rect x="794.8" y="1045" width="0.2" height="15.0" fill="rgb(251,27,48)" rx="2" ry="2" />
<text  x="797.75" y="1055.5" ></text>
</g>
<g >
<title>may_expand_vm (40 samples, 0.01%)</title><rect x="802.3" y="949" width="0.1" height="15.0" fill="rgb(217,15,36)" rx="2" ry="2" />
<text  x="805.32" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (49 samples, 0.01%)</title><rect x="585.0" y="853" width="0.1" height="15.0" fill="rgb(227,43,10)" rx="2" ry="2" />
<text  x="588.02" y="863.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (55 samples, 0.01%)</title><rect x="361.8" y="821" width="0.1" height="15.0" fill="rgb(235,51,0)" rx="2" ry="2" />
<text  x="364.76" y="831.5" ></text>
</g>
<g >
<title>update_load_avg (147 samples, 0.03%)</title><rect x="206.6" y="53" width="0.4" height="15.0" fill="rgb(238,128,23)" rx="2" ry="2" />
<text  x="209.63" y="63.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (155 samples, 0.03%)</title><rect x="1035.9" y="837" width="0.4" height="15.0" fill="rgb(205,192,40)" rx="2" ry="2" />
<text  x="1038.91" y="847.5" ></text>
</g>
<g >
<title>update_rq_clock (140 samples, 0.03%)</title><rect x="952.2" y="629" width="0.4" height="15.0" fill="rgb(214,38,25)" rx="2" ry="2" />
<text  x="955.22" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (90 samples, 0.02%)</title><rect x="309.5" y="725" width="0.2" height="15.0" fill="rgb(240,177,26)" rx="2" ry="2" />
<text  x="312.46" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (199 samples, 0.04%)</title><rect x="517.7" y="677" width="0.5" height="15.0" fill="rgb(216,179,3)" rx="2" ry="2" />
<text  x="520.67" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (75 samples, 0.02%)</title><rect x="792.0" y="1029" width="0.2" height="15.0" fill="rgb(215,219,47)" rx="2" ry="2" />
<text  x="794.97" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (510 samples, 0.11%)</title><rect x="916.5" y="917" width="1.3" height="15.0" fill="rgb(214,130,32)" rx="2" ry="2" />
<text  x="919.50" y="927.5" ></text>
</g>
<g >
<title>mutex_lock (49 samples, 0.01%)</title><rect x="942.6" y="693" width="0.1" height="15.0" fill="rgb(223,42,12)" rx="2" ry="2" />
<text  x="945.58" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (70 samples, 0.02%)</title><rect x="700.8" y="869" width="0.2" height="15.0" fill="rgb(233,216,52)" rx="2" ry="2" />
<text  x="703.81" y="879.5" ></text>
</g>
<g >
<title>switch_fpu_return (114 samples, 0.03%)</title><rect x="569.4" y="661" width="0.3" height="15.0" fill="rgb(220,204,9)" rx="2" ry="2" />
<text  x="572.36" y="671.5" ></text>
</g>
<g >
<title>std::back_insert_iterator&lt;fmt::v8::detail::buffer&lt;char&gt; &gt;::back_insert_iterator (85 samples, 0.02%)</title><rect x="115.2" y="1301" width="0.3" height="15.0" fill="rgb(249,56,18)" rx="2" ry="2" />
<text  x="118.23" y="1311.5" ></text>
</g>
<g >
<title>__fdget_pos (208 samples, 0.05%)</title><rect x="315.5" y="613" width="0.5" height="15.0" fill="rgb(217,194,21)" rx="2" ry="2" />
<text  x="318.50" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::deallocate (446 samples, 0.10%)</title><rect x="224.8" y="1013" width="1.2" height="15.0" fill="rgb(238,66,25)" rx="2" ry="2" />
<text  x="227.79" y="1023.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (61 samples, 0.01%)</title><rect x="420.7" y="469" width="0.2" height="15.0" fill="rgb(244,16,1)" rx="2" ry="2" />
<text  x="423.72" y="479.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (160 samples, 0.04%)</title><rect x="296.1" y="661" width="0.4" height="15.0" fill="rgb(224,60,53)" rx="2" ry="2" />
<text  x="299.09" y="671.5" ></text>
</g>
<g >
<title>fput_many (69 samples, 0.02%)</title><rect x="364.8" y="853" width="0.2" height="15.0" fill="rgb(215,216,8)" rx="2" ry="2" />
<text  x="367.79" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (56 samples, 0.01%)</title><rect x="271.7" y="661" width="0.1" height="15.0" fill="rgb(234,42,16)" rx="2" ry="2" />
<text  x="274.66" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (39 samples, 0.01%)</title><rect x="585.2" y="869" width="0.1" height="15.0" fill="rgb(213,166,51)" rx="2" ry="2" />
<text  x="588.17" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (422 samples, 0.09%)</title><rect x="1142.8" y="917" width="1.1" height="15.0" fill="rgb(242,76,43)" rx="2" ry="2" />
<text  x="1145.78" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1,021 samples, 0.22%)</title><rect x="1141.4" y="981" width="2.6" height="15.0" fill="rgb(213,119,10)" rx="2" ry="2" />
<text  x="1144.38" y="991.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (54 samples, 0.01%)</title><rect x="791.2" y="933" width="0.1" height="15.0" fill="rgb(221,120,3)" rx="2" ry="2" />
<text  x="794.15" y="943.5" ></text>
</g>
<g >
<title>migrate_disable (106 samples, 0.02%)</title><rect x="445.3" y="693" width="0.3" height="15.0" fill="rgb(245,126,35)" rx="2" ry="2" />
<text  x="448.33" y="703.5" ></text>
</g>
<g >
<title>__libc_write (141 samples, 0.03%)</title><rect x="11.5" y="1285" width="0.4" height="15.0" fill="rgb(244,104,13)" rx="2" ry="2" />
<text  x="14.55" y="1295.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (133 samples, 0.03%)</title><rect x="291.5" y="869" width="0.3" height="15.0" fill="rgb(213,144,20)" rx="2" ry="2" />
<text  x="294.47" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (121 samples, 0.03%)</title><rect x="1003.0" y="949" width="0.3" height="15.0" fill="rgb(205,53,21)" rx="2" ry="2" />
<text  x="1005.96" y="959.5" ></text>
</g>
<g >
<title>std::mutex::unlock (1,712 samples, 0.38%)</title><rect x="963.8" y="901" width="4.5" height="15.0" fill="rgb(205,164,47)" rx="2" ry="2" />
<text  x="966.84" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (86 samples, 0.02%)</title><rect x="257.3" y="853" width="0.2" height="15.0" fill="rgb(251,194,47)" rx="2" ry="2" />
<text  x="260.26" y="863.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (91 samples, 0.02%)</title><rect x="700.1" y="901" width="0.3" height="15.0" fill="rgb(206,217,23)" rx="2" ry="2" />
<text  x="703.13" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (73 samples, 0.02%)</title><rect x="1144.7" y="1061" width="0.2" height="15.0" fill="rgb(208,218,17)" rx="2" ry="2" />
<text  x="1147.66" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (6,520 samples, 1.44%)</title><rect x="195.8" y="341" width="16.9" height="15.0" fill="rgb(245,29,3)" rx="2" ry="2" />
<text  x="198.80" y="351.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (215 samples, 0.05%)</title><rect x="912.7" y="1045" width="0.5" height="15.0" fill="rgb(228,194,47)" rx="2" ry="2" />
<text  x="915.68" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (68 samples, 0.01%)</title><rect x="990.0" y="965" width="0.2" height="15.0" fill="rgb(247,220,45)" rx="2" ry="2" />
<text  x="992.98" y="975.5" ></text>
</g>
<g >
<title>update_load_avg (44 samples, 0.01%)</title><rect x="960.3" y="693" width="0.1" height="15.0" fill="rgb(207,191,2)" rx="2" ry="2" />
<text  x="963.32" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (40 samples, 0.01%)</title><rect x="1154.1" y="933" width="0.1" height="15.0" fill="rgb(223,24,26)" rx="2" ry="2" />
<text  x="1157.10" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (264 samples, 0.06%)</title><rect x="761.6" y="1045" width="0.7" height="15.0" fill="rgb(229,205,21)" rx="2" ry="2" />
<text  x="764.58" y="1055.5" ></text>
</g>
<g >
<title>__update_load_avg_se (44 samples, 0.01%)</title><rect x="330.2" y="405" width="0.2" height="15.0" fill="rgb(241,216,45)" rx="2" ry="2" />
<text  x="333.25" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (46 samples, 0.01%)</title><rect x="1142.0" y="901" width="0.1" height="15.0" fill="rgb(236,30,26)" rx="2" ry="2" />
<text  x="1145.01" y="911.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (72 samples, 0.02%)</title><rect x="303.5" y="645" width="0.1" height="15.0" fill="rgb(235,0,44)" rx="2" ry="2" />
<text  x="306.45" y="655.5" ></text>
</g>
<g >
<title>__fget_light (266 samples, 0.06%)</title><rect x="593.4" y="757" width="0.7" height="15.0" fill="rgb(254,41,32)" rx="2" ry="2" />
<text  x="596.43" y="767.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (300 samples, 0.07%)</title><rect x="1017.2" y="917" width="0.8" height="15.0" fill="rgb(220,183,25)" rx="2" ry="2" />
<text  x="1020.23" y="927.5" ></text>
</g>
<g >
<title>update_load_avg (93 samples, 0.02%)</title><rect x="574.1" y="565" width="0.3" height="15.0" fill="rgb(231,24,43)" rx="2" ry="2" />
<text  x="577.14" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~_Tuple_impl (112 samples, 0.02%)</title><rect x="625.8" y="885" width="0.3" height="15.0" fill="rgb(205,29,10)" rx="2" ry="2" />
<text  x="628.79" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view (174 samples, 0.04%)</title><rect x="268.9" y="869" width="0.5" height="15.0" fill="rgb(220,61,0)" rx="2" ry="2" />
<text  x="271.95" y="879.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (152 samples, 0.03%)</title><rect x="103.7" y="1301" width="0.4" height="15.0" fill="rgb(244,179,39)" rx="2" ry="2" />
<text  x="106.66" y="1311.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (58 samples, 0.01%)</title><rect x="610.1" y="853" width="0.1" height="15.0" fill="rgb(220,136,46)" rx="2" ry="2" />
<text  x="613.10" y="863.5" ></text>
</g>
<g >
<title>__queue_work (148 samples, 0.03%)</title><rect x="545.6" y="533" width="0.4" height="15.0" fill="rgb(244,27,26)" rx="2" ry="2" />
<text  x="548.60" y="543.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,464 samples, 0.32%)</title><rect x="993.1" y="981" width="3.8" height="15.0" fill="rgb(241,202,53)" rx="2" ry="2" />
<text  x="996.14" y="991.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::~HttpConnection (393 samples, 0.09%)</title><rect x="275.2" y="805" width="1.1" height="15.0" fill="rgb(250,48,32)" rx="2" ry="2" />
<text  x="278.24" y="815.5" ></text>
</g>
<g >
<title>put_cpu_partial (42 samples, 0.01%)</title><rect x="180.5" y="581" width="0.1" height="15.0" fill="rgb(213,127,40)" rx="2" ry="2" />
<text  x="183.53" y="591.5" ></text>
</g>
<g >
<title>pty_write (3,929 samples, 0.87%)</title><rect x="323.2" y="549" width="10.2" height="15.0" fill="rgb(214,151,50)" rx="2" ry="2" />
<text  x="326.24" y="559.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (552 samples, 0.12%)</title><rect x="403.3" y="517" width="1.4" height="15.0" fill="rgb(245,152,20)" rx="2" ry="2" />
<text  x="406.28" y="527.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (101 samples, 0.02%)</title><rect x="297.3" y="677" width="0.2" height="15.0" fill="rgb(254,55,30)" rx="2" ry="2" />
<text  x="300.26" y="687.5" ></text>
</g>
<g >
<title>_IO_new_do_write (42 samples, 0.01%)</title><rect x="144.3" y="1301" width="0.1" height="15.0" fill="rgb(208,176,49)" rx="2" ry="2" />
<text  x="147.30" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_valptr (40 samples, 0.01%)</title><rect x="96.9" y="1301" width="0.1" height="15.0" fill="rgb(249,96,9)" rx="2" ry="2" />
<text  x="99.92" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (192 samples, 0.04%)</title><rect x="1019.5" y="1077" width="0.5" height="15.0" fill="rgb(210,160,20)" rx="2" ry="2" />
<text  x="1022.46" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (52 samples, 0.01%)</title><rect x="640.3" y="885" width="0.2" height="15.0" fill="rgb(228,34,38)" rx="2" ry="2" />
<text  x="643.32" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (76 samples, 0.02%)</title><rect x="1025.3" y="901" width="0.2" height="15.0" fill="rgb(206,149,5)" rx="2" ry="2" />
<text  x="1028.31" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (292 samples, 0.06%)</title><rect x="1114.9" y="1045" width="0.7" height="15.0" fill="rgb(244,128,36)" rx="2" ry="2" />
<text  x="1117.87" y="1055.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (3,773 samples, 0.83%)</title><rect x="241.1" y="821" width="9.8" height="15.0" fill="rgb(239,28,47)" rx="2" ry="2" />
<text  x="244.07" y="831.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (272 samples, 0.06%)</title><rect x="1035.6" y="885" width="0.7" height="15.0" fill="rgb(220,29,22)" rx="2" ry="2" />
<text  x="1038.61" y="895.5" ></text>
</g>
<g >
<title>_find_next_bit (54 samples, 0.01%)</title><rect x="328.1" y="453" width="0.1" height="15.0" fill="rgb(247,197,2)" rx="2" ry="2" />
<text  x="331.10" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (401 samples, 0.09%)</title><rect x="312.0" y="757" width="1.0" height="15.0" fill="rgb(205,115,23)" rx="2" ry="2" />
<text  x="315.00" y="767.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (84 samples, 0.02%)</title><rect x="311.4" y="581" width="0.2" height="15.0" fill="rgb(246,1,5)" rx="2" ry="2" />
<text  x="314.40" y="591.5" ></text>
</g>
<g >
<title>__dentry_kill (868 samples, 0.19%)</title><rect x="1081.9" y="821" width="2.3" height="15.0" fill="rgb(232,55,19)" rx="2" ry="2" />
<text  x="1084.92" y="831.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (59 samples, 0.01%)</title><rect x="537.7" y="693" width="0.1" height="15.0" fill="rgb(214,153,28)" rx="2" ry="2" />
<text  x="540.68" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (1,171 samples, 0.26%)</title><rect x="762.5" y="1061" width="3.0" height="15.0" fill="rgb(211,155,54)" rx="2" ry="2" />
<text  x="765.48" y="1071.5" ></text>
</g>
<g >
<title>operator new (266 samples, 0.06%)</title><rect x="588.7" y="725" width="0.7" height="15.0" fill="rgb(211,21,32)" rx="2" ry="2" />
<text  x="591.70" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (117 samples, 0.03%)</title><rect x="625.8" y="917" width="0.3" height="15.0" fill="rgb(220,136,38)" rx="2" ry="2" />
<text  x="628.78" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (70 samples, 0.02%)</title><rect x="659.7" y="661" width="0.2" height="15.0" fill="rgb(224,94,54)" rx="2" ry="2" />
<text  x="662.68" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (47 samples, 0.01%)</title><rect x="361.4" y="789" width="0.1" height="15.0" fill="rgb(212,125,16)" rx="2" ry="2" />
<text  x="364.36" y="799.5" ></text>
</g>
<g >
<title>dequeue_task_fair (334 samples, 0.07%)</title><rect x="1065.1" y="757" width="0.8" height="15.0" fill="rgb(210,57,20)" rx="2" ry="2" />
<text  x="1068.06" y="767.5" ></text>
</g>
<g >
<title>update_rq_clock (42 samples, 0.01%)</title><rect x="568.3" y="597" width="0.1" height="15.0" fill="rgb(243,23,35)" rx="2" ry="2" />
<text  x="571.29" y="607.5" ></text>
</g>
<g >
<title>__fstatat64 (6,940 samples, 1.53%)</title><rect x="851.9" y="1061" width="18.0" height="15.0" fill="rgb(207,126,18)" rx="2" ry="2" />
<text  x="854.87" y="1071.5" ></text>
</g>
<g >
<title>__schedule (95 samples, 0.02%)</title><rect x="1101.4" y="597" width="0.3" height="15.0" fill="rgb(221,26,30)" rx="2" ry="2" />
<text  x="1104.42" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (342 samples, 0.08%)</title><rect x="700.7" y="917" width="0.9" height="15.0" fill="rgb(222,163,16)" rx="2" ry="2" />
<text  x="703.74" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (51 samples, 0.01%)</title><rect x="1114.7" y="853" width="0.1" height="15.0" fill="rgb(252,6,6)" rx="2" ry="2" />
<text  x="1117.68" y="863.5" ></text>
</g>
<g >
<title>ksys_write (6,657 samples, 1.47%)</title><rect x="1043.2" y="821" width="17.3" height="15.0" fill="rgb(206,86,50)" rx="2" ry="2" />
<text  x="1046.20" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (73 samples, 0.02%)</title><rect x="584.1" y="885" width="0.2" height="15.0" fill="rgb(233,203,35)" rx="2" ry="2" />
<text  x="587.12" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (1,755 samples, 0.39%)</title><rect x="285.4" y="837" width="4.5" height="15.0" fill="rgb(228,40,10)" rx="2" ry="2" />
<text  x="288.35" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (57 samples, 0.01%)</title><rect x="620.5" y="837" width="0.1" height="15.0" fill="rgb(226,30,8)" rx="2" ry="2" />
<text  x="623.46" y="847.5" ></text>
</g>
<g >
<title>std::forward&lt;webserver::EventLoop*&amp;&gt; (40 samples, 0.01%)</title><rect x="30.0" y="1301" width="0.1" height="15.0" fill="rgb(249,38,19)" rx="2" ry="2" />
<text  x="33.00" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (81 samples, 0.02%)</title><rect x="325.2" y="485" width="0.2" height="15.0" fill="rgb(222,170,15)" rx="2" ry="2" />
<text  x="328.17" y="495.5" ></text>
</g>
<g >
<title>__napi_poll (141 samples, 0.03%)</title><rect x="183.8" y="325" width="0.3" height="15.0" fill="rgb(222,145,1)" rx="2" ry="2" />
<text  x="186.78" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (438 samples, 0.10%)</title><rect x="624.9" y="981" width="1.2" height="15.0" fill="rgb(222,133,26)" rx="2" ry="2" />
<text  x="627.95" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (110 samples, 0.02%)</title><rect x="14.6" y="1301" width="0.3" height="15.0" fill="rgb(238,95,6)" rx="2" ry="2" />
<text  x="17.63" y="1311.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (94 samples, 0.02%)</title><rect x="505.9" y="997" width="0.3" height="15.0" fill="rgb(227,148,47)" rx="2" ry="2" />
<text  x="508.91" y="1007.5" ></text>
</g>
<g >
<title>available_idle_cpu (82 samples, 0.02%)</title><rect x="572.9" y="613" width="0.3" height="15.0" fill="rgb(216,199,34)" rx="2" ry="2" />
<text  x="575.94" y="623.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (863 samples, 0.19%)</title><rect x="924.6" y="869" width="2.2" height="15.0" fill="rgb(236,167,26)" rx="2" ry="2" />
<text  x="927.57" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (52 samples, 0.01%)</title><rect x="1077.8" y="949" width="0.1" height="15.0" fill="rgb(213,129,32)" rx="2" ry="2" />
<text  x="1080.76" y="959.5" ></text>
</g>
<g >
<title>webserver::EventLoop::is_in_loop_thread (94 samples, 0.02%)</title><rect x="1115.6" y="1077" width="0.3" height="15.0" fill="rgb(239,52,6)" rx="2" ry="2" />
<text  x="1118.63" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (170 samples, 0.04%)</title><rect x="1182.0" y="1317" width="0.4" height="15.0" fill="rgb(249,129,38)" rx="2" ry="2" />
<text  x="1184.96" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (41 samples, 0.01%)</title><rect x="910.2" y="1029" width="0.1" height="15.0" fill="rgb(250,22,52)" rx="2" ry="2" />
<text  x="913.22" y="1039.5" ></text>
</g>
<g >
<title>_int_malloc (107 samples, 0.02%)</title><rect x="1113.5" y="949" width="0.2" height="15.0" fill="rgb(220,27,32)" rx="2" ry="2" />
<text  x="1116.46" y="959.5" ></text>
</g>
<g >
<title>n_tty_write (5,194 samples, 1.14%)</title><rect x="1046.4" y="757" width="13.5" height="15.0" fill="rgb(214,55,12)" rx="2" ry="2" />
<text  x="1049.44" y="767.5" ></text>
</g>
<g >
<title>_IO_old_init (57 samples, 0.01%)</title><rect x="353.4" y="789" width="0.1" height="15.0" fill="rgb(229,40,2)" rx="2" ry="2" />
<text  x="356.36" y="799.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (98 samples, 0.02%)</title><rect x="869.1" y="981" width="0.3" height="15.0" fill="rgb(247,167,22)" rx="2" ry="2" />
<text  x="872.12" y="991.5" ></text>
</g>
<g >
<title>[[nf_nat]] (109 samples, 0.02%)</title><rect x="387.1" y="677" width="0.2" height="15.0" fill="rgb(224,215,14)" rx="2" ry="2" />
<text  x="390.06" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1,261 samples, 0.28%)</title><rect x="999.3" y="981" width="3.3" height="15.0" fill="rgb(222,15,6)" rx="2" ry="2" />
<text  x="1002.30" y="991.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (89 samples, 0.02%)</title><rect x="446.1" y="693" width="0.2" height="15.0" fill="rgb(247,137,21)" rx="2" ry="2" />
<text  x="449.10" y="703.5" ></text>
</g>
<g >
<title>mod_objcg_state (106 samples, 0.02%)</title><rect x="1163.2" y="869" width="0.3" height="15.0" fill="rgb(220,146,38)" rx="2" ry="2" />
<text  x="1166.18" y="879.5" ></text>
</g>
<g >
<title>enqueue_task_fair (684 samples, 0.15%)</title><rect x="552.9" y="485" width="1.7" height="15.0" fill="rgb(217,150,46)" rx="2" ry="2" />
<text  x="555.87" y="495.5" ></text>
</g>
<g >
<title>legitimize_links (48 samples, 0.01%)</title><rect x="856.6" y="917" width="0.1" height="15.0" fill="rgb(225,18,19)" rx="2" ry="2" />
<text  x="859.61" y="927.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (81 samples, 0.02%)</title><rect x="11.9" y="1269" width="0.2" height="15.0" fill="rgb(239,181,45)" rx="2" ry="2" />
<text  x="14.91" y="1279.5" ></text>
</g>
<g >
<title>tcp_ack (1,951 samples, 0.43%)</title><rect x="366.8" y="757" width="5.1" height="15.0" fill="rgb(217,2,3)" rx="2" ry="2" />
<text  x="369.83" y="767.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (153 samples, 0.03%)</title><rect x="183.8" y="389" width="0.4" height="15.0" fill="rgb(250,138,54)" rx="2" ry="2" />
<text  x="186.77" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (906 samples, 0.20%)</title><rect x="907.5" y="1061" width="2.3" height="15.0" fill="rgb(208,200,23)" rx="2" ry="2" />
<text  x="910.48" y="1071.5" ></text>
</g>
<g >
<title>do_futex (1,159 samples, 0.26%)</title><rect x="343.9" y="661" width="3.0" height="15.0" fill="rgb(207,211,7)" rx="2" ry="2" />
<text  x="346.89" y="671.5" ></text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (270 samples, 0.06%)</title><rect x="496.4" y="997" width="0.7" height="15.0" fill="rgb(229,153,20)" rx="2" ry="2" />
<text  x="499.40" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (75 samples, 0.02%)</title><rect x="1031.5" y="885" width="0.2" height="15.0" fill="rgb(233,66,45)" rx="2" ry="2" />
<text  x="1034.46" y="895.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned int&gt; (57 samples, 0.01%)</title><rect x="1177.3" y="1045" width="0.1" height="15.0" fill="rgb(250,225,14)" rx="2" ry="2" />
<text  x="1180.30" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (76 samples, 0.02%)</title><rect x="532.0" y="709" width="0.2" height="15.0" fill="rgb(251,106,28)" rx="2" ry="2" />
<text  x="534.97" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,289 samples, 1.60%)</title><rect x="651.4" y="821" width="19.0" height="15.0" fill="rgb(219,56,19)" rx="2" ry="2" />
<text  x="654.44" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (991 samples, 0.22%)</title><rect x="731.1" y="853" width="2.6" height="15.0" fill="rgb(208,38,49)" rx="2" ry="2" />
<text  x="734.08" y="863.5" ></text>
</g>
<g >
<title>__fget_light (226 samples, 0.05%)</title><rect x="264.3" y="789" width="0.6" height="15.0" fill="rgb(213,68,11)" rx="2" ry="2" />
<text  x="267.28" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (477 samples, 0.11%)</title><rect x="979.9" y="933" width="1.2" height="15.0" fill="rgb(214,163,50)" rx="2" ry="2" />
<text  x="982.89" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (57 samples, 0.01%)</title><rect x="791.6" y="1029" width="0.1" height="15.0" fill="rgb(211,160,50)" rx="2" ry="2" />
<text  x="794.58" y="1039.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (49 samples, 0.01%)</title><rect x="561.0" y="661" width="0.1" height="15.0" fill="rgb(229,224,2)" rx="2" ry="2" />
<text  x="564.02" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,001 samples, 4.18%)</title><rect x="172.1" y="709" width="49.4" height="15.0" fill="rgb(211,5,12)" rx="2" ry="2" />
<text  x="175.14" y="719.5" >entr..</text>
</g>
<g >
<title>std::__weak_count&lt; (59 samples, 0.01%)</title><rect x="27.3" y="1301" width="0.2" height="15.0" fill="rgb(247,185,46)" rx="2" ry="2" />
<text  x="30.30" y="1311.5" ></text>
</g>
<g >
<title>ipv4_dst_check (81 samples, 0.02%)</title><rect x="378.1" y="725" width="0.2" height="15.0" fill="rgb(207,229,21)" rx="2" ry="2" />
<text  x="381.09" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (225 samples, 0.05%)</title><rect x="167.9" y="901" width="0.6" height="15.0" fill="rgb(216,95,51)" rx="2" ry="2" />
<text  x="170.94" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (39 samples, 0.01%)</title><rect x="924.2" y="853" width="0.1" height="15.0" fill="rgb(247,57,18)" rx="2" ry="2" />
<text  x="927.22" y="863.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::close (9,883 samples, 2.18%)</title><rect x="1080.0" y="949" width="25.7" height="15.0" fill="rgb(231,224,23)" rx="2" ry="2" />
<text  x="1083.01" y="959.5" >w..</text>
</g>
<g >
<title>check_preempt_wakeup (255 samples, 0.06%)</title><rect x="724.6" y="629" width="0.7" height="15.0" fill="rgb(218,14,0)" rx="2" ry="2" />
<text  x="727.61" y="639.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (340 samples, 0.07%)</title><rect x="261.8" y="885" width="0.8" height="15.0" fill="rgb(208,16,0)" rx="2" ry="2" />
<text  x="264.76" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (48 samples, 0.01%)</title><rect x="519.3" y="837" width="0.1" height="15.0" fill="rgb(244,98,21)" rx="2" ry="2" />
<text  x="522.26" y="847.5" ></text>
</g>
<g >
<title>_int_malloc (112 samples, 0.02%)</title><rect x="610.9" y="773" width="0.2" height="15.0" fill="rgb(212,191,6)" rx="2" ry="2" />
<text  x="613.85" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt; const&amp;&gt; (318 samples, 0.07%)</title><rect x="505.4" y="1077" width="0.8" height="15.0" fill="rgb(247,191,42)" rx="2" ry="2" />
<text  x="508.38" y="1087.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (182 samples, 0.04%)</title><rect x="906.8" y="933" width="0.5" height="15.0" fill="rgb(228,150,32)" rx="2" ry="2" />
<text  x="909.83" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (98 samples, 0.02%)</title><rect x="116.7" y="1301" width="0.3" height="15.0" fill="rgb(207,211,25)" rx="2" ry="2" />
<text  x="119.74" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (547 samples, 0.12%)</title><rect x="279.1" y="805" width="1.4" height="15.0" fill="rgb(207,186,17)" rx="2" ry="2" />
<text  x="282.13" y="815.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;bool&gt;::load (40 samples, 0.01%)</title><rect x="162.0" y="997" width="0.1" height="15.0" fill="rgb(205,127,53)" rx="2" ry="2" />
<text  x="165.04" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (45 samples, 0.01%)</title><rect x="514.7" y="853" width="0.1" height="15.0" fill="rgb(228,213,45)" rx="2" ry="2" />
<text  x="517.70" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (85 samples, 0.02%)</title><rect x="941.7" y="661" width="0.2" height="15.0" fill="rgb(227,206,1)" rx="2" ry="2" />
<text  x="944.72" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (44 samples, 0.01%)</title><rect x="284.2" y="773" width="0.1" height="15.0" fill="rgb(244,179,48)" rx="2" ry="2" />
<text  x="287.21" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, fmt::v8::detail::vformat_to&lt;char&gt; (381 samples, 0.08%)</title><rect x="296.6" y="789" width="0.9" height="15.0" fill="rgb(225,79,52)" rx="2" ry="2" />
<text  x="299.55" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (314 samples, 0.07%)</title><rect x="1178.6" y="1045" width="0.8" height="15.0" fill="rgb(228,41,30)" rx="2" ry="2" />
<text  x="1181.60" y="1055.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (443 samples, 0.10%)</title><rect x="860.5" y="901" width="1.1" height="15.0" fill="rgb(248,44,54)" rx="2" ry="2" />
<text  x="863.50" y="911.5" ></text>
</g>
<g >
<title>fput_many (139 samples, 0.03%)</title><rect x="474.7" y="1013" width="0.4" height="15.0" fill="rgb(216,210,10)" rx="2" ry="2" />
<text  x="477.70" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (61 samples, 0.01%)</title><rect x="524.9" y="773" width="0.1" height="15.0" fill="rgb(218,161,1)" rx="2" ry="2" />
<text  x="527.87" y="783.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (65 samples, 0.01%)</title><rect x="800.5" y="949" width="0.2" height="15.0" fill="rgb(212,209,52)" rx="2" ry="2" />
<text  x="803.50" y="959.5" ></text>
</g>
<g >
<title>ksys_write (8,894 samples, 1.96%)</title><rect x="704.9" y="805" width="23.1" height="15.0" fill="rgb(206,107,10)" rx="2" ry="2" />
<text  x="707.94" y="815.5" >k..</text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (139 samples, 0.03%)</title><rect x="647.8" y="821" width="0.3" height="15.0" fill="rgb(219,210,48)" rx="2" ry="2" />
<text  x="650.79" y="831.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (44 samples, 0.01%)</title><rect x="1110.5" y="1093" width="0.1" height="15.0" fill="rgb(218,136,10)" rx="2" ry="2" />
<text  x="1113.45" y="1103.5" ></text>
</g>
<g >
<title>__vsprintf_internal (1,619 samples, 0.36%)</title><rect x="612.2" y="869" width="4.2" height="15.0" fill="rgb(240,191,13)" rx="2" ry="2" />
<text  x="615.23" y="879.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (384 samples, 0.08%)</title><rect x="184.4" y="533" width="1.0" height="15.0" fill="rgb(215,111,51)" rx="2" ry="2" />
<text  x="187.45" y="543.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (71 samples, 0.02%)</title><rect x="34.1" y="1301" width="0.1" height="15.0" fill="rgb(206,70,51)" rx="2" ry="2" />
<text  x="37.06" y="1311.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1,868 samples, 0.41%)</title><rect x="1156.3" y="965" width="4.9" height="15.0" fill="rgb(206,146,51)" rx="2" ry="2" />
<text  x="1159.31" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,377 samples, 1.40%)</title><rect x="238.5" y="917" width="16.5" height="15.0" fill="rgb(229,3,44)" rx="2" ry="2" />
<text  x="241.47" y="927.5" ></text>
</g>
<g >
<title>__wake_up_common (6,080 samples, 1.34%)</title><rect x="421.7" y="437" width="15.8" height="15.0" fill="rgb(251,104,0)" rx="2" ry="2" />
<text  x="424.74" y="447.5" ></text>
</g>
<g >
<title>update_load_avg (56 samples, 0.01%)</title><rect x="966.4" y="677" width="0.1" height="15.0" fill="rgb(218,196,28)" rx="2" ry="2" />
<text  x="969.37" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (223 samples, 0.05%)</title><rect x="170.8" y="773" width="0.6" height="15.0" fill="rgb(234,21,15)" rx="2" ry="2" />
<text  x="173.80" y="783.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (158 samples, 0.03%)</title><rect x="440.8" y="549" width="0.4" height="15.0" fill="rgb(218,121,4)" rx="2" ry="2" />
<text  x="443.77" y="559.5" ></text>
</g>
<g >
<title>select_task_rq_fair (824 samples, 0.18%)</title><rect x="550.4" y="517" width="2.1" height="15.0" fill="rgb(251,160,18)" rx="2" ry="2" />
<text  x="553.38" y="527.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (92 samples, 0.02%)</title><rect x="1025.8" y="869" width="0.3" height="15.0" fill="rgb(248,14,42)" rx="2" ry="2" />
<text  x="1028.82" y="879.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (61 samples, 0.01%)</title><rect x="749.5" y="901" width="0.2" height="15.0" fill="rgb(218,189,36)" rx="2" ry="2" />
<text  x="752.50" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (90,549 samples, 19.94%)</title><rect x="228.1" y="1045" width="235.3" height="15.0" fill="rgb(242,14,49)" rx="2" ry="2" />
<text  x="231.13" y="1055.5" >std::__invoke_impl&lt;void, std::_..</text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (87 samples, 0.02%)</title><rect x="743.7" y="1029" width="0.2" height="15.0" fill="rgb(232,75,28)" rx="2" ry="2" />
<text  x="746.67" y="1039.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (44 samples, 0.01%)</title><rect x="63.6" y="1301" width="0.1" height="15.0" fill="rgb(212,117,33)" rx="2" ry="2" />
<text  x="66.56" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (70 samples, 0.02%)</title><rect x="1025.9" y="837" width="0.2" height="15.0" fill="rgb(213,21,23)" rx="2" ry="2" />
<text  x="1028.87" y="847.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (84 samples, 0.02%)</title><rect x="963.1" y="789" width="0.2" height="15.0" fill="rgb(231,166,35)" rx="2" ry="2" />
<text  x="966.06" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (68 samples, 0.01%)</title><rect x="639.1" y="917" width="0.2" height="15.0" fill="rgb(233,86,1)" rx="2" ry="2" />
<text  x="642.10" y="927.5" ></text>
</g>
<g >
<title>sched_clock_cpu (42 samples, 0.01%)</title><rect x="948.1" y="613" width="0.2" height="15.0" fill="rgb(239,93,22)" rx="2" ry="2" />
<text  x="951.15" y="623.5" ></text>
</g>
<g >
<title>_copy_from_iter (157 samples, 0.03%)</title><rect x="938.8" y="709" width="0.4" height="15.0" fill="rgb(250,45,54)" rx="2" ry="2" />
<text  x="941.77" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1,155 samples, 0.25%)</title><rect x="271.3" y="805" width="3.0" height="15.0" fill="rgb(235,197,7)" rx="2" ry="2" />
<text  x="274.26" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (224 samples, 0.05%)</title><rect x="1105.8" y="1061" width="0.6" height="15.0" fill="rgb(234,139,18)" rx="2" ry="2" />
<text  x="1108.84" y="1071.5" ></text>
</g>
<g >
<title>mutex_unlock (39 samples, 0.01%)</title><rect x="657.7" y="725" width="0.1" height="15.0" fill="rgb(238,10,49)" rx="2" ry="2" />
<text  x="660.68" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (111 samples, 0.02%)</title><rect x="701.9" y="789" width="0.3" height="15.0" fill="rgb(254,164,14)" rx="2" ry="2" />
<text  x="704.87" y="799.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (61 samples, 0.01%)</title><rect x="929.5" y="805" width="0.2" height="15.0" fill="rgb(253,182,46)" rx="2" ry="2" />
<text  x="932.53" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (96 samples, 0.02%)</title><rect x="617.4" y="821" width="0.3" height="15.0" fill="rgb(242,66,22)" rx="2" ry="2" />
<text  x="620.43" y="831.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (185 samples, 0.04%)</title><rect x="1016.5" y="853" width="0.5" height="15.0" fill="rgb(205,167,37)" rx="2" ry="2" />
<text  x="1019.53" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (386 samples, 0.08%)</title><rect x="1109.3" y="901" width="1.0" height="15.0" fill="rgb(208,211,10)" rx="2" ry="2" />
<text  x="1112.31" y="911.5" ></text>
</g>
<g >
<title>pick_next_task_fair (51 samples, 0.01%)</title><rect x="732.3" y="741" width="0.1" height="15.0" fill="rgb(212,136,42)" rx="2" ry="2" />
<text  x="735.28" y="751.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::peer_addr[abi:cxx11] (4,005 samples, 0.88%)</title><rect x="611.6" y="933" width="10.4" height="15.0" fill="rgb(235,188,39)" rx="2" ry="2" />
<text  x="614.56" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (346 samples, 0.08%)</title><rect x="1078.1" y="1061" width="0.9" height="15.0" fill="rgb(211,50,3)" rx="2" ry="2" />
<text  x="1081.06" y="1071.5" ></text>
</g>
<g >
<title>update_irq_load_avg (56 samples, 0.01%)</title><rect x="489.8" y="949" width="0.2" height="15.0" fill="rgb(254,112,44)" rx="2" ry="2" />
<text  x="492.84" y="959.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (73 samples, 0.02%)</title><rect x="738.2" y="773" width="0.2" height="15.0" fill="rgb(212,49,51)" rx="2" ry="2" />
<text  x="741.23" y="783.5" ></text>
</g>
<g >
<title>_find_next_bit (57 samples, 0.01%)</title><rect x="552.2" y="485" width="0.2" height="15.0" fill="rgb(225,182,0)" rx="2" ry="2" />
<text  x="555.24" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (67 samples, 0.01%)</title><rect x="1079.3" y="997" width="0.2" height="15.0" fill="rgb(240,58,53)" rx="2" ry="2" />
<text  x="1082.29" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (62 samples, 0.01%)</title><rect x="284.2" y="821" width="0.1" height="15.0" fill="rgb(241,31,36)" rx="2" ry="2" />
<text  x="287.16" y="831.5" ></text>
</g>
<g >
<title>std::default_delete&lt;webserver::HttpConnection&gt;::operator (607 samples, 0.13%)</title><rect x="1108.8" y="981" width="1.6" height="15.0" fill="rgb(211,15,32)" rx="2" ry="2" />
<text  x="1111.83" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (160 samples, 0.04%)</title><rect x="39.6" y="1301" width="0.4" height="15.0" fill="rgb(232,102,43)" rx="2" ry="2" />
<text  x="42.58" y="1311.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,158 samples, 0.48%)</title><rect x="733.8" y="949" width="5.6" height="15.0" fill="rgb(205,63,32)" rx="2" ry="2" />
<text  x="736.80" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (53 samples, 0.01%)</title><rect x="529.8" y="677" width="0.1" height="15.0" fill="rgb(232,149,23)" rx="2" ry="2" />
<text  x="532.81" y="687.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (66 samples, 0.01%)</title><rect x="438.6" y="485" width="0.2" height="15.0" fill="rgb(236,105,35)" rx="2" ry="2" />
<text  x="441.64" y="495.5" ></text>
</g>
<g >
<title>psi_flags_change (39 samples, 0.01%)</title><rect x="665.3" y="613" width="0.1" height="15.0" fill="rgb(229,45,4)" rx="2" ry="2" />
<text  x="668.33" y="623.5" ></text>
</g>
<g >
<title>__fdget_pos (245 samples, 0.05%)</title><rect x="538.3" y="645" width="0.6" height="15.0" fill="rgb(214,115,54)" rx="2" ry="2" />
<text  x="541.29" y="655.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (59 samples, 0.01%)</title><rect x="1173.8" y="997" width="0.2" height="15.0" fill="rgb(224,75,5)" rx="2" ry="2" />
<text  x="1176.80" y="1007.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (521 samples, 0.11%)</title><rect x="1033.6" y="837" width="1.3" height="15.0" fill="rgb(242,22,27)" rx="2" ry="2" />
<text  x="1036.56" y="847.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (77 samples, 0.02%)</title><rect x="927.3" y="789" width="0.2" height="15.0" fill="rgb(250,117,3)" rx="2" ry="2" />
<text  x="930.29" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (259 samples, 0.06%)</title><rect x="532.9" y="757" width="0.7" height="15.0" fill="rgb(234,211,44)" rx="2" ry="2" />
<text  x="535.93" y="767.5" ></text>
</g>
<g >
<title>read_tsc (48 samples, 0.01%)</title><rect x="215.9" y="485" width="0.2" height="15.0" fill="rgb(239,160,36)" rx="2" ry="2" />
<text  x="218.93" y="495.5" ></text>
</g>
<g >
<title>webserver::Epoll::poll (17,688 samples, 3.89%)</title><rect x="464.3" y="1109" width="46.0" height="15.0" fill="rgb(225,65,35)" rx="2" ry="2" />
<text  x="467.30" y="1119.5" >webs..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::TcpSocket&gt; &gt;::construct&lt;webserver::TcpSocket, int&amp;, webserver::InetAddr&gt; (67 samples, 0.01%)</title><rect x="1169.6" y="981" width="0.2" height="15.0" fill="rgb(213,28,52)" rx="2" ry="2" />
<text  x="1172.59" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (790 samples, 0.17%)</title><rect x="304.7" y="725" width="2.1" height="15.0" fill="rgb(209,101,49)" rx="2" ry="2" />
<text  x="307.74" y="735.5" ></text>
</g>
<g >
<title>__fsnotify_parent (73 samples, 0.02%)</title><rect x="316.6" y="597" width="0.2" height="15.0" fill="rgb(234,217,30)" rx="2" ry="2" />
<text  x="319.58" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (58 samples, 0.01%)</title><rect x="643.2" y="933" width="0.2" height="15.0" fill="rgb(225,173,27)" rx="2" ry="2" />
<text  x="646.25" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (50 samples, 0.01%)</title><rect x="12.1" y="1221" width="0.2" height="15.0" fill="rgb(234,227,26)" rx="2" ry="2" />
<text  x="15.12" y="1231.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (93 samples, 0.02%)</title><rect x="115.5" y="1301" width="0.2" height="15.0" fill="rgb(229,13,3)" rx="2" ry="2" />
<text  x="118.48" y="1311.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;::~pair (48 samples, 0.01%)</title><rect x="284.2" y="789" width="0.1" height="15.0" fill="rgb(222,1,3)" rx="2" ry="2" />
<text  x="287.20" y="799.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (300 samples, 0.07%)</title><rect x="975.6" y="933" width="0.7" height="15.0" fill="rgb(220,33,6)" rx="2" ry="2" />
<text  x="978.57" y="943.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (180 samples, 0.04%)</title><rect x="675.2" y="741" width="0.5" height="15.0" fill="rgb(222,112,51)" rx="2" ry="2" />
<text  x="678.19" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (51 samples, 0.01%)</title><rect x="113.6" y="1301" width="0.1" height="15.0" fill="rgb(222,24,40)" rx="2" ry="2" />
<text  x="116.57" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt;::_M_next (46 samples, 0.01%)</title><rect x="96.7" y="1301" width="0.1" height="15.0" fill="rgb(228,109,32)" rx="2" ry="2" />
<text  x="99.66" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (88 samples, 0.02%)</title><rect x="533.9" y="629" width="0.2" height="15.0" fill="rgb(239,180,36)" rx="2" ry="2" />
<text  x="536.92" y="639.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;webserver::TcpSocket&gt; (9,903 samples, 2.18%)</title><rect x="1080.0" y="981" width="25.7" height="15.0" fill="rgb(242,134,34)" rx="2" ry="2" />
<text  x="1082.96" y="991.5" >s..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~_Tuple_impl (94 samples, 0.02%)</title><rect x="1078.7" y="965" width="0.3" height="15.0" fill="rgb(210,4,32)" rx="2" ry="2" />
<text  x="1081.71" y="975.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (24,525 samples, 5.40%)</title><rect x="514.4" y="901" width="63.7" height="15.0" fill="rgb(211,56,46)" rx="2" ry="2" />
<text  x="517.38" y="911.5" >spdlog:..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::__uniq_ptr_impl (86 samples, 0.02%)</title><rect x="1140.0" y="1029" width="0.2" height="15.0" fill="rgb(212,26,20)" rx="2" ry="2" />
<text  x="1143.02" y="1039.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (488 samples, 0.11%)</title><rect x="864.7" y="949" width="1.3" height="15.0" fill="rgb(221,0,13)" rx="2" ry="2" />
<text  x="867.73" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;webserver::HttpHandler::HttpVersion&amp;&gt; (125 samples, 0.03%)</title><rect x="787.4" y="1013" width="0.3" height="15.0" fill="rgb(239,119,8)" rx="2" ry="2" />
<text  x="790.39" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (253 samples, 0.06%)</title><rect x="620.0" y="869" width="0.7" height="15.0" fill="rgb(232,115,16)" rx="2" ry="2" />
<text  x="623.03" y="879.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (91 samples, 0.02%)</title><rect x="1136.5" y="981" width="0.3" height="15.0" fill="rgb(219,196,9)" rx="2" ry="2" />
<text  x="1139.54" y="991.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (48 samples, 0.01%)</title><rect x="855.6" y="949" width="0.2" height="15.0" fill="rgb(247,158,19)" rx="2" ry="2" />
<text  x="858.63" y="959.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (196 samples, 0.04%)</title><rect x="974.2" y="1029" width="0.5" height="15.0" fill="rgb(214,73,38)" rx="2" ry="2" />
<text  x="977.21" y="1039.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (141 samples, 0.03%)</title><rect x="296.1" y="629" width="0.4" height="15.0" fill="rgb(247,21,0)" rx="2" ry="2" />
<text  x="299.14" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (139 samples, 0.03%)</title><rect x="533.8" y="693" width="0.4" height="15.0" fill="rgb(229,147,10)" rx="2" ry="2" />
<text  x="536.83" y="703.5" ></text>
</g>
<g >
<title>std::bind&lt;void  (221 samples, 0.05%)</title><rect x="1076.2" y="1093" width="0.5" height="15.0" fill="rgb(237,156,11)" rx="2" ry="2" />
<text  x="1079.17" y="1103.5" ></text>
</g>
<g >
<title>__virt_addr_valid (119 samples, 0.03%)</title><rect x="317.9" y="549" width="0.3" height="15.0" fill="rgb(211,27,11)" rx="2" ry="2" />
<text  x="320.87" y="559.5" ></text>
</g>
<g >
<title>switch_fpu_return (120 samples, 0.03%)</title><rect x="678.7" y="805" width="0.3" height="15.0" fill="rgb(244,164,28)" rx="2" ry="2" />
<text  x="681.73" y="815.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (130 samples, 0.03%)</title><rect x="10.6" y="1301" width="0.4" height="15.0" fill="rgb(235,163,20)" rx="2" ry="2" />
<text  x="13.63" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_addr (111 samples, 0.02%)</title><rect x="36.0" y="1301" width="0.3" height="15.0" fill="rgb(244,103,4)" rx="2" ry="2" />
<text  x="39.04" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (56 samples, 0.01%)</title><rect x="160.9" y="1077" width="0.2" height="15.0" fill="rgb(221,135,18)" rx="2" ry="2" />
<text  x="163.95" y="1087.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (354 samples, 0.08%)</title><rect x="1005.6" y="917" width="0.9" height="15.0" fill="rgb(243,178,22)" rx="2" ry="2" />
<text  x="1008.61" y="927.5" ></text>
</g>
<g >
<title>futex_wake (1,660 samples, 0.37%)</title><rect x="734.3" y="821" width="4.3" height="15.0" fill="rgb(223,50,43)" rx="2" ry="2" />
<text  x="737.26" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (74 samples, 0.02%)</title><rect x="513.2" y="917" width="0.2" height="15.0" fill="rgb(224,136,32)" rx="2" ry="2" />
<text  x="516.20" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (77 samples, 0.02%)</title><rect x="743.7" y="997" width="0.2" height="15.0" fill="rgb(242,120,28)" rx="2" ry="2" />
<text  x="746.70" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (572 samples, 0.13%)</title><rect x="588.3" y="805" width="1.5" height="15.0" fill="rgb(242,163,35)" rx="2" ry="2" />
<text  x="591.31" y="815.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_alloc_security (41 samples, 0.01%)</title><rect x="1157.8" y="901" width="0.1" height="15.0" fill="rgb(228,189,24)" rx="2" ry="2" />
<text  x="1160.78" y="911.5" ></text>
</g>
<g >
<title>expand_files (61 samples, 0.01%)</title><rect x="1147.8" y="965" width="0.1" height="15.0" fill="rgb(245,157,7)" rx="2" ry="2" />
<text  x="1150.78" y="975.5" ></text>
</g>
<g >
<title>security_mmap_addr (84 samples, 0.02%)</title><rect x="800.3" y="949" width="0.2" height="15.0" fill="rgb(226,37,52)" rx="2" ry="2" />
<text  x="803.28" y="959.5" ></text>
</g>
<g >
<title>update_curr (45 samples, 0.01%)</title><rect x="731.8" y="709" width="0.1" height="15.0" fill="rgb(245,206,14)" rx="2" ry="2" />
<text  x="734.76" y="719.5" ></text>
</g>
<g >
<title>switch_fpu_return (57 samples, 0.01%)</title><rect x="733.4" y="805" width="0.1" height="15.0" fill="rgb(250,165,32)" rx="2" ry="2" />
<text  x="736.38" y="815.5" ></text>
</g>
<g >
<title>ip_output (4,352 samples, 0.96%)</title><rect x="1091.2" y="677" width="11.3" height="15.0" fill="rgb(233,103,5)" rx="2" ry="2" />
<text  x="1094.16" y="687.5" ></text>
</g>
<g >
<title>new_sync_write (8,494 samples, 1.87%)</title><rect x="705.8" y="773" width="22.1" height="15.0" fill="rgb(218,13,50)" rx="2" ry="2" />
<text  x="708.81" y="783.5" >n..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (74 samples, 0.02%)</title><rect x="533.9" y="597" width="0.2" height="15.0" fill="rgb(227,182,14)" rx="2" ry="2" />
<text  x="536.95" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (367 samples, 0.08%)</title><rect x="305.7" y="629" width="0.9" height="15.0" fill="rgb(246,71,41)" rx="2" ry="2" />
<text  x="308.68" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,252 samples, 0.72%)</title><rect x="548.6" y="533" width="8.5" height="15.0" fill="rgb(222,65,25)" rx="2" ry="2" />
<text  x="551.61" y="543.5" ></text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (57 samples, 0.01%)</title><rect x="1022.6" y="965" width="0.2" height="15.0" fill="rgb(217,158,33)" rx="2" ry="2" />
<text  x="1025.64" y="975.5" ></text>
</g>
<g >
<title>tcp_rack_advance (43 samples, 0.01%)</title><rect x="371.2" y="741" width="0.2" height="15.0" fill="rgb(208,73,42)" rx="2" ry="2" />
<text  x="374.24" y="751.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;webserver::HttpHandler::HttpMethod&amp;&gt; (179 samples, 0.04%)</title><rect x="786.7" y="1029" width="0.5" height="15.0" fill="rgb(254,226,48)" rx="2" ry="2" />
<text  x="789.71" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (100 samples, 0.02%)</title><rect x="930.3" y="869" width="0.2" height="15.0" fill="rgb(208,2,49)" rx="2" ry="2" />
<text  x="933.27" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (88 samples, 0.02%)</title><rect x="578.9" y="837" width="0.2" height="15.0" fill="rgb(253,147,35)" rx="2" ry="2" />
<text  x="581.87" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (557 samples, 0.12%)</title><rect x="1022.8" y="965" width="1.4" height="15.0" fill="rgb(220,36,34)" rx="2" ry="2" />
<text  x="1025.78" y="975.5" ></text>
</g>
<g >
<title>try_to_wake_up (999 samples, 0.22%)</title><rect x="344.3" y="613" width="2.6" height="15.0" fill="rgb(221,76,8)" rx="2" ry="2" />
<text  x="347.31" y="623.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (27,737 samples, 6.11%)</title><rect x="376.3" y="773" width="72.0" height="15.0" fill="rgb(216,62,5)" rx="2" ry="2" />
<text  x="379.28" y="783.5" >__tcp_tr..</text>
</g>
<g >
<title>psi_task_change (212 samples, 0.05%)</title><rect x="346.1" y="565" width="0.6" height="15.0" fill="rgb(229,109,38)" rx="2" ry="2" />
<text  x="349.15" y="575.5" ></text>
</g>
<g >
<title>enqueue_timer (58 samples, 0.01%)</title><rect x="199.9" y="181" width="0.1" height="15.0" fill="rgb(213,181,50)" rx="2" ry="2" />
<text  x="202.88" y="191.5" ></text>
</g>
<g >
<title>psi_group_change (533 samples, 0.12%)</title><rect x="487.9" y="949" width="1.4" height="15.0" fill="rgb(249,188,19)" rx="2" ry="2" />
<text  x="490.88" y="959.5" ></text>
</g>
<g >
<title>update_rq_clock (134 samples, 0.03%)</title><rect x="437.0" y="405" width="0.4" height="15.0" fill="rgb(238,104,40)" rx="2" ry="2" />
<text  x="440.04" y="415.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (41 samples, 0.01%)</title><rect x="682.4" y="757" width="0.2" height="15.0" fill="rgb(233,165,23)" rx="2" ry="2" />
<text  x="685.45" y="767.5" ></text>
</g>
<g >
<title>touch_atime (211 samples, 0.05%)</title><rect x="801.8" y="933" width="0.5" height="15.0" fill="rgb(246,85,27)" rx="2" ry="2" />
<text  x="804.76" y="943.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, false&gt;::_Head_base (40 samples, 0.01%)</title><rect x="72.0" y="1301" width="0.1" height="15.0" fill="rgb(244,118,12)" rx="2" ry="2" />
<text  x="75.00" y="1311.5" ></text>
</g>
<g >
<title>_int_malloc (455 samples, 0.10%)</title><rect x="987.2" y="901" width="1.2" height="15.0" fill="rgb(247,24,5)" rx="2" ry="2" />
<text  x="990.17" y="911.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (142 samples, 0.03%)</title><rect x="1109.9" y="757" width="0.4" height="15.0" fill="rgb(225,142,40)" rx="2" ry="2" />
<text  x="1112.89" y="767.5" ></text>
</g>
<g >
<title>schedule (1,146 samples, 0.25%)</title><rect x="339.1" y="597" width="3.0" height="15.0" fill="rgb(240,183,36)" rx="2" ry="2" />
<text  x="342.09" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (92 samples, 0.02%)</title><rect x="998.3" y="1029" width="0.3" height="15.0" fill="rgb(220,70,25)" rx="2" ry="2" />
<text  x="1001.34" y="1039.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (58 samples, 0.01%)</title><rect x="306.8" y="757" width="0.2" height="15.0" fill="rgb(245,188,34)" rx="2" ry="2" />
<text  x="309.83" y="767.5" ></text>
</g>
<g >
<title>psi_task_change (153 samples, 0.03%)</title><rect x="950.8" y="597" width="0.4" height="15.0" fill="rgb(221,100,54)" rx="2" ry="2" />
<text  x="953.79" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (73 samples, 0.02%)</title><rect x="500.1" y="1077" width="0.2" height="15.0" fill="rgb(251,87,26)" rx="2" ry="2" />
<text  x="503.07" y="1087.5" ></text>
</g>
<g >
<title>security_inode_free (229 samples, 0.05%)</title><rect x="177.3" y="565" width="0.6" height="15.0" fill="rgb(248,222,48)" rx="2" ry="2" />
<text  x="180.27" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (269 samples, 0.06%)</title><rect x="771.2" y="1045" width="0.7" height="15.0" fill="rgb(206,57,48)" rx="2" ry="2" />
<text  x="774.24" y="1055.5" ></text>
</g>
<g >
<title>enqueue_task_fair (940 samples, 0.21%)</title><rect x="1125.0" y="837" width="2.4" height="15.0" fill="rgb(216,169,14)" rx="2" ry="2" />
<text  x="1128.00" y="847.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (66 samples, 0.01%)</title><rect x="457.6" y="805" width="0.1" height="15.0" fill="rgb(233,222,4)" rx="2" ry="2" />
<text  x="460.58" y="815.5" ></text>
</g>
<g >
<title>sock_def_readable (90 samples, 0.02%)</title><rect x="1096.1" y="405" width="0.2" height="15.0" fill="rgb(209,198,26)" rx="2" ry="2" />
<text  x="1099.05" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51 samples, 0.01%)</title><rect x="1147.6" y="965" width="0.2" height="15.0" fill="rgb(231,99,45)" rx="2" ry="2" />
<text  x="1150.65" y="975.5" ></text>
</g>
<g >
<title>webserver::Channel::register_write (5,826 samples, 1.28%)</title><rect x="1003.4" y="1013" width="15.1" height="15.0" fill="rgb(212,179,16)" rx="2" ry="2" />
<text  x="1006.37" y="1023.5" ></text>
</g>
<g >
<title>do_futex (1,518 samples, 0.33%)</title><rect x="1069.9" y="853" width="3.9" height="15.0" fill="rgb(210,34,24)" rx="2" ry="2" />
<text  x="1072.90" y="863.5" ></text>
</g>
<g >
<title>set_task_cpu (229 samples, 0.05%)</title><rect x="428.1" y="405" width="0.6" height="15.0" fill="rgb(238,20,53)" rx="2" ry="2" />
<text  x="431.09" y="415.5" ></text>
</g>
<g >
<title>tcp_fin (3,107 samples, 0.68%)</title><rect x="202.1" y="197" width="8.1" height="15.0" fill="rgb(218,10,35)" rx="2" ry="2" />
<text  x="205.13" y="207.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (148 samples, 0.03%)</title><rect x="103.3" y="1301" width="0.4" height="15.0" fill="rgb(214,200,51)" rx="2" ry="2" />
<text  x="106.27" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (96 samples, 0.02%)</title><rect x="503.2" y="1013" width="0.2" height="15.0" fill="rgb(230,92,5)" rx="2" ry="2" />
<text  x="506.18" y="1023.5" ></text>
</g>
<g >
<title>__fsnotify_parent (335 samples, 0.07%)</title><rect x="849.0" y="949" width="0.9" height="15.0" fill="rgb(250,45,24)" rx="2" ry="2" />
<text  x="852.04" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21,320 samples, 4.69%)</title><rect x="293.0" y="869" width="55.4" height="15.0" fill="rgb(218,21,28)" rx="2" ry="2" />
<text  x="295.99" y="879.5" >spdlo..</text>
</g>
<g >
<title>webserver::TcpSocket::peer_addr[abi:cxx11] (3,191 samples, 0.70%)</title><rect x="1171.2" y="1093" width="8.3" height="15.0" fill="rgb(253,96,18)" rx="2" ry="2" />
<text  x="1174.22" y="1103.5" ></text>
</g>
<g >
<title>ttwu_do_activate (160 samples, 0.04%)</title><rect x="713.5" y="645" width="0.4" height="15.0" fill="rgb(226,74,31)" rx="2" ry="2" />
<text  x="716.51" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (280 samples, 0.06%)</title><rect x="1113.0" y="1045" width="0.8" height="15.0" fill="rgb(215,29,15)" rx="2" ry="2" />
<text  x="1116.03" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (160 samples, 0.04%)</title><rect x="68.3" y="1301" width="0.4" height="15.0" fill="rgb(207,214,5)" rx="2" ry="2" />
<text  x="71.31" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_work (109 samples, 0.02%)</title><rect x="1168.0" y="1013" width="0.3" height="15.0" fill="rgb(208,94,38)" rx="2" ry="2" />
<text  x="1171.02" y="1023.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2,015 samples, 0.44%)</title><rect x="337.9" y="725" width="5.3" height="15.0" fill="rgb(251,110,40)" rx="2" ry="2" />
<text  x="340.95" y="735.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (559 samples, 0.12%)</title><rect x="1033.5" y="853" width="1.4" height="15.0" fill="rgb(219,159,17)" rx="2" ry="2" />
<text  x="1036.46" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (86 samples, 0.02%)</title><rect x="1075.8" y="1093" width="0.2" height="15.0" fill="rgb(210,8,26)" rx="2" ry="2" />
<text  x="1078.82" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (206 samples, 0.05%)</title><rect x="995.6" y="949" width="0.6" height="15.0" fill="rgb(227,224,1)" rx="2" ry="2" />
<text  x="998.64" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt;::deallocate (350 samples, 0.08%)</title><rect x="283.2" y="773" width="0.9" height="15.0" fill="rgb(222,110,17)" rx="2" ry="2" />
<text  x="286.18" y="783.5" ></text>
</g>
<g >
<title>__slab_free (64 samples, 0.01%)</title><rect x="288.8" y="773" width="0.2" height="15.0" fill="rgb(209,227,4)" rx="2" ry="2" />
<text  x="291.83" y="783.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (71 samples, 0.02%)</title><rect x="115.0" y="1301" width="0.2" height="15.0" fill="rgb(208,217,15)" rx="2" ry="2" />
<text  x="118.05" y="1311.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (45 samples, 0.01%)</title><rect x="585.1" y="885" width="0.2" height="15.0" fill="rgb(210,215,22)" rx="2" ry="2" />
<text  x="588.15" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (198 samples, 0.04%)</title><rect x="1175.4" y="1045" width="0.5" height="15.0" fill="rgb(240,169,3)" rx="2" ry="2" />
<text  x="1178.40" y="1055.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (67 samples, 0.01%)</title><rect x="584.7" y="901" width="0.2" height="15.0" fill="rgb(223,118,10)" rx="2" ry="2" />
<text  x="587.73" y="911.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (200 samples, 0.04%)</title><rect x="607.1" y="837" width="0.5" height="15.0" fill="rgb(236,104,31)" rx="2" ry="2" />
<text  x="610.10" y="847.5" ></text>
</g>
<g >
<title>net_rx_action (141 samples, 0.03%)</title><rect x="183.8" y="341" width="0.3" height="15.0" fill="rgb(225,171,21)" rx="2" ry="2" />
<text  x="186.78" y="351.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (87 samples, 0.02%)</title><rect x="1031.4" y="917" width="0.3" height="15.0" fill="rgb(238,24,29)" rx="2" ry="2" />
<text  x="1034.42" y="927.5" ></text>
</g>
<g >
<title>mod_objcg_state (39 samples, 0.01%)</title><rect x="289.0" y="773" width="0.1" height="15.0" fill="rgb(226,147,36)" rx="2" ry="2" />
<text  x="292.03" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (379 samples, 0.08%)</title><rect x="696.5" y="805" width="1.0" height="15.0" fill="rgb(210,14,42)" rx="2" ry="2" />
<text  x="699.49" y="815.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (19,835 samples, 4.37%)</title><rect x="635.2" y="981" width="51.5" height="15.0" fill="rgb(222,176,44)" rx="2" ry="2" />
<text  x="638.15" y="991.5" >spdlo..</text>
</g>
<g >
<title>check_preempt_curr (338 samples, 0.07%)</title><rect x="951.3" y="613" width="0.8" height="15.0" fill="rgb(233,193,37)" rx="2" ry="2" />
<text  x="954.26" y="623.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (54 samples, 0.01%)</title><rect x="147.9" y="1301" width="0.2" height="15.0" fill="rgb(232,219,18)" rx="2" ry="2" />
<text  x="150.94" y="1311.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (9,699 samples, 2.14%)</title><rect x="536.6" y="773" width="25.2" height="15.0" fill="rgb(210,22,53)" rx="2" ry="2" />
<text  x="539.61" y="783.5" >_..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (139 samples, 0.03%)</title><rect x="183.8" y="293" width="0.3" height="15.0" fill="rgb(248,102,34)" rx="2" ry="2" />
<text  x="186.79" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (160 samples, 0.04%)</title><rect x="701.8" y="853" width="0.4" height="15.0" fill="rgb(212,130,3)" rx="2" ry="2" />
<text  x="704.78" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (41 samples, 0.01%)</title><rect x="1039.6" y="949" width="0.1" height="15.0" fill="rgb(252,195,1)" rx="2" ry="2" />
<text  x="1042.64" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3,490 samples, 0.77%)</title><rect x="1092.6" y="645" width="9.1" height="15.0" fill="rgb(247,97,49)" rx="2" ry="2" />
<text  x="1095.59" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (334 samples, 0.07%)</title><rect x="962.6" y="805" width="0.8" height="15.0" fill="rgb(208,82,52)" rx="2" ry="2" />
<text  x="965.58" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (263 samples, 0.06%)</title><rect x="698.4" y="837" width="0.7" height="15.0" fill="rgb(211,225,22)" rx="2" ry="2" />
<text  x="701.38" y="847.5" ></text>
</g>
<g >
<title>operator new (148 samples, 0.03%)</title><rect x="256.7" y="805" width="0.4" height="15.0" fill="rgb(229,57,10)" rx="2" ry="2" />
<text  x="259.70" y="815.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::function&lt;void  (554 samples, 0.12%)</title><rect x="624.7" y="1061" width="1.4" height="15.0" fill="rgb(232,13,0)" rx="2" ry="2" />
<text  x="627.69" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (43 samples, 0.01%)</title><rect x="1142.2" y="853" width="0.1" height="15.0" fill="rgb(212,79,0)" rx="2" ry="2" />
<text  x="1145.19" y="863.5" ></text>
</g>
<g >
<title>std::function&lt;void  (62 samples, 0.01%)</title><rect x="30.2" y="1301" width="0.1" height="15.0" fill="rgb(226,62,24)" rx="2" ry="2" />
<text  x="33.19" y="1311.5" ></text>
</g>
<g >
<title>__libc_recv (7,287 samples, 1.60%)</title><rect x="236.9" y="933" width="18.9" height="15.0" fill="rgb(247,166,37)" rx="2" ry="2" />
<text  x="239.86" y="943.5" ></text>
</g>
<g >
<title>ip_local_out (1,449 samples, 0.32%)</title><rect x="410.3" y="453" width="3.8" height="15.0" fill="rgb(206,220,19)" rx="2" ry="2" />
<text  x="413.33" y="463.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (62 samples, 0.01%)</title><rect x="1108.0" y="885" width="0.1" height="15.0" fill="rgb(249,15,27)" rx="2" ry="2" />
<text  x="1110.95" y="895.5" ></text>
</g>
<g >
<title>__switch_to_asm (105 samples, 0.02%)</title><rect x="1116.5" y="1045" width="0.2" height="15.0" fill="rgb(226,121,51)" rx="2" ry="2" />
<text  x="1119.46" y="1055.5" ></text>
</g>
<g >
<title>rb_erase (250 samples, 0.06%)</title><rect x="479.9" y="949" width="0.6" height="15.0" fill="rgb(250,93,13)" rx="2" ry="2" />
<text  x="482.86" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (41 samples, 0.01%)</title><rect x="20.3" y="1301" width="0.2" height="15.0" fill="rgb(246,64,23)" rx="2" ry="2" />
<text  x="23.35" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (48 samples, 0.01%)</title><rect x="637.9" y="933" width="0.2" height="15.0" fill="rgb(244,225,4)" rx="2" ry="2" />
<text  x="640.93" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (249 samples, 0.05%)</title><rect x="1038.4" y="917" width="0.6" height="15.0" fill="rgb(233,135,28)" rx="2" ry="2" />
<text  x="1041.40" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (113 samples, 0.02%)</title><rect x="1189.6" y="1285" width="0.3" height="15.0" fill="rgb(218,219,40)" rx="2" ry="2" />
<text  x="1192.64" y="1295.5" ></text>
</g>
<g >
<title>syscall_exit_work (223 samples, 0.05%)</title><rect x="1016.4" y="869" width="0.6" height="15.0" fill="rgb(236,227,44)" rx="2" ry="2" />
<text  x="1019.43" y="879.5" ></text>
</g>
<g >
<title>do_mmap (8,153 samples, 1.80%)</title><rect x="796.7" y="981" width="21.2" height="15.0" fill="rgb(232,141,46)" rx="2" ry="2" />
<text  x="799.69" y="991.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (71 samples, 0.02%)</title><rect x="817.1" y="933" width="0.2" height="15.0" fill="rgb(251,85,25)" rx="2" ry="2" />
<text  x="820.09" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (76 samples, 0.02%)</title><rect x="685.8" y="885" width="0.2" height="15.0" fill="rgb(207,220,46)" rx="2" ry="2" />
<text  x="688.81" y="895.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::erase (1,065 samples, 0.23%)</title><rect x="348.7" y="901" width="2.8" height="15.0" fill="rgb(227,106,15)" rx="2" ry="2" />
<text  x="351.73" y="911.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (46 samples, 0.01%)</title><rect x="727.6" y="741" width="0.1" height="15.0" fill="rgb(231,206,29)" rx="2" ry="2" />
<text  x="730.61" y="751.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (10,292 samples, 2.27%)</title><rect x="703.7" y="933" width="26.7" height="15.0" fill="rgb(227,220,37)" rx="2" ry="2" />
<text  x="706.71" y="943.5" >_..</text>
</g>
<g >
<title>update_curr (116 samples, 0.03%)</title><rect x="553.8" y="453" width="0.3" height="15.0" fill="rgb(211,74,31)" rx="2" ry="2" />
<text  x="556.85" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_shutdown (1,191 samples, 0.26%)</title><rect x="751.3" y="981" width="3.1" height="15.0" fill="rgb(218,125,7)" rx="2" ry="2" />
<text  x="754.27" y="991.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (43 samples, 0.01%)</title><rect x="141.2" y="1301" width="0.1" height="15.0" fill="rgb(223,82,21)" rx="2" ry="2" />
<text  x="144.18" y="1311.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (110 samples, 0.02%)</title><rect x="221.5" y="709" width="0.3" height="15.0" fill="rgb(247,214,32)" rx="2" ry="2" />
<text  x="224.53" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (81 samples, 0.02%)</title><rect x="88.9" y="1301" width="0.2" height="15.0" fill="rgb(225,3,46)" rx="2" ry="2" />
<text  x="91.90" y="1311.5" ></text>
</g>
<g >
<title>lock_timer_base.constprop.0 (62 samples, 0.01%)</title><rect x="200.1" y="181" width="0.2" height="15.0" fill="rgb(249,73,27)" rx="2" ry="2" />
<text  x="203.12" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (66 samples, 0.01%)</title><rect x="793.8" y="1013" width="0.2" height="15.0" fill="rgb(250,78,6)" rx="2" ry="2" />
<text  x="796.81" y="1023.5" ></text>
</g>
<g >
<title>enqueue_entity (140 samples, 0.03%)</title><rect x="966.2" y="693" width="0.3" height="15.0" fill="rgb(223,95,27)" rx="2" ry="2" />
<text  x="969.15" y="703.5" ></text>
</g>
<g >
<title>psi_task_switch (64 samples, 0.01%)</title><rect x="711.7" y="629" width="0.2" height="15.0" fill="rgb(241,58,23)" rx="2" ry="2" />
<text  x="714.75" y="639.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (95 samples, 0.02%)</title><rect x="1025.8" y="885" width="0.3" height="15.0" fill="rgb(231,225,13)" rx="2" ry="2" />
<text  x="1028.82" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (672 samples, 0.15%)</title><rect x="255.9" y="933" width="1.8" height="15.0" fill="rgb(234,168,39)" rx="2" ry="2" />
<text  x="258.94" y="943.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (105 samples, 0.02%)</title><rect x="703.2" y="869" width="0.3" height="15.0" fill="rgb(226,183,8)" rx="2" ry="2" />
<text  x="706.18" y="879.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (82 samples, 0.02%)</title><rect x="1144.6" y="1077" width="0.3" height="15.0" fill="rgb(227,75,43)" rx="2" ry="2" />
<text  x="1147.65" y="1087.5" ></text>
</g>
<g >
<title>___slab_alloc (146 samples, 0.03%)</title><rect x="1162.4" y="869" width="0.4" height="15.0" fill="rgb(211,192,27)" rx="2" ry="2" />
<text  x="1165.41" y="879.5" ></text>
</g>
<g >
<title>memset_erms (74 samples, 0.02%)</title><rect x="454.4" y="757" width="0.2" height="15.0" fill="rgb(220,57,31)" rx="2" ry="2" />
<text  x="457.44" y="767.5" ></text>
</g>
<g >
<title>operator new (296 samples, 0.07%)</title><rect x="994.8" y="869" width="0.8" height="15.0" fill="rgb(233,183,53)" rx="2" ry="2" />
<text  x="997.83" y="879.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (3,158 samples, 0.70%)</title><rect x="562.1" y="773" width="8.2" height="15.0" fill="rgb(228,7,53)" rx="2" ry="2" />
<text  x="565.13" y="783.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1,455 samples, 0.32%)</title><rect x="452.3" y="805" width="3.8" height="15.0" fill="rgb(238,38,33)" rx="2" ry="2" />
<text  x="455.31" y="815.5" ></text>
</g>
<g >
<title>__mod_timer (58 samples, 0.01%)</title><rect x="451.5" y="741" width="0.2" height="15.0" fill="rgb(252,101,24)" rx="2" ry="2" />
<text  x="454.53" y="751.5" ></text>
</g>
<g >
<title>__sys_accept4_file (7,663 samples, 1.69%)</title><rect x="1146.7" y="997" width="19.9" height="15.0" fill="rgb(243,118,24)" rx="2" ry="2" />
<text  x="1149.68" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,062 samples, 1.78%)</title><rect x="935.5" y="789" width="21.0" height="15.0" fill="rgb(216,56,51)" rx="2" ry="2" />
<text  x="938.53" y="799.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (187 samples, 0.04%)</title><rect x="918.1" y="933" width="0.5" height="15.0" fill="rgb(223,64,41)" rx="2" ry="2" />
<text  x="921.09" y="943.5" ></text>
</g>
<g >
<title>__fget_files (60 samples, 0.01%)</title><rect x="796.0" y="997" width="0.1" height="15.0" fill="rgb(246,197,48)" rx="2" ry="2" />
<text  x="798.98" y="1007.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (131 samples, 0.03%)</title><rect x="828.7" y="917" width="0.4" height="15.0" fill="rgb(246,153,35)" rx="2" ry="2" />
<text  x="831.74" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (85 samples, 0.02%)</title><rect x="982.5" y="981" width="0.3" height="15.0" fill="rgb(230,61,38)" rx="2" ry="2" />
<text  x="985.55" y="991.5" ></text>
</g>
<g >
<title>__rb_erase_color (43 samples, 0.01%)</title><rect x="823.6" y="965" width="0.1" height="15.0" fill="rgb(225,61,36)" rx="2" ry="2" />
<text  x="826.61" y="975.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (171 samples, 0.04%)</title><rect x="272.4" y="725" width="0.4" height="15.0" fill="rgb(252,169,53)" rx="2" ry="2" />
<text  x="275.36" y="735.5" ></text>
</g>
<g >
<title>__lookup_mnt (154 samples, 0.03%)</title><rect x="862.0" y="901" width="0.4" height="15.0" fill="rgb(213,70,42)" rx="2" ry="2" />
<text  x="865.04" y="911.5" ></text>
</g>
<g >
<title>netif_rx (250 samples, 0.06%)</title><rect x="390.5" y="661" width="0.7" height="15.0" fill="rgb(229,219,31)" rx="2" ry="2" />
<text  x="393.54" y="671.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (159 samples, 0.04%)</title><rect x="634.6" y="949" width="0.4" height="15.0" fill="rgb(209,219,51)" rx="2" ry="2" />
<text  x="637.59" y="959.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (137 samples, 0.03%)</title><rect x="583.3" y="869" width="0.3" height="15.0" fill="rgb(208,77,14)" rx="2" ry="2" />
<text  x="586.28" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (56 samples, 0.01%)</title><rect x="350.3" y="741" width="0.1" height="15.0" fill="rgb(241,110,15)" rx="2" ry="2" />
<text  x="353.26" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (123 samples, 0.03%)</title><rect x="10.6" y="1285" width="0.4" height="15.0" fill="rgb(212,6,15)" rx="2" ry="2" />
<text  x="13.64" y="1295.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (616 samples, 0.14%)</title><rect x="641.5" y="837" width="1.6" height="15.0" fill="rgb(216,65,23)" rx="2" ry="2" />
<text  x="644.54" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (64 samples, 0.01%)</title><rect x="532.7" y="677" width="0.2" height="15.0" fill="rgb(206,150,14)" rx="2" ry="2" />
<text  x="535.74" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (44 samples, 0.01%)</title><rect x="985.8" y="901" width="0.1" height="15.0" fill="rgb(250,56,21)" rx="2" ry="2" />
<text  x="988.78" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (98 samples, 0.02%)</title><rect x="1101.0" y="517" width="0.3" height="15.0" fill="rgb(212,94,51)" rx="2" ry="2" />
<text  x="1104.04" y="527.5" ></text>
</g>
<g >
<title>available_idle_cpu (155 samples, 0.03%)</title><rect x="327.7" y="469" width="0.4" height="15.0" fill="rgb(227,128,7)" rx="2" ry="2" />
<text  x="330.67" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (65 samples, 0.01%)</title><rect x="134.1" y="1301" width="0.1" height="15.0" fill="rgb(208,208,18)" rx="2" ry="2" />
<text  x="137.06" y="1311.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (61 samples, 0.01%)</title><rect x="541.9" y="581" width="0.1" height="15.0" fill="rgb(252,73,54)" rx="2" ry="2" />
<text  x="544.88" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::HttpHandler&gt;, webserver::ChannelHash, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; &gt;::insert (1,521 samples, 0.33%)</title><rect x="579.9" y="933" width="4.0" height="15.0" fill="rgb(221,2,45)" rx="2" ry="2" />
<text  x="582.90" y="943.5" ></text>
</g>
<g >
<title>__alloc_skb (663 samples, 0.15%)</title><rect x="218.0" y="517" width="1.7" height="15.0" fill="rgb(232,16,31)" rx="2" ry="2" />
<text  x="220.96" y="527.5" ></text>
</g>
<g >
<title>security_inode_getattr (60 samples, 0.01%)</title><rect x="864.2" y="981" width="0.2" height="15.0" fill="rgb(230,75,47)" rx="2" ry="2" />
<text  x="867.23" y="991.5" ></text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (77 samples, 0.02%)</title><rect x="569.5" y="645" width="0.2" height="15.0" fill="rgb(242,180,30)" rx="2" ry="2" />
<text  x="572.46" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (48 samples, 0.01%)</title><rect x="1140.5" y="1029" width="0.1" height="15.0" fill="rgb(224,176,14)" rx="2" ry="2" />
<text  x="1143.47" y="1039.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (129 samples, 0.03%)</title><rect x="604.1" y="837" width="0.3" height="15.0" fill="rgb(205,216,13)" rx="2" ry="2" />
<text  x="607.10" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (47 samples, 0.01%)</title><rect x="509.9" y="1045" width="0.2" height="15.0" fill="rgb(244,161,36)" rx="2" ry="2" />
<text  x="512.94" y="1055.5" ></text>
</g>
<g >
<title>__slab_free (62 samples, 0.01%)</title><rect x="246.7" y="789" width="0.1" height="15.0" fill="rgb(251,51,10)" rx="2" ry="2" />
<text  x="249.65" y="799.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (52 samples, 0.01%)</title><rect x="234.9" y="869" width="0.2" height="15.0" fill="rgb(211,180,20)" rx="2" ry="2" />
<text  x="237.94" y="879.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3,967 samples, 0.87%)</title><rect x="1091.4" y="661" width="10.3" height="15.0" fill="rgb(239,111,26)" rx="2" ry="2" />
<text  x="1094.36" y="671.5" ></text>
</g>
<g >
<title>wake_up_bit (67 samples, 0.01%)</title><rect x="1083.4" y="789" width="0.2" height="15.0" fill="rgb(212,127,29)" rx="2" ry="2" />
<text  x="1086.44" y="799.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (88 samples, 0.02%)</title><rect x="1099.6" y="325" width="0.3" height="15.0" fill="rgb(251,140,11)" rx="2" ry="2" />
<text  x="1102.64" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (159 samples, 0.04%)</title><rect x="517.8" y="645" width="0.4" height="15.0" fill="rgb(227,28,30)" rx="2" ry="2" />
<text  x="520.75" y="655.5" ></text>
</g>
<g >
<title>sock_poll (82 samples, 0.02%)</title><rect x="278.8" y="757" width="0.2" height="15.0" fill="rgb(229,131,50)" rx="2" ry="2" />
<text  x="281.76" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (52 samples, 0.01%)</title><rect x="513.2" y="885" width="0.2" height="15.0" fill="rgb(228,16,33)" rx="2" ry="2" />
<text  x="516.23" y="895.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (44 samples, 0.01%)</title><rect x="729.4" y="789" width="0.1" height="15.0" fill="rgb(232,39,15)" rx="2" ry="2" />
<text  x="732.37" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (52 samples, 0.01%)</title><rect x="584.8" y="885" width="0.1" height="15.0" fill="rgb(254,46,9)" rx="2" ry="2" />
<text  x="587.76" y="895.5" ></text>
</g>
<g >
<title>webserver::InetAddr::to_ip_port_string[abi:cxx11] (3,174 samples, 0.70%)</title><rect x="1171.3" y="1077" width="8.2" height="15.0" fill="rgb(231,71,29)" rx="2" ry="2" />
<text  x="1174.27" y="1087.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (171 samples, 0.04%)</title><rect x="311.2" y="725" width="0.5" height="15.0" fill="rgb(221,79,5)" rx="2" ry="2" />
<text  x="314.24" y="735.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (48 samples, 0.01%)</title><rect x="489.5" y="965" width="0.2" height="15.0" fill="rgb(238,41,43)" rx="2" ry="2" />
<text  x="492.54" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (102 samples, 0.02%)</title><rect x="646.6" y="901" width="0.3" height="15.0" fill="rgb(233,176,6)" rx="2" ry="2" />
<text  x="649.65" y="911.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (104 samples, 0.02%)</title><rect x="690.7" y="949" width="0.3" height="15.0" fill="rgb(225,158,46)" rx="2" ry="2" />
<text  x="693.74" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (66 samples, 0.01%)</title><rect x="688.6" y="981" width="0.1" height="15.0" fill="rgb(214,16,48)" rx="2" ry="2" />
<text  x="691.57" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (106 samples, 0.02%)</title><rect x="504.1" y="1061" width="0.3" height="15.0" fill="rgb(206,143,25)" rx="2" ry="2" />
<text  x="507.15" y="1071.5" ></text>
</g>
<g >
<title>schedule (1,732 samples, 0.38%)</title><rect x="563.9" y="629" width="4.5" height="15.0" fill="rgb(205,105,41)" rx="2" ry="2" />
<text  x="566.90" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (53 samples, 0.01%)</title><rect x="310.3" y="629" width="0.1" height="15.0" fill="rgb(206,100,10)" rx="2" ry="2" />
<text  x="313.29" y="639.5" ></text>
</g>
<g >
<title>update_load_avg (129 samples, 0.03%)</title><rect x="432.5" y="357" width="0.3" height="15.0" fill="rgb(235,162,15)" rx="2" ry="2" />
<text  x="435.46" y="367.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (40 samples, 0.01%)</title><rect x="926.6" y="773" width="0.1" height="15.0" fill="rgb(222,164,4)" rx="2" ry="2" />
<text  x="929.64" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (86 samples, 0.02%)</title><rect x="694.1" y="917" width="0.3" height="15.0" fill="rgb(221,2,16)" rx="2" ry="2" />
<text  x="697.15" y="927.5" ></text>
</g>
<g >
<title>[[ip_tables]] (145 samples, 0.03%)</title><rect x="410.6" y="405" width="0.4" height="15.0" fill="rgb(219,64,45)" rx="2" ry="2" />
<text  x="413.59" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::~_Vector_base (552 samples, 0.12%)</title><rect x="224.6" y="1061" width="1.4" height="15.0" fill="rgb(232,17,36)" rx="2" ry="2" />
<text  x="227.61" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (445 samples, 0.10%)</title><rect x="971.5" y="1013" width="1.1" height="15.0" fill="rgb(242,175,8)" rx="2" ry="2" />
<text  x="974.48" y="1023.5" ></text>
</g>
<g >
<title>kmalloc_slab (40 samples, 0.01%)</title><rect x="407.5" y="437" width="0.1" height="15.0" fill="rgb(232,100,3)" rx="2" ry="2" />
<text  x="410.47" y="447.5" ></text>
</g>
<g >
<title>pty_write_room (78 samples, 0.02%)</title><rect x="1059.2" y="741" width="0.2" height="15.0" fill="rgb(243,81,34)" rx="2" ry="2" />
<text  x="1062.24" y="751.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,105 samples, 0.46%)</title><rect x="337.8" y="773" width="5.5" height="15.0" fill="rgb(222,229,51)" rx="2" ry="2" />
<text  x="340.83" y="783.5" ></text>
</g>
<g >
<title>sock_poll (301 samples, 0.07%)</title><rect x="747.2" y="885" width="0.8" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="750.19" y="895.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (430 samples, 0.09%)</title><rect x="1142.8" y="933" width="1.1" height="15.0" fill="rgb(205,214,54)" rx="2" ry="2" />
<text  x="1145.76" y="943.5" ></text>
</g>
<g >
<title>do_output_char (380 samples, 0.08%)</title><rect x="941.4" y="693" width="1.0" height="15.0" fill="rgb(210,89,19)" rx="2" ry="2" />
<text  x="944.43" y="703.5" ></text>
</g>
<g >
<title>enqueue_entity (533 samples, 0.12%)</title><rect x="1125.4" y="821" width="1.4" height="15.0" fill="rgb(221,154,12)" rx="2" ry="2" />
<text  x="1128.43" y="831.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (68 samples, 0.01%)</title><rect x="149.1" y="1301" width="0.2" height="15.0" fill="rgb(235,141,6)" rx="2" ry="2" />
<text  x="152.13" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (108 samples, 0.02%)</title><rect x="658.1" y="709" width="0.3" height="15.0" fill="rgb(218,60,45)" rx="2" ry="2" />
<text  x="661.13" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (49 samples, 0.01%)</title><rect x="759.6" y="1045" width="0.2" height="15.0" fill="rgb(228,141,52)" rx="2" ry="2" />
<text  x="762.65" y="1055.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1,391 samples, 0.31%)</title><rect x="1096.5" y="389" width="3.6" height="15.0" fill="rgb(252,15,14)" rx="2" ry="2" />
<text  x="1099.50" y="399.5" ></text>
</g>
<g >
<title>psi_task_switch (473 samples, 0.10%)</title><rect x="676.2" y="741" width="1.2" height="15.0" fill="rgb(237,68,16)" rx="2" ry="2" />
<text  x="679.19" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (67 samples, 0.01%)</title><rect x="1040.8" y="869" width="0.2" height="15.0" fill="rgb(212,84,33)" rx="2" ry="2" />
<text  x="1043.79" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (342 samples, 0.08%)</title><rect x="257.9" y="885" width="0.9" height="15.0" fill="rgb(249,25,20)" rx="2" ry="2" />
<text  x="260.87" y="895.5" ></text>
</g>
<g >
<title>select_task_rq_fair (44 samples, 0.01%)</title><rect x="545.7" y="501" width="0.1" height="15.0" fill="rgb(231,168,54)" rx="2" ry="2" />
<text  x="548.71" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (41 samples, 0.01%)</title><rect x="1017.1" y="869" width="0.1" height="15.0" fill="rgb(227,145,53)" rx="2" ry="2" />
<text  x="1020.08" y="879.5" ></text>
</g>
<g >
<title>do_futex (1,960 samples, 0.43%)</title><rect x="571.0" y="693" width="5.0" height="15.0" fill="rgb(222,15,36)" rx="2" ry="2" />
<text  x="573.96" y="703.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (54 samples, 0.01%)</title><rect x="284.2" y="805" width="0.1" height="15.0" fill="rgb(234,15,7)" rx="2" ry="2" />
<text  x="287.18" y="815.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (155 samples, 0.03%)</title><rect x="465.8" y="1077" width="0.4" height="15.0" fill="rgb(206,202,45)" rx="2" ry="2" />
<text  x="468.83" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (353 samples, 0.08%)</title><rect x="758.7" y="1029" width="0.9" height="15.0" fill="rgb(230,127,13)" rx="2" ry="2" />
<text  x="761.73" y="1039.5" ></text>
</g>
<g >
<title>webserver::Channel::set_read_cb (633 samples, 0.14%)</title><rect x="608.6" y="901" width="1.7" height="15.0" fill="rgb(209,114,34)" rx="2" ry="2" />
<text  x="611.62" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::_M_ptr (56 samples, 0.01%)</title><rect x="1074.9" y="933" width="0.1" height="15.0" fill="rgb(218,166,54)" rx="2" ry="2" />
<text  x="1077.90" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (169 samples, 0.04%)</title><rect x="1030.5" y="949" width="0.4" height="15.0" fill="rgb(245,55,13)" rx="2" ry="2" />
<text  x="1033.48" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_openat (6,141 samples, 1.35%)</title><rect x="874.9" y="1013" width="16.0" height="15.0" fill="rgb(211,127,13)" rx="2" ry="2" />
<text  x="877.91" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (52 samples, 0.01%)</title><rect x="1018.1" y="933" width="0.2" height="15.0" fill="rgb(214,41,29)" rx="2" ry="2" />
<text  x="1021.13" y="943.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::new_connection (10,652 samples, 2.35%)</title><rect x="583.9" y="933" width="27.7" height="15.0" fill="rgb(243,9,18)" rx="2" ry="2" />
<text  x="586.88" y="943.5" >w..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (55 samples, 0.01%)</title><rect x="656.0" y="725" width="0.1" height="15.0" fill="rgb(246,173,34)" rx="2" ry="2" />
<text  x="659.00" y="735.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20,229 samples, 4.45%)</title><rect x="392.3" y="709" width="52.6" height="15.0" fill="rgb(245,152,38)" rx="2" ry="2" />
<text  x="395.34" y="719.5" >__loc..</text>
</g>
<g >
<title>down_read (48 samples, 0.01%)</title><rect x="322.6" y="549" width="0.1" height="15.0" fill="rgb(215,94,13)" rx="2" ry="2" />
<text  x="325.59" y="559.5" ></text>
</g>
<g >
<title>operator new (136 samples, 0.03%)</title><rect x="52.9" y="1301" width="0.3" height="15.0" fill="rgb(252,197,28)" rx="2" ry="2" />
<text  x="55.86" y="1311.5" ></text>
</g>
<g >
<title>sock_alloc_inode (996 samples, 0.22%)</title><rect x="1158.6" y="933" width="2.6" height="15.0" fill="rgb(226,123,49)" rx="2" ry="2" />
<text  x="1161.57" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (411 samples, 0.09%)</title><rect x="360.8" y="837" width="1.1" height="15.0" fill="rgb(228,229,18)" rx="2" ry="2" />
<text  x="363.84" y="847.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (9,208 samples, 2.03%)</title><rect x="933.4" y="917" width="23.9" height="15.0" fill="rgb(213,224,32)" rx="2" ry="2" />
<text  x="936.36" y="927.5" >s..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (106 samples, 0.02%)</title><rect x="21.3" y="1301" width="0.3" height="15.0" fill="rgb(238,120,34)" rx="2" ry="2" />
<text  x="24.34" y="1311.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (73 samples, 0.02%)</title><rect x="1059.6" y="741" width="0.2" height="15.0" fill="rgb(231,42,15)" rx="2" ry="2" />
<text  x="1062.57" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,124 samples, 2.45%)</title><rect x="822.6" y="1029" width="28.9" height="15.0" fill="rgb(219,128,11)" rx="2" ry="2" />
<text  x="825.55" y="1039.5" >do..</text>
</g>
<g >
<title>tcp_fin (698 samples, 0.15%)</title><rect x="1085.8" y="677" width="1.8" height="15.0" fill="rgb(213,223,4)" rx="2" ry="2" />
<text  x="1088.76" y="687.5" ></text>
</g>
<g >
<title>update_cfs_group (39 samples, 0.01%)</title><rect x="1127.0" y="821" width="0.1" height="15.0" fill="rgb(212,110,39)" rx="2" ry="2" />
<text  x="1130.02" y="831.5" ></text>
</g>
<g >
<title>[[nf_nat]] (47 samples, 0.01%)</title><rect x="1091.0" y="629" width="0.2" height="15.0" fill="rgb(240,201,34)" rx="2" ry="2" />
<text  x="1094.03" y="639.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (252 samples, 0.06%)</title><rect x="183.5" y="437" width="0.7" height="15.0" fill="rgb(224,133,9)" rx="2" ry="2" />
<text  x="186.55" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (173 samples, 0.04%)</title><rect x="67.0" y="1301" width="0.5" height="15.0" fill="rgb(236,191,44)" rx="2" ry="2" />
<text  x="70.02" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::max_size (41 samples, 0.01%)</title><rect x="138.4" y="1301" width="0.1" height="15.0" fill="rgb(222,72,19)" rx="2" ry="2" />
<text  x="141.38" y="1311.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (2,496 samples, 0.55%)</title><rect x="744.1" y="1013" width="6.5" height="15.0" fill="rgb(230,24,28)" rx="2" ry="2" />
<text  x="747.08" y="1023.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (40 samples, 0.01%)</title><rect x="956.4" y="773" width="0.1" height="15.0" fill="rgb(224,204,52)" rx="2" ry="2" />
<text  x="959.37" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_free (126 samples, 0.03%)</title><rect x="908.5" y="917" width="0.3" height="15.0" fill="rgb(246,51,46)" rx="2" ry="2" />
<text  x="911.47" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,403 samples, 0.31%)</title><rect x="338.7" y="661" width="3.6" height="15.0" fill="rgb(207,127,14)" rx="2" ry="2" />
<text  x="341.67" y="671.5" ></text>
</g>
<g >
<title>wake_up_q (1,010 samples, 0.22%)</title><rect x="344.3" y="629" width="2.6" height="15.0" fill="rgb(228,145,5)" rx="2" ry="2" />
<text  x="347.28" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (102 samples, 0.02%)</title><rect x="701.9" y="757" width="0.3" height="15.0" fill="rgb(247,50,35)" rx="2" ry="2" />
<text  x="704.89" y="767.5" ></text>
</g>
<g >
<title>tcp_check_space (149 samples, 0.03%)</title><rect x="419.3" y="485" width="0.4" height="15.0" fill="rgb(219,115,29)" rx="2" ry="2" />
<text  x="422.27" y="495.5" ></text>
</g>
<g >
<title>cpuacct_charge (48 samples, 0.01%)</title><rect x="206.5" y="37" width="0.1" height="15.0" fill="rgb(206,187,33)" rx="2" ry="2" />
<text  x="209.48" y="47.5" ></text>
</g>
<g >
<title>down_read (63 samples, 0.01%)</title><rect x="942.4" y="693" width="0.2" height="15.0" fill="rgb(232,170,23)" rx="2" ry="2" />
<text  x="945.42" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt;::allocate (301 samples, 0.07%)</title><rect x="581.9" y="837" width="0.8" height="15.0" fill="rgb(205,3,45)" rx="2" ry="2" />
<text  x="584.89" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (42 samples, 0.01%)</title><rect x="1025.9" y="773" width="0.1" height="15.0" fill="rgb(232,131,2)" rx="2" ry="2" />
<text  x="1028.93" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (65 samples, 0.01%)</title><rect x="275.9" y="789" width="0.2" height="15.0" fill="rgb(236,175,8)" rx="2" ry="2" />
<text  x="278.94" y="799.5" ></text>
</g>
<g >
<title>select_task_rq_fair (348 samples, 0.08%)</title><rect x="681.8" y="773" width="0.9" height="15.0" fill="rgb(239,41,12)" rx="2" ry="2" />
<text  x="684.78" y="783.5" ></text>
</g>
<g >
<title>userfaultfd_unmap_complete (51 samples, 0.01%)</title><rect x="819.4" y="981" width="0.2" height="15.0" fill="rgb(208,191,2)" rx="2" ry="2" />
<text  x="822.44" y="991.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::HttpHandler&gt;::_M_weak_assign&lt;webserver::HttpHandler&gt; (58 samples, 0.01%)</title><rect x="1106.5" y="1045" width="0.1" height="15.0" fill="rgb(212,92,27)" rx="2" ry="2" />
<text  x="1109.46" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (39 samples, 0.01%)</title><rect x="782.6" y="997" width="0.1" height="15.0" fill="rgb(244,149,18)" rx="2" ry="2" />
<text  x="785.63" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::function&lt;void  (426 samples, 0.09%)</title><rect x="1113.8" y="1045" width="1.1" height="15.0" fill="rgb(213,98,21)" rx="2" ry="2" />
<text  x="1116.76" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl_data::_M_swap_data (343 samples, 0.08%)</title><rect x="222.8" y="1077" width="0.9" height="15.0" fill="rgb(205,176,38)" rx="2" ry="2" />
<text  x="225.80" y="1087.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (64 samples, 0.01%)</title><rect x="116.3" y="1301" width="0.2" height="15.0" fill="rgb(252,150,3)" rx="2" ry="2" />
<text  x="119.31" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (411 samples, 0.09%)</title><rect x="1035.3" y="901" width="1.0" height="15.0" fill="rgb(247,131,39)" rx="2" ry="2" />
<text  x="1038.28" y="911.5" ></text>
</g>
<g >
<title>__ip_finish_output (55 samples, 0.01%)</title><rect x="414.2" y="437" width="0.2" height="15.0" fill="rgb(228,74,21)" rx="2" ry="2" />
<text  x="417.21" y="447.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (176 samples, 0.04%)</title><rect x="533.7" y="757" width="0.5" height="15.0" fill="rgb(243,153,51)" rx="2" ry="2" />
<text  x="536.74" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (53 samples, 0.01%)</title><rect x="257.3" y="821" width="0.2" height="15.0" fill="rgb(229,38,40)" rx="2" ry="2" />
<text  x="260.32" y="831.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (572 samples, 0.13%)</title><rect x="819.6" y="1013" width="1.5" height="15.0" fill="rgb(226,175,17)" rx="2" ry="2" />
<text  x="822.61" y="1023.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (47 samples, 0.01%)</title><rect x="1042.6" y="853" width="0.1" height="15.0" fill="rgb(243,172,21)" rx="2" ry="2" />
<text  x="1045.58" y="863.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (154 samples, 0.03%)</title><rect x="572.1" y="629" width="0.4" height="15.0" fill="rgb(227,140,15)" rx="2" ry="2" />
<text  x="575.06" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (147 samples, 0.03%)</title><rect x="1176.6" y="1029" width="0.4" height="15.0" fill="rgb(222,219,42)" rx="2" ry="2" />
<text  x="1179.62" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (99 samples, 0.02%)</title><rect x="647.9" y="757" width="0.2" height="15.0" fill="rgb(226,7,32)" rx="2" ry="2" />
<text  x="650.85" y="767.5" ></text>
</g>
<g >
<title>spdlog::sinks::sink::should_log (44 samples, 0.01%)</title><rect x="1075.1" y="981" width="0.1" height="15.0" fill="rgb(219,92,40)" rx="2" ry="2" />
<text  x="1078.07" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (92 samples, 0.02%)</title><rect x="294.1" y="821" width="0.2" height="15.0" fill="rgb(233,43,30)" rx="2" ry="2" />
<text  x="297.06" y="831.5" ></text>
</g>
<g >
<title>up_read (46 samples, 0.01%)</title><rect x="904.7" y="885" width="0.1" height="15.0" fill="rgb(247,195,26)" rx="2" ry="2" />
<text  x="907.65" y="895.5" ></text>
</g>
<g >
<title>inet_csk_accept (2,142 samples, 0.47%)</title><rect x="1148.8" y="965" width="5.6" height="15.0" fill="rgb(219,177,37)" rx="2" ry="2" />
<text  x="1151.85" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (185 samples, 0.04%)</title><rect x="258.1" y="853" width="0.4" height="15.0" fill="rgb(248,168,9)" rx="2" ry="2" />
<text  x="261.05" y="863.5" ></text>
</g>
<g >
<title>locks_remove_posix (108 samples, 0.02%)</title><rect x="173.2" y="645" width="0.3" height="15.0" fill="rgb(219,83,7)" rx="2" ry="2" />
<text  x="176.23" y="655.5" ></text>
</g>
<g >
<title>__sock_release (7,943 samples, 1.75%)</title><rect x="1084.7" y="805" width="20.6" height="15.0" fill="rgb(235,153,28)" rx="2" ry="2" />
<text  x="1087.70" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (39 samples, 0.01%)</title><rect x="11.3" y="1301" width="0.1" height="15.0" fill="rgb(229,65,43)" rx="2" ry="2" />
<text  x="14.26" y="1311.5" ></text>
</g>
<g >
<title>__kfree_skb (936 samples, 0.21%)</title><rect x="243.3" y="805" width="2.4" height="15.0" fill="rgb(211,71,21)" rx="2" ry="2" />
<text  x="246.27" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (157 samples, 0.03%)</title><rect x="259.0" y="917" width="0.4" height="15.0" fill="rgb(210,187,53)" rx="2" ry="2" />
<text  x="262.01" y="927.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (149 samples, 0.03%)</title><rect x="333.1" y="533" width="0.3" height="15.0" fill="rgb(249,0,19)" rx="2" ry="2" />
<text  x="336.06" y="543.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (50 samples, 0.01%)</title><rect x="262.6" y="885" width="0.2" height="15.0" fill="rgb(212,124,22)" rx="2" ry="2" />
<text  x="265.65" y="895.5" ></text>
</g>
<g >
<title>set_task_cpu (194 samples, 0.04%)</title><rect x="1124.4" y="869" width="0.5" height="15.0" fill="rgb(210,74,26)" rx="2" ry="2" />
<text  x="1127.35" y="879.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (165 samples, 0.04%)</title><rect x="816.2" y="933" width="0.4" height="15.0" fill="rgb(246,215,28)" rx="2" ry="2" />
<text  x="819.19" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::push_back (358 samples, 0.08%)</title><rect x="505.3" y="1093" width="0.9" height="15.0" fill="rgb(221,96,50)" rx="2" ry="2" />
<text  x="508.28" y="1103.5" ></text>
</g>
<g >
<title>pty_write (326 samples, 0.07%)</title><rect x="1048.9" y="725" width="0.9" height="15.0" fill="rgb(224,141,45)" rx="2" ry="2" />
<text  x="1051.93" y="735.5" ></text>
</g>
<g >
<title>memcpy_erms (139 samples, 0.03%)</title><rect x="714.6" y="677" width="0.4" height="15.0" fill="rgb(217,105,43)" rx="2" ry="2" />
<text  x="717.59" y="687.5" ></text>
</g>
<g >
<title>read_tsc (45 samples, 0.01%)</title><rect x="448.5" y="757" width="0.1" height="15.0" fill="rgb(230,112,42)" rx="2" ry="2" />
<text  x="451.49" y="767.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (195 samples, 0.04%)</title><rect x="298.2" y="789" width="0.5" height="15.0" fill="rgb(239,200,33)" rx="2" ry="2" />
<text  x="301.19" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (696 samples, 0.15%)</title><rect x="986.6" y="997" width="1.8" height="15.0" fill="rgb(253,184,45)" rx="2" ry="2" />
<text  x="989.55" y="1007.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (44 samples, 0.01%)</title><rect x="1140.9" y="1029" width="0.1" height="15.0" fill="rgb(240,90,28)" rx="2" ry="2" />
<text  x="1143.90" y="1039.5" ></text>
</g>
<g >
<title>tcp_poll (139 samples, 0.03%)</title><rect x="747.6" y="869" width="0.4" height="15.0" fill="rgb(212,33,32)" rx="2" ry="2" />
<text  x="750.61" y="879.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (1,475 samples, 0.32%)</title><rect x="1106.6" y="1093" width="3.9" height="15.0" fill="rgb(248,226,30)" rx="2" ry="2" />
<text  x="1109.62" y="1103.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (42 samples, 0.01%)</title><rect x="690.9" y="933" width="0.1" height="15.0" fill="rgb(218,24,27)" rx="2" ry="2" />
<text  x="693.90" y="943.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (10,025 samples, 2.21%)</title><rect x="535.9" y="805" width="26.0" height="15.0" fill="rgb(227,67,17)" rx="2" ry="2" />
<text  x="538.86" y="815.5" >s..</text>
</g>
<g >
<title>kthread_is_per_cpu (68 samples, 0.01%)</title><rect x="1052.3" y="661" width="0.1" height="15.0" fill="rgb(216,162,29)" rx="2" ry="2" />
<text  x="1055.26" y="671.5" ></text>
</g>
<g >
<title>_int_free (67 samples, 0.01%)</title><rect x="273.2" y="677" width="0.2" height="15.0" fill="rgb(225,135,10)" rx="2" ry="2" />
<text  x="276.18" y="687.5" ></text>
</g>
<g >
<title>kfence_ksize (43 samples, 0.01%)</title><rect x="455.9" y="757" width="0.1" height="15.0" fill="rgb(215,99,30)" rx="2" ry="2" />
<text  x="458.90" y="767.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (563 samples, 0.12%)</title><rect x="289.9" y="837" width="1.5" height="15.0" fill="rgb(253,40,53)" rx="2" ry="2" />
<text  x="292.92" y="847.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (119 samples, 0.03%)</title><rect x="566.0" y="565" width="0.3" height="15.0" fill="rgb(251,71,13)" rx="2" ry="2" />
<text  x="569.03" y="575.5" ></text>
</g>
<g >
<title>__libc_read (109 samples, 0.02%)</title><rect x="10.3" y="1301" width="0.2" height="15.0" fill="rgb(213,218,19)" rx="2" ry="2" />
<text  x="13.26" y="1311.5" ></text>
</g>
<g >
<title>cpumask_next (51 samples, 0.01%)</title><rect x="662.4" y="645" width="0.2" height="15.0" fill="rgb(218,111,24)" rx="2" ry="2" />
<text  x="665.43" y="655.5" ></text>
</g>
<g >
<title>__fget_light (382 samples, 0.08%)</title><rect x="1010.6" y="853" width="1.0" height="15.0" fill="rgb(210,16,23)" rx="2" ry="2" />
<text  x="1013.57" y="863.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::get_state (47 samples, 0.01%)</title><rect x="742.5" y="1077" width="0.1" height="15.0" fill="rgb(254,129,4)" rx="2" ry="2" />
<text  x="745.48" y="1087.5" ></text>
</g>
<g >
<title>set_next_entity (179 samples, 0.04%)</title><rect x="486.7" y="949" width="0.5" height="15.0" fill="rgb(237,83,17)" rx="2" ry="2" />
<text  x="489.72" y="959.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::set_version (287 samples, 0.06%)</title><rect x="793.4" y="1061" width="0.8" height="15.0" fill="rgb(208,129,12)" rx="2" ry="2" />
<text  x="796.42" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (189 samples, 0.04%)</title><rect x="693.5" y="933" width="0.5" height="15.0" fill="rgb(230,138,45)" rx="2" ry="2" />
<text  x="696.46" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (71 samples, 0.02%)</title><rect x="931.5" y="725" width="0.2" height="15.0" fill="rgb(251,9,6)" rx="2" ry="2" />
<text  x="934.47" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (55 samples, 0.01%)</title><rect x="1179.2" y="1029" width="0.1" height="15.0" fill="rgb(253,221,30)" rx="2" ry="2" />
<text  x="1182.17" y="1039.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (2,566 samples, 0.57%)</title><rect x="285.1" y="885" width="6.7" height="15.0" fill="rgb(247,175,34)" rx="2" ry="2" />
<text  x="288.14" y="895.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (118 samples, 0.03%)</title><rect x="340.4" y="565" width="0.3" height="15.0" fill="rgb(234,176,28)" rx="2" ry="2" />
<text  x="343.43" y="575.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (256 samples, 0.06%)</title><rect x="170.7" y="789" width="0.7" height="15.0" fill="rgb(220,24,3)" rx="2" ry="2" />
<text  x="173.72" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (213 samples, 0.05%)</title><rect x="765.9" y="1029" width="0.5" height="15.0" fill="rgb(218,33,0)" rx="2" ry="2" />
<text  x="768.87" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::__normal_iterator (162 samples, 0.04%)</title><rect x="39.2" y="1301" width="0.4" height="15.0" fill="rgb(210,67,15)" rx="2" ry="2" />
<text  x="42.15" y="1311.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; (48 samples, 0.01%)</title><rect x="120.6" y="1301" width="0.1" height="15.0" fill="rgb(243,40,42)" rx="2" ry="2" />
<text  x="123.61" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (138 samples, 0.03%)</title><rect x="792.4" y="1029" width="0.4" height="15.0" fill="rgb(214,105,41)" rx="2" ry="2" />
<text  x="795.39" y="1039.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (100 samples, 0.02%)</title><rect x="76.8" y="1301" width="0.3" height="15.0" fill="rgb(219,181,43)" rx="2" ry="2" />
<text  x="79.83" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (433 samples, 0.10%)</title><rect x="790.3" y="1029" width="1.1" height="15.0" fill="rgb(246,80,49)" rx="2" ry="2" />
<text  x="793.30" y="1039.5" ></text>
</g>
<g >
<title>__fput (9,097 samples, 2.00%)</title><rect x="1081.7" y="837" width="23.6" height="15.0" fill="rgb(247,98,15)" rx="2" ry="2" />
<text  x="1084.71" y="847.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (53 samples, 0.01%)</title><rect x="93.1" y="1301" width="0.2" height="15.0" fill="rgb(245,103,28)" rx="2" ry="2" />
<text  x="96.13" y="1311.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (76 samples, 0.02%)</title><rect x="874.5" y="1045" width="0.2" height="15.0" fill="rgb(233,65,3)" rx="2" ry="2" />
<text  x="877.50" y="1055.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (176 samples, 0.04%)</title><rect x="151.6" y="1269" width="0.4" height="15.0" fill="rgb(228,197,2)" rx="2" ry="2" />
<text  x="154.58" y="1279.5" ></text>
</g>
<g >
<title>spdlog::details::source_location_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (50 samples, 0.01%)</title><rect x="930.0" y="901" width="0.1" height="15.0" fill="rgb(218,207,40)" rx="2" ry="2" />
<text  x="933.02" y="911.5" ></text>
</g>
<g >
<title>call_rcu (124 samples, 0.03%)</title><rect x="850.8" y="965" width="0.3" height="15.0" fill="rgb(227,221,13)" rx="2" ry="2" />
<text  x="853.80" y="975.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (184 samples, 0.04%)</title><rect x="209.2" y="117" width="0.4" height="15.0" fill="rgb(216,21,9)" rx="2" ry="2" />
<text  x="212.16" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (171 samples, 0.04%)</title><rect x="586.4" y="821" width="0.4" height="15.0" fill="rgb(209,18,11)" rx="2" ry="2" />
<text  x="589.39" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (61 samples, 0.01%)</title><rect x="207.4" y="85" width="0.2" height="15.0" fill="rgb(240,217,32)" rx="2" ry="2" />
<text  x="210.42" y="95.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (199 samples, 0.04%)</title><rect x="699.1" y="885" width="0.5" height="15.0" fill="rgb(218,228,11)" rx="2" ry="2" />
<text  x="702.07" y="895.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (176 samples, 0.04%)</title><rect x="151.6" y="1237" width="0.4" height="15.0" fill="rgb(229,54,26)" rx="2" ry="2" />
<text  x="154.58" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (252 samples, 0.06%)</title><rect x="970.5" y="1045" width="0.7" height="15.0" fill="rgb(228,103,28)" rx="2" ry="2" />
<text  x="973.55" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (46 samples, 0.01%)</title><rect x="988.6" y="997" width="0.1" height="15.0" fill="rgb(210,115,16)" rx="2" ry="2" />
<text  x="991.56" y="1007.5" ></text>
</g>
<g >
<title>do_epoll_ctl (4,161 samples, 0.92%)</title><rect x="591.0" y="773" width="10.9" height="15.0" fill="rgb(248,182,22)" rx="2" ry="2" />
<text  x="594.04" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (881 samples, 0.19%)</title><rect x="529.5" y="789" width="2.3" height="15.0" fill="rgb(217,100,3)" rx="2" ry="2" />
<text  x="532.53" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1,002 samples, 0.22%)</title><rect x="979.3" y="965" width="2.6" height="15.0" fill="rgb(230,103,26)" rx="2" ry="2" />
<text  x="982.34" y="975.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (113 samples, 0.02%)</title><rect x="636.0" y="949" width="0.3" height="15.0" fill="rgb(254,6,0)" rx="2" ry="2" />
<text  x="639.03" y="959.5" ></text>
</g>
<g >
<title>security_sock_graft (47 samples, 0.01%)</title><rect x="1154.6" y="965" width="0.1" height="15.0" fill="rgb(239,131,21)" rx="2" ry="2" />
<text  x="1157.60" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (104 samples, 0.02%)</title><rect x="627.2" y="997" width="0.3" height="15.0" fill="rgb(242,42,6)" rx="2" ry="2" />
<text  x="630.22" y="1007.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (45 samples, 0.01%)</title><rect x="205.1" y="101" width="0.2" height="15.0" fill="rgb(253,167,47)" rx="2" ry="2" />
<text  x="208.13" y="111.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (182 samples, 0.04%)</title><rect x="533.7" y="773" width="0.5" height="15.0" fill="rgb(250,73,14)" rx="2" ry="2" />
<text  x="536.72" y="783.5" ></text>
</g>
<g >
<title>select_task_rq_fair (785 samples, 0.17%)</title><rect x="326.5" y="485" width="2.1" height="15.0" fill="rgb(219,124,21)" rx="2" ry="2" />
<text  x="329.51" y="495.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (77 samples, 0.02%)</title><rect x="1168.1" y="997" width="0.2" height="15.0" fill="rgb(229,117,1)" rx="2" ry="2" />
<text  x="1171.10" y="1007.5" ></text>
</g>
<g >
<title>memset_erms (41 samples, 0.01%)</title><rect x="218.6" y="485" width="0.1" height="15.0" fill="rgb(234,148,50)" rx="2" ry="2" />
<text  x="221.63" y="495.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (1,238 samples, 0.27%)</title><rect x="730.6" y="917" width="3.2" height="15.0" fill="rgb(212,68,30)" rx="2" ry="2" />
<text  x="733.58" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (49 samples, 0.01%)</title><rect x="85.3" y="1301" width="0.1" height="15.0" fill="rgb(254,42,9)" rx="2" ry="2" />
<text  x="88.29" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (285 samples, 0.06%)</title><rect x="610.4" y="837" width="0.8" height="15.0" fill="rgb(247,0,37)" rx="2" ry="2" />
<text  x="613.43" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (223 samples, 0.05%)</title><rect x="533.6" y="789" width="0.6" height="15.0" fill="rgb(243,2,36)" rx="2" ry="2" />
<text  x="536.65" y="799.5" ></text>
</g>
<g >
<title>update_load_avg (81 samples, 0.02%)</title><rect x="683.3" y="709" width="0.2" height="15.0" fill="rgb(215,150,24)" rx="2" ry="2" />
<text  x="686.27" y="719.5" ></text>
</g>
<g >
<title>update_curr (119 samples, 0.03%)</title><rect x="565.1" y="565" width="0.3" height="15.0" fill="rgb(232,34,4)" rx="2" ry="2" />
<text  x="568.09" y="575.5" ></text>
</g>
<g >
<title>dequeue_entity (456 samples, 0.10%)</title><rect x="483.3" y="949" width="1.2" height="15.0" fill="rgb(240,43,3)" rx="2" ry="2" />
<text  x="486.31" y="959.5" ></text>
</g>
<g >
<title>ttwu_do_activate (824 samples, 0.18%)</title><rect x="573.6" y="629" width="2.1" height="15.0" fill="rgb(231,133,48)" rx="2" ry="2" />
<text  x="576.57" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (131 samples, 0.03%)</title><rect x="306.1" y="581" width="0.3" height="15.0" fill="rgb(235,166,29)" rx="2" ry="2" />
<text  x="309.06" y="591.5" ></text>
</g>
<g >
<title>accept4 (9,073 samples, 2.00%)</title><rect x="1145.2" y="1077" width="23.6" height="15.0" fill="rgb(223,201,41)" rx="2" ry="2" />
<text  x="1148.23" y="1087.5" >a..</text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (132 samples, 0.03%)</title><rect x="1022.2" y="981" width="0.4" height="15.0" fill="rgb(238,192,17)" rx="2" ry="2" />
<text  x="1025.24" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (86 samples, 0.02%)</title><rect x="982.5" y="1013" width="0.3" height="15.0" fill="rgb(229,156,40)" rx="2" ry="2" />
<text  x="985.55" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (237 samples, 0.05%)</title><rect x="792.8" y="1029" width="0.6" height="15.0" fill="rgb(219,180,47)" rx="2" ry="2" />
<text  x="795.80" y="1039.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (55 samples, 0.01%)</title><rect x="303.5" y="629" width="0.1" height="15.0" fill="rgb(246,34,25)" rx="2" ry="2" />
<text  x="306.48" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (45 samples, 0.01%)</title><rect x="999.5" y="949" width="0.1" height="15.0" fill="rgb(213,99,17)" rx="2" ry="2" />
<text  x="1002.50" y="959.5" ></text>
</g>
<g >
<title>[[ip_tables]] (247 samples, 0.05%)</title><rect x="440.0" y="549" width="0.7" height="15.0" fill="rgb(235,32,34)" rx="2" ry="2" />
<text  x="443.02" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (140 samples, 0.03%)</title><rect x="579.5" y="917" width="0.4" height="15.0" fill="rgb(221,23,42)" rx="2" ry="2" />
<text  x="582.54" y="927.5" ></text>
</g>
<g >
<title>__check_object_size (275 samples, 0.06%)</title><rect x="540.8" y="597" width="0.7" height="15.0" fill="rgb(250,58,25)" rx="2" ry="2" />
<text  x="543.77" y="607.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (62 samples, 0.01%)</title><rect x="332.2" y="437" width="0.2" height="15.0" fill="rgb(221,201,30)" rx="2" ry="2" />
<text  x="335.25" y="447.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3,769 samples, 0.83%)</title><rect x="830.7" y="949" width="9.8" height="15.0" fill="rgb(229,216,11)" rx="2" ry="2" />
<text  x="833.67" y="959.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (70 samples, 0.02%)</title><rect x="942.2" y="661" width="0.2" height="15.0" fill="rgb(249,136,19)" rx="2" ry="2" />
<text  x="945.24" y="671.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (84 samples, 0.02%)</title><rect x="1066.0" y="741" width="0.2" height="15.0" fill="rgb(243,43,28)" rx="2" ry="2" />
<text  x="1068.98" y="751.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (153 samples, 0.03%)</title><rect x="235.3" y="933" width="0.4" height="15.0" fill="rgb(253,153,32)" rx="2" ry="2" />
<text  x="238.27" y="943.5" ></text>
</g>
<g >
<title>webserver::Channel::~Channel (20,531 samples, 4.52%)</title><rect x="168.6" y="885" width="53.3" height="15.0" fill="rgb(230,35,18)" rx="2" ry="2" />
<text  x="171.59" y="895.5" >webse..</text>
</g>
<g >
<title>___slab_alloc (55 samples, 0.01%)</title><rect x="1158.3" y="869" width="0.2" height="15.0" fill="rgb(211,10,19)" rx="2" ry="2" />
<text  x="1161.31" y="879.5" ></text>
</g>
<g >
<title>operator new@plt (76 samples, 0.02%)</title><rect x="508.6" y="1013" width="0.2" height="15.0" fill="rgb(225,30,13)" rx="2" ry="2" />
<text  x="511.61" y="1023.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (933 samples, 0.21%)</title><rect x="643.4" y="933" width="2.4" height="15.0" fill="rgb(213,169,33)" rx="2" ry="2" />
<text  x="646.40" y="943.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (42 samples, 0.01%)</title><rect x="611.4" y="869" width="0.2" height="15.0" fill="rgb(252,98,18)" rx="2" ry="2" />
<text  x="614.44" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender, int, 0&gt; (271 samples, 0.06%)</title><rect x="1025.1" y="917" width="0.7" height="15.0" fill="rgb(230,212,54)" rx="2" ry="2" />
<text  x="1028.05" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (52 samples, 0.01%)</title><rect x="84.0" y="1301" width="0.1" height="15.0" fill="rgb(231,129,43)" rx="2" ry="2" />
<text  x="86.96" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow (722 samples, 0.16%)</title><rect x="442.4" y="581" width="1.8" height="15.0" fill="rgb(238,103,36)" rx="2" ry="2" />
<text  x="445.35" y="591.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (993 samples, 0.22%)</title><rect x="526.7" y="773" width="2.6" height="15.0" fill="rgb(228,45,22)" rx="2" ry="2" />
<text  x="529.75" y="783.5" ></text>
</g>
<g >
<title>__alloc_skb (807 samples, 0.18%)</title><rect x="406.5" y="469" width="2.1" height="15.0" fill="rgb(239,211,8)" rx="2" ry="2" />
<text  x="409.48" y="479.5" ></text>
</g>
<g >
<title>[[heap]] (1,321 samples, 0.29%)</title><rect x="10.0" y="1317" width="3.5" height="15.0" fill="rgb(216,23,46)" rx="2" ry="2" />
<text  x="13.02" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (72 samples, 0.02%)</title><rect x="462.6" y="917" width="0.2" height="15.0" fill="rgb(205,67,36)" rx="2" ry="2" />
<text  x="465.60" y="927.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (152 samples, 0.03%)</title><rect x="1023.7" y="805" width="0.4" height="15.0" fill="rgb(232,71,8)" rx="2" ry="2" />
<text  x="1026.73" y="815.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (19,313 samples, 4.25%)</title><rect x="918.8" y="949" width="50.1" height="15.0" fill="rgb(249,154,28)" rx="2" ry="2" />
<text  x="921.75" y="959.5" >spdlo..</text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (629 samples, 0.14%)</title><rect x="529.6" y="757" width="1.7" height="15.0" fill="rgb(231,199,29)" rx="2" ry="2" />
<text  x="532.64" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (320 samples, 0.07%)</title><rect x="908.3" y="997" width="0.8" height="15.0" fill="rgb(249,224,14)" rx="2" ry="2" />
<text  x="911.31" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (98 samples, 0.02%)</title><rect x="323.4" y="533" width="0.2" height="15.0" fill="rgb(247,103,1)" rx="2" ry="2" />
<text  x="326.39" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (74 samples, 0.02%)</title><rect x="618.1" y="885" width="0.2" height="15.0" fill="rgb(239,69,5)" rx="2" ry="2" />
<text  x="621.12" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;void  (148 samples, 0.03%)</title><rect x="123.8" y="1301" width="0.4" height="15.0" fill="rgb(247,199,1)" rx="2" ry="2" />
<text  x="126.77" y="1311.5" ></text>
</g>
<g >
<title>__GI_munmap (152 samples, 0.03%)</title><rect x="35.4" y="1301" width="0.4" height="15.0" fill="rgb(221,76,38)" rx="2" ry="2" />
<text  x="38.38" y="1311.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (1,240 samples, 0.27%)</title><rect x="278.0" y="869" width="3.2" height="15.0" fill="rgb(229,148,49)" rx="2" ry="2" />
<text  x="280.97" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::try_reserve (40 samples, 0.01%)</title><rect x="1185.9" y="1317" width="0.1" height="15.0" fill="rgb(245,82,0)" rx="2" ry="2" />
<text  x="1188.85" y="1327.5" ></text>
</g>
<g >
<title>__memchr_avx2 (115 samples, 0.03%)</title><rect x="294.9" y="773" width="0.3" height="15.0" fill="rgb(208,147,19)" rx="2" ry="2" />
<text  x="297.93" y="783.5" ></text>
</g>
<g >
<title>skb_release_head_state (39 samples, 0.01%)</title><rect x="369.3" y="725" width="0.1" height="15.0" fill="rgb(208,0,12)" rx="2" ry="2" />
<text  x="372.27" y="735.5" ></text>
</g>
<g >
<title>error_entry (246 samples, 0.05%)</title><rect x="906.1" y="933" width="0.7" height="15.0" fill="rgb(215,15,49)" rx="2" ry="2" />
<text  x="909.14" y="943.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned int&gt; (88 samples, 0.02%)</title><rect x="619.2" y="885" width="0.2" height="15.0" fill="rgb(225,228,36)" rx="2" ry="2" />
<text  x="622.17" y="895.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (333 samples, 0.07%)</title><rect x="752.8" y="917" width="0.9" height="15.0" fill="rgb(235,162,19)" rx="2" ry="2" />
<text  x="755.80" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (79 samples, 0.02%)</title><rect x="462.6" y="933" width="0.2" height="15.0" fill="rgb(216,192,19)" rx="2" ry="2" />
<text  x="465.58" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (1,199 samples, 0.26%)</title><rect x="294.6" y="821" width="3.1" height="15.0" fill="rgb(251,130,42)" rx="2" ry="2" />
<text  x="297.60" y="831.5" ></text>
</g>
<g >
<title>psi_group_change (91 samples, 0.02%)</title><rect x="432.8" y="373" width="0.3" height="15.0" fill="rgb(222,52,14)" rx="2" ry="2" />
<text  x="435.82" y="383.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (55 samples, 0.01%)</title><rect x="1025.9" y="789" width="0.2" height="15.0" fill="rgb(253,144,25)" rx="2" ry="2" />
<text  x="1028.91" y="799.5" ></text>
</g>
<g >
<title>iterate_groups (50 samples, 0.01%)</title><rect x="1066.9" y="741" width="0.1" height="15.0" fill="rgb(240,86,22)" rx="2" ry="2" />
<text  x="1069.90" y="751.5" ></text>
</g>
<g >
<title>ttwu_do_activate (689 samples, 0.15%)</title><rect x="1097.8" y="325" width="1.8" height="15.0" fill="rgb(222,65,32)" rx="2" ry="2" />
<text  x="1100.85" y="335.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (58 samples, 0.01%)</title><rect x="1037.5" y="885" width="0.2" height="15.0" fill="rgb(244,30,39)" rx="2" ry="2" />
<text  x="1040.51" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (216 samples, 0.05%)</title><rect x="357.9" y="805" width="0.6" height="15.0" fill="rgb(239,160,16)" rx="2" ry="2" />
<text  x="360.94" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl (176 samples, 0.04%)</title><rect x="1077.5" y="1013" width="0.5" height="15.0" fill="rgb(227,72,11)" rx="2" ry="2" />
<text  x="1080.50" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (50 samples, 0.01%)</title><rect x="362.3" y="821" width="0.1" height="15.0" fill="rgb(221,164,20)" rx="2" ry="2" />
<text  x="365.31" y="831.5" ></text>
</g>
<g >
<title>dget_parent (84 samples, 0.02%)</title><rect x="849.4" y="933" width="0.3" height="15.0" fill="rgb(241,23,27)" rx="2" ry="2" />
<text  x="852.44" y="943.5" ></text>
</g>
<g >
<title>vmacache_find (118 samples, 0.03%)</title><rect x="825.2" y="949" width="0.3" height="15.0" fill="rgb(245,5,52)" rx="2" ry="2" />
<text  x="828.20" y="959.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (2,046 samples, 0.45%)</title><rect x="1161.2" y="965" width="5.3" height="15.0" fill="rgb(247,123,31)" rx="2" ry="2" />
<text  x="1164.20" y="975.5" ></text>
</g>
<g >
<title>__vfprintf_internal (68 samples, 0.01%)</title><rect x="34.1" y="1285" width="0.1" height="15.0" fill="rgb(236,109,54)" rx="2" ry="2" />
<text  x="37.07" y="1295.5" ></text>
</g>
<g >
<title>memcpy_erms (96 samples, 0.02%)</title><rect x="726.4" y="693" width="0.2" height="15.0" fill="rgb(240,212,51)" rx="2" ry="2" />
<text  x="729.38" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (161 samples, 0.04%)</title><rect x="927.8" y="789" width="0.5" height="15.0" fill="rgb(235,1,46)" rx="2" ry="2" />
<text  x="930.84" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpConnection*, std::default_delete&lt;webserver::HttpConnection&gt; &gt; (134 samples, 0.03%)</title><rect x="125.9" y="1301" width="0.3" height="15.0" fill="rgb(221,168,48)" rx="2" ry="2" />
<text  x="128.89" y="1311.5" ></text>
</g>
<g >
<title>_IO_new_do_write (7,764 samples, 1.71%)</title><rect x="650.6" y="901" width="20.2" height="15.0" fill="rgb(247,177,28)" rx="2" ry="2" />
<text  x="653.64" y="911.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (141 samples, 0.03%)</title><rect x="251.0" y="837" width="0.4" height="15.0" fill="rgb(205,219,35)" rx="2" ry="2" />
<text  x="254.01" y="847.5" ></text>
</g>
<g >
<title>tlb_gather_mmu (104 samples, 0.02%)</title><rect x="840.5" y="949" width="0.2" height="15.0" fill="rgb(223,64,22)" rx="2" ry="2" />
<text  x="843.46" y="959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,897 samples, 0.42%)</title><rect x="1064.1" y="885" width="4.9" height="15.0" fill="rgb(247,143,5)" rx="2" ry="2" />
<text  x="1067.08" y="895.5" ></text>
</g>
<g >
<title>walk_component (965 samples, 0.21%)</title><rect x="859.9" y="933" width="2.5" height="15.0" fill="rgb(211,171,51)" rx="2" ry="2" />
<text  x="862.93" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (119 samples, 0.03%)</title><rect x="533.9" y="661" width="0.3" height="15.0" fill="rgb(215,96,15)" rx="2" ry="2" />
<text  x="536.87" y="671.5" ></text>
</g>
<g >
<title>__perf_event_header__init_id (474 samples, 0.10%)</title><rect x="810.2" y="885" width="1.2" height="15.0" fill="rgb(237,5,21)" rx="2" ry="2" />
<text  x="813.18" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (128 samples, 0.03%)</title><rect x="1108.9" y="869" width="0.3" height="15.0" fill="rgb(218,83,44)" rx="2" ry="2" />
<text  x="1111.91" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::end (73 samples, 0.02%)</title><rect x="222.2" y="1109" width="0.1" height="15.0" fill="rgb(229,124,52)" rx="2" ry="2" />
<text  x="225.15" y="1119.5" ></text>
</g>
<g >
<title>tty_paranoia_check (41 samples, 0.01%)</title><rect x="334.4" y="565" width="0.1" height="15.0" fill="rgb(217,174,13)" rx="2" ry="2" />
<text  x="337.35" y="575.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::HttpHandler&gt;::shared_from_this (106 samples, 0.02%)</title><rect x="584.0" y="917" width="0.3" height="15.0" fill="rgb(247,164,45)" rx="2" ry="2" />
<text  x="587.04" y="927.5" ></text>
</g>
<g >
<title>ep_timeout_to_timespec (558 samples, 0.12%)</title><rect x="491.2" y="1029" width="1.5" height="15.0" fill="rgb(253,37,3)" rx="2" ry="2" />
<text  x="494.25" y="1039.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,742 samples, 1.04%)</title><rect x="1028.8" y="965" width="12.4" height="15.0" fill="rgb(212,95,42)" rx="2" ry="2" />
<text  x="1031.85" y="975.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (115 samples, 0.03%)</title><rect x="420.4" y="469" width="0.3" height="15.0" fill="rgb(206,33,52)" rx="2" ry="2" />
<text  x="423.42" y="479.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (40 samples, 0.01%)</title><rect x="168.7" y="821" width="0.1" height="15.0" fill="rgb(241,224,14)" rx="2" ry="2" />
<text  x="171.74" y="831.5" ></text>
</g>
<g >
<title>syscall_exit_work (56 samples, 0.01%)</title><rect x="755.5" y="965" width="0.1" height="15.0" fill="rgb(212,181,29)" rx="2" ry="2" />
<text  x="758.50" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (159 samples, 0.04%)</title><rect x="960.5" y="709" width="0.4" height="15.0" fill="rgb(239,24,1)" rx="2" ry="2" />
<text  x="963.45" y="719.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::handle_write (78,185 samples, 17.22%)</title><rect x="259.7" y="965" width="203.2" height="15.0" fill="rgb(207,97,28)" rx="2" ry="2" />
<text  x="262.75" y="975.5" >webserver::HttpConnection:..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;::_M_head (46 samples, 0.01%)</title><rect x="78.5" y="1301" width="0.2" height="15.0" fill="rgb(227,155,2)" rx="2" ry="2" />
<text  x="81.54" y="1311.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::get_fd (155 samples, 0.03%)</title><rect x="463.6" y="1093" width="0.4" height="15.0" fill="rgb(253,97,40)" rx="2" ry="2" />
<text  x="466.58" y="1103.5" ></text>
</g>
<g >
<title>do_futex (2,068 samples, 0.46%)</title><rect x="563.4" y="677" width="5.4" height="15.0" fill="rgb(226,176,20)" rx="2" ry="2" />
<text  x="566.40" y="687.5" ></text>
</g>
<g >
<title>std::__addressof&lt;fmt::v8::detail::buffer&lt;char&gt; &gt; (69 samples, 0.02%)</title><rect x="82.2" y="1301" width="0.2" height="15.0" fill="rgb(227,183,11)" rx="2" ry="2" />
<text  x="85.20" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (258 samples, 0.06%)</title><rect x="1035.7" y="853" width="0.6" height="15.0" fill="rgb(211,71,11)" rx="2" ry="2" />
<text  x="1038.65" y="863.5" ></text>
</g>
<g >
<title>schedule (1,373 samples, 0.30%)</title><rect x="958.8" y="741" width="3.6" height="15.0" fill="rgb(211,19,33)" rx="2" ry="2" />
<text  x="961.82" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (323 samples, 0.07%)</title><rect x="295.7" y="757" width="0.9" height="15.0" fill="rgb(209,202,44)" rx="2" ry="2" />
<text  x="298.71" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (54 samples, 0.01%)</title><rect x="524.0" y="789" width="0.1" height="15.0" fill="rgb(218,120,34)" rx="2" ry="2" />
<text  x="526.99" y="799.5" ></text>
</g>
<g >
<title>enqueue_task_fair (555 samples, 0.12%)</title><rect x="1055.2" y="645" width="1.5" height="15.0" fill="rgb(252,220,44)" rx="2" ry="2" />
<text  x="1058.24" y="655.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt;*, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (40 samples, 0.01%)</title><rect x="509.2" y="1029" width="0.1" height="15.0" fill="rgb(210,180,48)" rx="2" ry="2" />
<text  x="512.16" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (285 samples, 0.06%)</title><rect x="88.2" y="1301" width="0.7" height="15.0" fill="rgb(223,185,32)" rx="2" ry="2" />
<text  x="91.16" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (76 samples, 0.02%)</title><rect x="359.6" y="805" width="0.2" height="15.0" fill="rgb(210,6,39)" rx="2" ry="2" />
<text  x="362.63" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (48 samples, 0.01%)</title><rect x="361.1" y="805" width="0.1" height="15.0" fill="rgb(233,50,38)" rx="2" ry="2" />
<text  x="364.10" y="815.5" ></text>
</g>
<g >
<title>kfree_skbmem (44 samples, 0.01%)</title><rect x="245.7" y="805" width="0.1" height="15.0" fill="rgb(217,15,21)" rx="2" ry="2" />
<text  x="248.73" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (346 samples, 0.08%)</title><rect x="1177.7" y="1045" width="0.9" height="15.0" fill="rgb(243,37,36)" rx="2" ry="2" />
<text  x="1180.70" y="1055.5" ></text>
</g>
<g >
<title>down_read (67 samples, 0.01%)</title><rect x="546.3" y="581" width="0.1" height="15.0" fill="rgb(249,86,7)" rx="2" ry="2" />
<text  x="549.26" y="591.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::set_header (5,343 samples, 1.18%)</title><rect x="772.0" y="1061" width="13.9" height="15.0" fill="rgb(228,146,54)" rx="2" ry="2" />
<text  x="774.97" y="1071.5" ></text>
</g>
<g >
<title>update_curr (138 samples, 0.03%)</title><rect x="1125.9" y="805" width="0.3" height="15.0" fill="rgb(242,133,34)" rx="2" ry="2" />
<text  x="1128.86" y="815.5" ></text>
</g>
<g >
<title>webserver::Channel::set_write_cb (430 samples, 0.09%)</title><rect x="610.3" y="901" width="1.1" height="15.0" fill="rgb(214,153,7)" rx="2" ry="2" />
<text  x="613.26" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (237 samples, 0.05%)</title><rect x="53.9" y="1301" width="0.6" height="15.0" fill="rgb(227,28,16)" rx="2" ry="2" />
<text  x="56.93" y="1311.5" ></text>
</g>
<g >
<title>generic_file_open (50 samples, 0.01%)</title><rect x="883.8" y="917" width="0.2" height="15.0" fill="rgb(208,98,5)" rx="2" ry="2" />
<text  x="886.84" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (323 samples, 0.07%)</title><rect x="517.4" y="773" width="0.8" height="15.0" fill="rgb(235,22,28)" rx="2" ry="2" />
<text  x="520.39" y="783.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (82 samples, 0.02%)</title><rect x="911.7" y="1061" width="0.3" height="15.0" fill="rgb(249,175,43)" rx="2" ry="2" />
<text  x="914.74" y="1071.5" ></text>
</g>
<g >
<title>update_curr (86 samples, 0.02%)</title><rect x="339.8" y="533" width="0.3" height="15.0" fill="rgb(221,51,3)" rx="2" ry="2" />
<text  x="342.83" y="543.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (107 samples, 0.02%)</title><rect x="639.4" y="901" width="0.3" height="15.0" fill="rgb(224,203,53)" rx="2" ry="2" />
<text  x="642.38" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (45 samples, 0.01%)</title><rect x="1030.8" y="933" width="0.1" height="15.0" fill="rgb(237,2,28)" rx="2" ry="2" />
<text  x="1033.78" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::make_arg&lt;true, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;,  (73 samples, 0.02%)</title><rect x="1026.2" y="981" width="0.2" height="15.0" fill="rgb(249,47,38)" rx="2" ry="2" />
<text  x="1029.22" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (160 samples, 0.04%)</title><rect x="852.0" y="1045" width="0.4" height="15.0" fill="rgb(222,155,27)" rx="2" ry="2" />
<text  x="855.03" y="1055.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (75 samples, 0.02%)</title><rect x="528.7" y="597" width="0.2" height="15.0" fill="rgb(220,174,52)" rx="2" ry="2" />
<text  x="531.68" y="607.5" ></text>
</g>
<g >
<title>select_task_rq_fair (676 samples, 0.15%)</title><rect x="720.6" y="661" width="1.8" height="15.0" fill="rgb(236,216,14)" rx="2" ry="2" />
<text  x="723.60" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (152 samples, 0.03%)</title><rect x="311.3" y="693" width="0.4" height="15.0" fill="rgb(236,169,45)" rx="2" ry="2" />
<text  x="314.28" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (171 samples, 0.04%)</title><rect x="296.1" y="677" width="0.4" height="15.0" fill="rgb(224,147,25)" rx="2" ry="2" />
<text  x="299.06" y="687.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (8,905 samples, 1.96%)</title><rect x="796.4" y="997" width="23.2" height="15.0" fill="rgb(232,177,21)" rx="2" ry="2" />
<text  x="799.44" y="1007.5" >v..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (513 samples, 0.11%)</title><rect x="283.0" y="837" width="1.3" height="15.0" fill="rgb(206,185,28)" rx="2" ry="2" />
<text  x="286.01" y="847.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (157 samples, 0.03%)</title><rect x="973.3" y="1013" width="0.4" height="15.0" fill="rgb(217,212,37)" rx="2" ry="2" />
<text  x="976.28" y="1023.5" ></text>
</g>
<g >
<title>make_kuid (51 samples, 0.01%)</title><rect x="1157.3" y="917" width="0.1" height="15.0" fill="rgb(252,145,7)" rx="2" ry="2" />
<text  x="1160.28" y="927.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (40 samples, 0.01%)</title><rect x="759.5" y="997" width="0.1" height="15.0" fill="rgb(205,190,41)" rx="2" ry="2" />
<text  x="762.51" y="1007.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (94 samples, 0.02%)</title><rect x="353.5" y="805" width="0.3" height="15.0" fill="rgb(214,114,25)" rx="2" ry="2" />
<text  x="356.51" y="815.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (92 samples, 0.02%)</title><rect x="416.3" y="421" width="0.3" height="15.0" fill="rgb(228,212,23)" rx="2" ry="2" />
<text  x="419.35" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (298 samples, 0.07%)</title><rect x="993.7" y="949" width="0.8" height="15.0" fill="rgb(236,209,36)" rx="2" ry="2" />
<text  x="996.73" y="959.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (134 samples, 0.03%)</title><rect x="162.1" y="1029" width="0.4" height="15.0" fill="rgb(222,173,32)" rx="2" ry="2" />
<text  x="165.15" y="1039.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt;, true, true&gt;::__uniq_ptr_impl (97 samples, 0.02%)</title><rect x="1140.0" y="1045" width="0.2" height="15.0" fill="rgb(215,89,45)" rx="2" ry="2" />
<text  x="1142.99" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (225 samples, 0.05%)</title><rect x="1177.8" y="1029" width="0.6" height="15.0" fill="rgb(241,12,23)" rx="2" ry="2" />
<text  x="1180.77" y="1039.5" ></text>
</g>
<g >
<title>sock_close (7,959 samples, 1.75%)</title><rect x="1084.7" y="821" width="20.6" height="15.0" fill="rgb(229,155,8)" rx="2" ry="2" />
<text  x="1087.66" y="831.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (63 samples, 0.01%)</title><rect x="1107.5" y="901" width="0.2" height="15.0" fill="rgb(247,190,2)" rx="2" ry="2" />
<text  x="1110.50" y="911.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;char*&gt; (40 samples, 0.01%)</title><rect x="104.4" y="1301" width="0.1" height="15.0" fill="rgb(214,76,27)" rx="2" ry="2" />
<text  x="107.36" y="1311.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3,205 samples, 0.71%)</title><rect x="671.3" y="901" width="8.3" height="15.0" fill="rgb(219,40,10)" rx="2" ry="2" />
<text  x="674.32" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (646 samples, 0.14%)</title><rect x="986.7" y="917" width="1.7" height="15.0" fill="rgb(209,195,16)" rx="2" ry="2" />
<text  x="989.68" y="927.5" ></text>
</g>
<g >
<title>terminate_walk (61 samples, 0.01%)</title><rect x="863.2" y="949" width="0.1" height="15.0" fill="rgb(231,37,30)" rx="2" ry="2" />
<text  x="866.17" y="959.5" ></text>
</g>
<g >
<title>__memchr_avx2 (52 samples, 0.01%)</title><rect x="1022.6" y="949" width="0.2" height="15.0" fill="rgb(231,71,14)" rx="2" ry="2" />
<text  x="1025.64" y="959.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (313 samples, 0.07%)</title><rect x="576.1" y="709" width="0.8" height="15.0" fill="rgb(240,182,6)" rx="2" ry="2" />
<text  x="579.07" y="719.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2,551 samples, 0.56%)</title><rect x="570.5" y="757" width="6.6" height="15.0" fill="rgb(252,168,16)" rx="2" ry="2" />
<text  x="573.52" y="767.5" ></text>
</g>
<g >
<title>ldsem_down_read (45 samples, 0.01%)</title><rect x="727.6" y="725" width="0.1" height="15.0" fill="rgb(248,106,10)" rx="2" ry="2" />
<text  x="730.62" y="735.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (204 samples, 0.04%)</title><rect x="690.5" y="997" width="0.5" height="15.0" fill="rgb(230,32,40)" rx="2" ry="2" />
<text  x="693.50" y="1007.5" ></text>
</g>
<g >
<title>__sock_wfree (53 samples, 0.01%)</title><rect x="415.4" y="373" width="0.1" height="15.0" fill="rgb(210,91,14)" rx="2" ry="2" />
<text  x="418.37" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (18,415 samples, 4.05%)</title><rect x="173.6" y="677" width="47.8" height="15.0" fill="rgb(245,174,22)" rx="2" ry="2" />
<text  x="176.58" y="687.5" >sysc..</text>
</g>
<g >
<title>eth_type_trans (65 samples, 0.01%)</title><rect x="193.1" y="389" width="0.1" height="15.0" fill="rgb(249,195,29)" rx="2" ry="2" />
<text  x="196.07" y="399.5" ></text>
</g>
<g >
<title>ksize (44 samples, 0.01%)</title><rect x="408.5" y="453" width="0.1" height="15.0" fill="rgb(239,163,36)" rx="2" ry="2" />
<text  x="411.46" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (65 samples, 0.01%)</title><rect x="1176.2" y="1029" width="0.2" height="15.0" fill="rgb(250,29,17)" rx="2" ry="2" />
<text  x="1179.19" y="1039.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,144 samples, 0.25%)</title><rect x="1032.0" y="949" width="3.0" height="15.0" fill="rgb(226,101,33)" rx="2" ry="2" />
<text  x="1035.04" y="959.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (249 samples, 0.05%)</title><rect x="342.3" y="661" width="0.7" height="15.0" fill="rgb(217,172,7)" rx="2" ry="2" />
<text  x="345.33" y="671.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (126 samples, 0.03%)</title><rect x="863.4" y="917" width="0.4" height="15.0" fill="rgb(219,53,0)" rx="2" ry="2" />
<text  x="866.44" y="927.5" ></text>
</g>
<g >
<title>evict (253 samples, 0.06%)</title><rect x="1083.0" y="805" width="0.6" height="15.0" fill="rgb(242,126,31)" rx="2" ry="2" />
<text  x="1085.95" y="815.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (39 samples, 0.01%)</title><rect x="742.4" y="1045" width="0.1" height="15.0" fill="rgb(232,54,33)" rx="2" ry="2" />
<text  x="745.37" y="1055.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1157" width="160.8" height="15.0" fill="rgb(249,3,26)" rx="2" ry="2" />
<text  x="1021.74" y="1167.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::construct_at&lt;webserver::Channel, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, webserver::EventLoop*&amp;&gt; (276 samples, 0.06%)</title><rect x="1141.9" y="933" width="0.7" height="15.0" fill="rgb(219,132,44)" rx="2" ry="2" />
<text  x="1144.92" y="943.5" ></text>
</g>
<g >
<title>queue_work_on (880 samples, 0.19%)</title><rect x="711.9" y="693" width="2.3" height="15.0" fill="rgb(242,133,1)" rx="2" ry="2" />
<text  x="714.93" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (488 samples, 0.11%)</title><rect x="517.0" y="805" width="1.2" height="15.0" fill="rgb(217,129,52)" rx="2" ry="2" />
<text  x="519.97" y="815.5" ></text>
</g>
<g >
<title>ksys_write (6,823 samples, 1.50%)</title><rect x="1117.1" y="1013" width="17.8" height="15.0" fill="rgb(205,175,37)" rx="2" ry="2" />
<text  x="1120.12" y="1023.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (64 samples, 0.01%)</title><rect x="544.6" y="565" width="0.1" height="15.0" fill="rgb(244,111,38)" rx="2" ry="2" />
<text  x="547.58" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (83 samples, 0.02%)</title><rect x="349.2" y="837" width="0.2" height="15.0" fill="rgb(216,137,47)" rx="2" ry="2" />
<text  x="352.15" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (265 samples, 0.06%)</title><rect x="618.4" y="885" width="0.7" height="15.0" fill="rgb(246,51,28)" rx="2" ry="2" />
<text  x="621.44" y="895.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;char [19]&gt; (20,566 samples, 4.53%)</title><rect x="633.3" y="1061" width="53.5" height="15.0" fill="rgb(233,53,40)" rx="2" ry="2" />
<text  x="636.34" y="1071.5" >spdlo..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (119 samples, 0.03%)</title><rect x="275.4" y="709" width="0.3" height="15.0" fill="rgb(236,95,39)" rx="2" ry="2" />
<text  x="278.43" y="719.5" ></text>
</g>
<g >
<title>check_preempt_curr (52 samples, 0.01%)</title><rect x="967.3" y="725" width="0.1" height="15.0" fill="rgb(235,37,22)" rx="2" ry="2" />
<text  x="970.28" y="735.5" ></text>
</g>
<g >
<title>__fdget_pos (183 samples, 0.04%)</title><rect x="1043.3" y="805" width="0.5" height="15.0" fill="rgb(213,204,14)" rx="2" ry="2" />
<text  x="1046.31" y="815.5" ></text>
</g>
<g >
<title>[[ip_tables]] (381 samples, 0.08%)</title><rect x="379.0" y="693" width="1.0" height="15.0" fill="rgb(208,75,24)" rx="2" ry="2" />
<text  x="382.01" y="703.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (112 samples, 0.02%)</title><rect x="416.6" y="421" width="0.3" height="15.0" fill="rgb(216,194,54)" rx="2" ry="2" />
<text  x="419.65" y="431.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (299 samples, 0.07%)</title><rect x="549.6" y="485" width="0.8" height="15.0" fill="rgb(239,22,50)" rx="2" ry="2" />
<text  x="552.59" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (447 samples, 0.10%)</title><rect x="624.9" y="997" width="1.2" height="15.0" fill="rgb(251,55,2)" rx="2" ry="2" />
<text  x="627.93" y="1007.5" ></text>
</g>
<g >
<title>__GI___libc_free (55 samples, 0.01%)</title><rect x="1079.7" y="933" width="0.1" height="15.0" fill="rgb(246,162,11)" rx="2" ry="2" />
<text  x="1082.67" y="943.5" ></text>
</g>
<g >
<title>operator new (642 samples, 0.14%)</title><rect x="506.9" y="1013" width="1.7" height="15.0" fill="rgb(213,225,6)" rx="2" ry="2" />
<text  x="509.94" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::allocate (308 samples, 0.07%)</title><rect x="581.9" y="853" width="0.8" height="15.0" fill="rgb(249,151,15)" rx="2" ry="2" />
<text  x="584.87" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (539 samples, 0.12%)</title><rect x="256.1" y="901" width="1.4" height="15.0" fill="rgb(240,184,24)" rx="2" ry="2" />
<text  x="259.15" y="911.5" ></text>
</g>
<g >
<title>security_socket_shutdown (136 samples, 0.03%)</title><rect x="753.8" y="949" width="0.3" height="15.0" fill="rgb(235,11,15)" rx="2" ry="2" />
<text  x="756.77" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::source_location_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (198 samples, 0.04%)</title><rect x="60.1" y="1301" width="0.5" height="15.0" fill="rgb(252,218,41)" rx="2" ry="2" />
<text  x="63.12" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (196 samples, 0.04%)</title><rect x="644.8" y="869" width="0.5" height="15.0" fill="rgb(254,144,25)" rx="2" ry="2" />
<text  x="647.78" y="879.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (144 samples, 0.03%)</title><rect x="291.9" y="837" width="0.3" height="15.0" fill="rgb(216,176,28)" rx="2" ry="2" />
<text  x="294.87" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_free (60 samples, 0.01%)</title><rect x="270.6" y="837" width="0.2" height="15.0" fill="rgb(237,9,9)" rx="2" ry="2" />
<text  x="273.63" y="847.5" ></text>
</g>
<g >
<title>check_preempt_curr (61 samples, 0.01%)</title><rect x="713.9" y="629" width="0.2" height="15.0" fill="rgb(206,92,18)" rx="2" ry="2" />
<text  x="716.92" y="639.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, fmt::v8::detail::vformat_to&lt;char&gt; (230 samples, 0.05%)</title><rect x="149.3" y="1301" width="0.6" height="15.0" fill="rgb(253,188,35)" rx="2" ry="2" />
<text  x="152.30" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock (80 samples, 0.02%)</title><rect x="1156.3" y="949" width="0.2" height="15.0" fill="rgb(253,123,6)" rx="2" ry="2" />
<text  x="1159.31" y="959.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (64 samples, 0.01%)</title><rect x="359.7" y="789" width="0.1" height="15.0" fill="rgb(252,67,22)" rx="2" ry="2" />
<text  x="362.66" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (297 samples, 0.07%)</title><rect x="639.3" y="933" width="0.8" height="15.0" fill="rgb(222,219,20)" rx="2" ry="2" />
<text  x="642.29" y="943.5" ></text>
</g>
<g >
<title>__fget_files (137 samples, 0.03%)</title><rect x="1146.3" y="981" width="0.4" height="15.0" fill="rgb(213,182,38)" rx="2" ry="2" />
<text  x="1149.32" y="991.5" ></text>
</g>
<g >
<title>webserver::EventLoop::wakeup_from_poll (8,305 samples, 1.83%)</title><rect x="1115.9" y="1077" width="21.6" height="15.0" fill="rgb(222,165,7)" rx="2" ry="2" />
<text  x="1118.88" y="1087.5" >w..</text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (121 samples, 0.03%)</title><rect x="931.4" y="789" width="0.3" height="15.0" fill="rgb(223,223,15)" rx="2" ry="2" />
<text  x="934.39" y="799.5" ></text>
</g>
<g >
<title>_IO_new_file_write (7,907 samples, 1.74%)</title><rect x="1042.3" y="885" width="20.5" height="15.0" fill="rgb(224,34,11)" rx="2" ry="2" />
<text  x="1045.29" y="895.5" ></text>
</g>
<g >
<title>__lll_lock_wait (1,879 samples, 0.41%)</title><rect x="338.3" y="709" width="4.9" height="15.0" fill="rgb(238,123,36)" rx="2" ry="2" />
<text  x="341.28" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::formatter*, std::default_delete&lt;spdlog::formatter&gt; &gt; (151 samples, 0.03%)</title><rect x="101.2" y="1301" width="0.3" height="15.0" fill="rgb(210,89,0)" rx="2" ry="2" />
<text  x="104.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (73 samples, 0.02%)</title><rect x="95.9" y="1301" width="0.2" height="15.0" fill="rgb(231,56,22)" rx="2" ry="2" />
<text  x="98.93" y="1311.5" ></text>
</g>
<g >
<title>__alloc_file (1,161 samples, 0.26%)</title><rect x="877.9" y="933" width="3.0" height="15.0" fill="rgb(251,229,10)" rx="2" ry="2" />
<text  x="880.93" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (88 samples, 0.02%)</title><rect x="519.0" y="677" width="0.2" height="15.0" fill="rgb(222,129,17)" rx="2" ry="2" />
<text  x="521.99" y="687.5" ></text>
</g>
<g >
<title>memcpy_erms (190 samples, 0.04%)</title><rect x="812.6" y="869" width="0.5" height="15.0" fill="rgb(215,131,33)" rx="2" ry="2" />
<text  x="815.62" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (1,039 samples, 0.23%)</title><rect x="640.5" y="917" width="2.7" height="15.0" fill="rgb(208,227,23)" rx="2" ry="2" />
<text  x="643.51" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (189 samples, 0.04%)</title><rect x="793.6" y="1029" width="0.5" height="15.0" fill="rgb(243,171,6)" rx="2" ry="2" />
<text  x="796.64" y="1039.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (411 samples, 0.09%)</title><rect x="757.2" y="1045" width="1.1" height="15.0" fill="rgb(238,112,7)" rx="2" ry="2" />
<text  x="760.19" y="1055.5" ></text>
</g>
<g >
<title>_int_free (122 samples, 0.03%)</title><rect x="270.3" y="837" width="0.3" height="15.0" fill="rgb(251,72,6)" rx="2" ry="2" />
<text  x="273.26" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (42 samples, 0.01%)</title><rect x="563.0" y="725" width="0.1" height="15.0" fill="rgb(228,159,5)" rx="2" ry="2" />
<text  x="566.01" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (67 samples, 0.01%)</title><rect x="931.5" y="709" width="0.2" height="15.0" fill="rgb(220,78,40)" rx="2" ry="2" />
<text  x="934.48" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (197 samples, 0.04%)</title><rect x="1007.5" y="917" width="0.6" height="15.0" fill="rgb(235,224,51)" rx="2" ry="2" />
<text  x="1010.55" y="927.5" ></text>
</g>
<g >
<title>update_curr (193 samples, 0.04%)</title><rect x="430.9" y="341" width="0.5" height="15.0" fill="rgb(241,200,44)" rx="2" ry="2" />
<text  x="433.85" y="351.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1,163 samples, 0.26%)</title><rect x="476.5" y="981" width="3.0" height="15.0" fill="rgb(210,6,10)" rx="2" ry="2" />
<text  x="479.46" y="991.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (51 samples, 0.01%)</title><rect x="977.3" y="949" width="0.1" height="15.0" fill="rgb(208,57,47)" rx="2" ry="2" />
<text  x="980.29" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (53 samples, 0.01%)</title><rect x="752.0" y="933" width="0.1" height="15.0" fill="rgb(250,125,22)" rx="2" ry="2" />
<text  x="754.98" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;webserver::HttpHandler::HttpVersion&amp;&gt; (189 samples, 0.04%)</title><rect x="787.3" y="1045" width="0.5" height="15.0" fill="rgb(220,16,47)" rx="2" ry="2" />
<text  x="790.28" y="1055.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (319 samples, 0.07%)</title><rect x="702.7" y="917" width="0.8" height="15.0" fill="rgb(214,166,14)" rx="2" ry="2" />
<text  x="705.72" y="927.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (41 samples, 0.01%)</title><rect x="1145.6" y="1061" width="0.1" height="15.0" fill="rgb(209,89,26)" rx="2" ry="2" />
<text  x="1148.55" y="1071.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (541 samples, 0.12%)</title><rect x="814.2" y="933" width="1.4" height="15.0" fill="rgb(253,1,26)" rx="2" ry="2" />
<text  x="817.21" y="943.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (56 samples, 0.01%)</title><rect x="102.2" y="1301" width="0.2" height="15.0" fill="rgb(235,19,5)" rx="2" ry="2" />
<text  x="105.24" y="1311.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (59 samples, 0.01%)</title><rect x="1103.4" y="709" width="0.1" height="15.0" fill="rgb(251,45,2)" rx="2" ry="2" />
<text  x="1106.38" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (281 samples, 0.06%)</title><rect x="1040.2" y="917" width="0.8" height="15.0" fill="rgb(239,20,40)" rx="2" ry="2" />
<text  x="1043.24" y="927.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (276 samples, 0.06%)</title><rect x="1086.3" y="421" width="0.7" height="15.0" fill="rgb(240,140,40)" rx="2" ry="2" />
<text  x="1089.29" y="431.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (48 samples, 0.01%)</title><rect x="776.5" y="885" width="0.1" height="15.0" fill="rgb(205,155,18)" rx="2" ry="2" />
<text  x="779.48" y="895.5" ></text>
</g>
<g >
<title>__fget_light (129 samples, 0.03%)</title><rect x="705.0" y="773" width="0.4" height="15.0" fill="rgb(221,74,34)" rx="2" ry="2" />
<text  x="708.05" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (56 samples, 0.01%)</title><rect x="991.2" y="981" width="0.2" height="15.0" fill="rgb(230,78,10)" rx="2" ry="2" />
<text  x="994.23" y="991.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1,298 samples, 0.29%)</title><rect x="476.2" y="997" width="3.4" height="15.0" fill="rgb(232,76,12)" rx="2" ry="2" />
<text  x="479.21" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock (101 samples, 0.02%)</title><rect x="1096.9" y="309" width="0.2" height="15.0" fill="rgb(249,79,19)" rx="2" ry="2" />
<text  x="1099.88" y="319.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (52 samples, 0.01%)</title><rect x="178.3" y="565" width="0.1" height="15.0" fill="rgb(215,206,53)" rx="2" ry="2" />
<text  x="181.30" y="575.5" ></text>
</g>
<g >
<title>process_echoes (94 samples, 0.02%)</title><rect x="942.8" y="693" width="0.3" height="15.0" fill="rgb(248,117,48)" rx="2" ry="2" />
<text  x="945.82" y="703.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (97 samples, 0.02%)</title><rect x="141.6" y="1301" width="0.2" height="15.0" fill="rgb(227,0,2)" rx="2" ry="2" />
<text  x="144.57" y="1311.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (54 samples, 0.01%)</title><rect x="314.8" y="661" width="0.2" height="15.0" fill="rgb(224,6,51)" rx="2" ry="2" />
<text  x="317.84" y="671.5" ></text>
</g>
<g >
<title>free_pgtables (430 samples, 0.09%)</title><rect x="828.1" y="949" width="1.1" height="15.0" fill="rgb(252,146,26)" rx="2" ry="2" />
<text  x="831.07" y="959.5" ></text>
</g>
<g >
<title>try_charge_memcg (137 samples, 0.03%)</title><rect x="1153.1" y="933" width="0.4" height="15.0" fill="rgb(227,89,52)" rx="2" ry="2" />
<text  x="1156.14" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view (196 samples, 0.04%)</title><rect x="628.2" y="1029" width="0.5" height="15.0" fill="rgb(218,32,9)" rx="2" ry="2" />
<text  x="631.17" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (624 samples, 0.14%)</title><rect x="696.0" y="869" width="1.6" height="15.0" fill="rgb(239,61,50)" rx="2" ry="2" />
<text  x="698.96" y="879.5" ></text>
</g>
<g >
<title>ldsem_down_read (42 samples, 0.01%)</title><rect x="334.2" y="549" width="0.2" height="15.0" fill="rgb(247,139,53)" rx="2" ry="2" />
<text  x="337.25" y="559.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (264 samples, 0.06%)</title><rect x="925.7" y="757" width="0.7" height="15.0" fill="rgb(246,182,9)" rx="2" ry="2" />
<text  x="928.73" y="767.5" ></text>
</g>
<g >
<title>build_open_flags (78 samples, 0.02%)</title><rect x="876.7" y="981" width="0.2" height="15.0" fill="rgb(253,97,3)" rx="2" ry="2" />
<text  x="879.66" y="991.5" ></text>
</g>
<g >
<title>__fsnotify_parent (61 samples, 0.01%)</title><rect x="652.7" y="773" width="0.1" height="15.0" fill="rgb(210,182,35)" rx="2" ry="2" />
<text  x="655.67" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (149 samples, 0.03%)</title><rect x="689.8" y="757" width="0.4" height="15.0" fill="rgb(250,121,0)" rx="2" ry="2" />
<text  x="692.83" y="767.5" ></text>
</g>
<g >
<title>enqueue_task_fair (333 samples, 0.07%)</title><rect x="682.8" y="741" width="0.9" height="15.0" fill="rgb(242,202,34)" rx="2" ry="2" />
<text  x="685.84" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (43 samples, 0.01%)</title><rect x="1030.0" y="949" width="0.1" height="15.0" fill="rgb(207,174,40)" rx="2" ry="2" />
<text  x="1032.97" y="959.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (182 samples, 0.04%)</title><rect x="258.1" y="837" width="0.4" height="15.0" fill="rgb(233,5,41)" rx="2" ry="2" />
<text  x="261.06" y="847.5" ></text>
</g>
<g >
<title>tcp_newly_delivered (87 samples, 0.02%)</title><rect x="371.0" y="741" width="0.2" height="15.0" fill="rgb(225,72,52)" rx="2" ry="2" />
<text  x="374.02" y="751.5" ></text>
</g>
<g >
<title>tcp_poll (311 samples, 0.07%)</title><rect x="1012.5" y="821" width="0.8" height="15.0" fill="rgb(220,176,6)" rx="2" ry="2" />
<text  x="1015.53" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,976 samples, 0.44%)</title><rect x="958.3" y="837" width="5.2" height="15.0" fill="rgb(238,202,0)" rx="2" ry="2" />
<text  x="961.34" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (79 samples, 0.02%)</title><rect x="348.5" y="901" width="0.2" height="15.0" fill="rgb(209,208,37)" rx="2" ry="2" />
<text  x="351.48" y="911.5" ></text>
</g>
<g >
<title>update_curr (98 samples, 0.02%)</title><rect x="1065.3" y="725" width="0.3" height="15.0" fill="rgb(217,29,8)" rx="2" ry="2" />
<text  x="1068.32" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false, false&gt;::_Node_iterator (102 samples, 0.02%)</title><rect x="99.3" y="1301" width="0.3" height="15.0" fill="rgb(241,184,5)" rx="2" ry="2" />
<text  x="102.30" y="1311.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (41 samples, 0.01%)</title><rect x="474.5" y="965" width="0.1" height="15.0" fill="rgb(252,14,5)" rx="2" ry="2" />
<text  x="477.50" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (122 samples, 0.03%)</title><rect x="923.6" y="869" width="0.3" height="15.0" fill="rgb(212,217,37)" rx="2" ry="2" />
<text  x="926.59" y="879.5" ></text>
</g>
<g >
<title>[[ip_tables]] (175 samples, 0.04%)</title><rect x="187.7" y="421" width="0.4" height="15.0" fill="rgb(233,122,54)" rx="2" ry="2" />
<text  x="190.66" y="431.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (274 samples, 0.06%)</title><rect x="927.5" y="821" width="0.8" height="15.0" fill="rgb(253,12,30)" rx="2" ry="2" />
<text  x="930.55" y="831.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (442 samples, 0.10%)</title><rect x="1142.7" y="949" width="1.2" height="15.0" fill="rgb(243,91,5)" rx="2" ry="2" />
<text  x="1145.73" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (105 samples, 0.02%)</title><rect x="297.3" y="693" width="0.2" height="15.0" fill="rgb(228,209,40)" rx="2" ry="2" />
<text  x="300.26" y="703.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (78 samples, 0.02%)</title><rect x="941.7" y="645" width="0.2" height="15.0" fill="rgb(216,9,39)" rx="2" ry="2" />
<text  x="944.74" y="655.5" ></text>
</g>
<g >
<title>ipv4_mtu (60 samples, 0.01%)</title><rect x="459.0" y="773" width="0.2" height="15.0" fill="rgb(248,139,21)" rx="2" ry="2" />
<text  x="462.01" y="783.5" ></text>
</g>
<g >
<title>__strlen_avx2 (57 samples, 0.01%)</title><rect x="792.6" y="997" width="0.1" height="15.0" fill="rgb(220,190,9)" rx="2" ry="2" />
<text  x="795.59" y="1007.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (176 samples, 0.04%)</title><rect x="767.1" y="997" width="0.5" height="15.0" fill="rgb(213,106,12)" rx="2" ry="2" />
<text  x="770.14" y="1007.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (62 samples, 0.01%)</title><rect x="1160.9" y="885" width="0.2" height="15.0" fill="rgb(216,200,45)" rx="2" ry="2" />
<text  x="1163.94" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_work (95 samples, 0.02%)</title><rect x="892.1" y="997" width="0.3" height="15.0" fill="rgb(234,186,24)" rx="2" ry="2" />
<text  x="895.15" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::TcpSocket,  (39 samples, 0.01%)</title><rect x="1076.1" y="1093" width="0.1" height="15.0" fill="rgb(221,86,1)" rx="2" ry="2" />
<text  x="1079.06" y="1103.5" ></text>
</g>
<g >
<title>futex_wake (1,202 samples, 0.26%)</title><rect x="964.4" y="789" width="3.1" height="15.0" fill="rgb(216,9,47)" rx="2" ry="2" />
<text  x="967.36" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::_M_ptr (79 samples, 0.02%)</title><rect x="111.2" y="1301" width="0.2" height="15.0" fill="rgb(227,52,48)" rx="2" ry="2" />
<text  x="114.16" y="1311.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (44 samples, 0.01%)</title><rect x="470.4" y="1013" width="0.1" height="15.0" fill="rgb(246,27,38)" rx="2" ry="2" />
<text  x="473.39" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (59 samples, 0.01%)</title><rect x="526.6" y="757" width="0.1" height="15.0" fill="rgb(233,35,27)" rx="2" ry="2" />
<text  x="529.56" y="767.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (317 samples, 0.07%)</title><rect x="555.8" y="485" width="0.8" height="15.0" fill="rgb(253,132,38)" rx="2" ry="2" />
<text  x="558.80" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::function&lt;void  (124 samples, 0.03%)</title><rect x="627.2" y="1029" width="0.3" height="15.0" fill="rgb(208,35,42)" rx="2" ry="2" />
<text  x="630.19" y="1039.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (821 samples, 0.18%)</title><rect x="1187.1" y="1301" width="2.2" height="15.0" fill="rgb(215,121,1)" rx="2" ry="2" />
<text  x="1190.13" y="1311.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,013 samples, 0.44%)</title><rect x="846.2" y="1013" width="5.2" height="15.0" fill="rgb(209,180,0)" rx="2" ry="2" />
<text  x="849.16" y="1023.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (21,455 samples, 4.72%)</title><rect x="1020.0" y="1093" width="55.7" height="15.0" fill="rgb(242,30,30)" rx="2" ry="2" />
<text  x="1022.96" y="1103.5" >spdlo..</text>
</g>
<g >
<title>std::mutex::lock (1,243 samples, 0.27%)</title><rect x="730.6" y="933" width="3.2" height="15.0" fill="rgb(243,150,4)" rx="2" ry="2" />
<text  x="733.57" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (157 samples, 0.03%)</title><rect x="583.2" y="885" width="0.4" height="15.0" fill="rgb(230,209,49)" rx="2" ry="2" />
<text  x="586.22" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (80 samples, 0.02%)</title><rect x="1079.3" y="1013" width="0.2" height="15.0" fill="rgb(219,206,42)" rx="2" ry="2" />
<text  x="1082.28" y="1023.5" ></text>
</g>
<g >
<title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (1,504 samples, 0.33%)</title><rect x="993.0" y="1013" width="3.9" height="15.0" fill="rgb(240,9,8)" rx="2" ry="2" />
<text  x="996.04" y="1023.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,324 samples, 0.51%)</title><rect x="1063.2" y="965" width="6.1" height="15.0" fill="rgb(244,83,38)" rx="2" ry="2" />
<text  x="1066.22" y="975.5" ></text>
</g>
<g >
<title>sk_reset_timer (620 samples, 0.14%)</title><rect x="449.0" y="757" width="1.6" height="15.0" fill="rgb(244,175,23)" rx="2" ry="2" />
<text  x="452.01" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (421 samples, 0.09%)</title><rect x="295.5" y="773" width="1.1" height="15.0" fill="rgb(233,192,12)" rx="2" ry="2" />
<text  x="298.46" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (152 samples, 0.03%)</title><rect x="631.2" y="1061" width="0.3" height="15.0" fill="rgb(224,168,52)" rx="2" ry="2" />
<text  x="634.15" y="1071.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (700 samples, 0.15%)</title><rect x="643.5" y="917" width="1.8" height="15.0" fill="rgb(249,80,48)" rx="2" ry="2" />
<text  x="646.48" y="927.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (462 samples, 0.10%)</title><rect x="1089.8" y="613" width="1.2" height="15.0" fill="rgb(230,49,42)" rx="2" ry="2" />
<text  x="1092.76" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (254 samples, 0.06%)</title><rect x="607.8" y="853" width="0.6" height="15.0" fill="rgb(207,173,40)" rx="2" ry="2" />
<text  x="610.75" y="863.5" ></text>
</g>
<g >
<title>set_task_cpu (46 samples, 0.01%)</title><rect x="1055.0" y="677" width="0.2" height="15.0" fill="rgb(244,87,2)" rx="2" ry="2" />
<text  x="1058.05" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::begin (56 samples, 0.01%)</title><rect x="165.5" y="1109" width="0.2" height="15.0" fill="rgb(218,221,3)" rx="2" ry="2" />
<text  x="168.53" y="1119.5" ></text>
</g>
<g >
<title>std::locale::operator= (66 samples, 0.01%)</title><rect x="978.2" y="965" width="0.2" height="15.0" fill="rgb(239,73,19)" rx="2" ry="2" />
<text  x="981.20" y="975.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (49 samples, 0.01%)</title><rect x="704.4" y="837" width="0.2" height="15.0" fill="rgb(223,220,24)" rx="2" ry="2" />
<text  x="707.45" y="847.5" ></text>
</g>
<g >
<title>update_rq_clock (48 samples, 0.01%)</title><rect x="677.6" y="741" width="0.1" height="15.0" fill="rgb(232,58,37)" rx="2" ry="2" />
<text  x="680.61" y="751.5" ></text>
</g>
<g >
<title>__tcp_select_window (60 samples, 0.01%)</title><rect x="447.1" y="757" width="0.1" height="15.0" fill="rgb(222,194,53)" rx="2" ry="2" />
<text  x="450.07" y="767.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (258 samples, 0.06%)</title><rect x="879.8" y="901" width="0.7" height="15.0" fill="rgb(228,221,13)" rx="2" ry="2" />
<text  x="882.79" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,354 samples, 0.52%)</title><rect x="570.8" y="725" width="6.1" height="15.0" fill="rgb(221,32,12)" rx="2" ry="2" />
<text  x="573.82" y="735.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (171 samples, 0.04%)</title><rect x="462.1" y="917" width="0.4" height="15.0" fill="rgb(216,46,49)" rx="2" ry="2" />
<text  x="465.09" y="927.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (63 samples, 0.01%)</title><rect x="739.2" y="885" width="0.2" height="15.0" fill="rgb(206,98,6)" rx="2" ry="2" />
<text  x="742.21" y="895.5" ></text>
</g>
<g >
<title>preempt_schedule (109 samples, 0.02%)</title><rect x="321.8" y="485" width="0.3" height="15.0" fill="rgb(246,197,23)" rx="2" ry="2" />
<text  x="324.82" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1,003 samples, 0.22%)</title><rect x="979.3" y="1013" width="2.6" height="15.0" fill="rgb(251,2,16)" rx="2" ry="2" />
<text  x="982.33" y="1023.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (322 samples, 0.07%)</title><rect x="599.0" y="741" width="0.9" height="15.0" fill="rgb(249,189,11)" rx="2" ry="2" />
<text  x="602.03" y="751.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (264 samples, 0.06%)</title><rect x="622.5" y="1045" width="0.7" height="15.0" fill="rgb(252,145,54)" rx="2" ry="2" />
<text  x="625.54" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;std::allocator&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;, webserver::EventLoop*&amp;&gt; (1,203 samples, 0.26%)</title><rect x="1141.3" y="1013" width="3.1" height="15.0" fill="rgb(228,67,49)" rx="2" ry="2" />
<text  x="1144.26" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (250 samples, 0.06%)</title><rect x="607.8" y="837" width="0.6" height="15.0" fill="rgb(217,88,28)" rx="2" ry="2" />
<text  x="610.76" y="847.5" ></text>
</g>
<g >
<title>webserver::Channel::unregister_write (3,123 samples, 0.69%)</title><rect x="260.2" y="949" width="8.2" height="15.0" fill="rgb(213,144,15)" rx="2" ry="2" />
<text  x="263.24" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (184 samples, 0.04%)</title><rect x="645.3" y="917" width="0.5" height="15.0" fill="rgb(239,114,11)" rx="2" ry="2" />
<text  x="648.30" y="927.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocate (182 samples, 0.04%)</title><rect x="256.6" y="837" width="0.5" height="15.0" fill="rgb(237,49,21)" rx="2" ry="2" />
<text  x="259.65" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (72 samples, 0.02%)</title><rect x="1106.4" y="1061" width="0.2" height="15.0" fill="rgb(217,120,54)" rx="2" ry="2" />
<text  x="1109.42" y="1071.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [19]&gt; (20,523 samples, 4.52%)</title><rect x="633.5" y="1045" width="53.3" height="15.0" fill="rgb(207,94,9)" rx="2" ry="2" />
<text  x="636.45" y="1055.5" >spdlo..</text>
</g>
<g >
<title>perf_event_mmap_output (1,496 samples, 0.33%)</title><rect x="809.4" y="901" width="3.9" height="15.0" fill="rgb(226,173,35)" rx="2" ry="2" />
<text  x="812.41" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (41 samples, 0.01%)</title><rect x="1176.7" y="1013" width="0.1" height="15.0" fill="rgb(234,20,28)" rx="2" ry="2" />
<text  x="1179.69" y="1023.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (149 samples, 0.03%)</title><rect x="887.3" y="901" width="0.4" height="15.0" fill="rgb(241,213,1)" rx="2" ry="2" />
<text  x="890.35" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::_Tuple_impl (93 samples, 0.02%)</title><rect x="777.1" y="933" width="0.3" height="15.0" fill="rgb(225,105,14)" rx="2" ry="2" />
<text  x="780.13" y="943.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~tuple (109 samples, 0.02%)</title><rect x="1078.7" y="997" width="0.3" height="15.0" fill="rgb(244,226,34)" rx="2" ry="2" />
<text  x="1081.67" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (3,087 samples, 0.68%)</title><rect x="1093.3" y="549" width="8.0" height="15.0" fill="rgb(223,66,25)" rx="2" ry="2" />
<text  x="1096.28" y="559.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (120 samples, 0.03%)</title><rect x="690.7" y="965" width="0.3" height="15.0" fill="rgb(215,130,32)" rx="2" ry="2" />
<text  x="693.70" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (152 samples, 0.03%)</title><rect x="272.4" y="693" width="0.4" height="15.0" fill="rgb(245,216,34)" rx="2" ry="2" />
<text  x="275.40" y="703.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (632 samples, 0.14%)</title><rect x="867.7" y="1013" width="1.7" height="15.0" fill="rgb(254,153,17)" rx="2" ry="2" />
<text  x="870.73" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_free (287 samples, 0.06%)</title><rect x="224.9" y="981" width="0.7" height="15.0" fill="rgb(253,21,29)" rx="2" ry="2" />
<text  x="227.87" y="991.5" ></text>
</g>
<g >
<title>[[nf_defrag_ipv4]] (125 samples, 0.03%)</title><rect x="386.4" y="693" width="0.3" height="15.0" fill="rgb(248,66,22)" rx="2" ry="2" />
<text  x="389.40" y="703.5" ></text>
</g>
<g >
<title>__libc_start_main (61,938 samples, 13.64%)</title><rect x="1018.7" y="1301" width="161.0" height="15.0" fill="rgb(244,120,43)" rx="2" ry="2" />
<text  x="1021.74" y="1311.5" >__libc_start_main</text>
</g>
<g >
<title>tcp_rcv_established (13,071 samples, 2.88%)</title><rect x="405.5" y="501" width="33.9" height="15.0" fill="rgb(233,202,41)" rx="2" ry="2" />
<text  x="408.48" y="511.5" >tc..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (416 samples, 0.09%)</title><rect x="1076.9" y="1061" width="1.1" height="15.0" fill="rgb(206,137,25)" rx="2" ry="2" />
<text  x="1079.90" y="1071.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (147 samples, 0.03%)</title><rect x="485.5" y="933" width="0.4" height="15.0" fill="rgb(219,85,13)" rx="2" ry="2" />
<text  x="488.54" y="943.5" ></text>
</g>
<g >
<title>webserver::Channel::register_read (7,675 samples, 1.69%)</title><rect x="584.9" y="917" width="19.9" height="15.0" fill="rgb(215,140,44)" rx="2" ry="2" />
<text  x="587.91" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (217 samples, 0.05%)</title><rect x="740.9" y="1061" width="0.6" height="15.0" fill="rgb(222,6,31)" rx="2" ry="2" />
<text  x="743.91" y="1071.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (143 samples, 0.03%)</title><rect x="525.1" y="789" width="0.3" height="15.0" fill="rgb(232,17,20)" rx="2" ry="2" />
<text  x="528.07" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (167 samples, 0.04%)</title><rect x="1040.5" y="901" width="0.5" height="15.0" fill="rgb(224,105,14)" rx="2" ry="2" />
<text  x="1043.53" y="911.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (202 samples, 0.04%)</title><rect x="910.7" y="997" width="0.6" height="15.0" fill="rgb(231,214,19)" rx="2" ry="2" />
<text  x="913.73" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash (80 samples, 0.02%)</title><rect x="96.2" y="1301" width="0.2" height="15.0" fill="rgb(226,16,44)" rx="2" ry="2" />
<text  x="99.17" y="1311.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (62 samples, 0.01%)</title><rect x="387.7" y="709" width="0.2" height="15.0" fill="rgb(253,1,41)" rx="2" ry="2" />
<text  x="390.74" y="719.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="929.5" y="869" width="0.2" height="15.0" fill="rgb(245,72,22)" rx="2" ry="2" />
<text  x="932.45" y="879.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (186 samples, 0.04%)</title><rect x="296.0" y="693" width="0.5" height="15.0" fill="rgb(232,29,22)" rx="2" ry="2" />
<text  x="299.03" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (103 samples, 0.02%)</title><rect x="272.5" y="661" width="0.3" height="15.0" fill="rgb(225,55,36)" rx="2" ry="2" />
<text  x="275.52" y="671.5" ></text>
</g>
<g >
<title>sock_close (15,091 samples, 3.32%)</title><rect x="181.8" y="613" width="39.2" height="15.0" fill="rgb(240,119,8)" rx="2" ry="2" />
<text  x="184.83" y="623.5" >soc..</text>
</g>
<g >
<title>webserver::Epoll::update_channel (7,392 samples, 1.63%)</title><rect x="585.5" y="869" width="19.2" height="15.0" fill="rgb(225,22,46)" rx="2" ry="2" />
<text  x="588.51" y="879.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (323 samples, 0.07%)</title><rect x="436.1" y="405" width="0.9" height="15.0" fill="rgb(227,3,33)" rx="2" ry="2" />
<text  x="439.14" y="415.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [23], 0&gt; (253 samples, 0.06%)</title><rect x="268.9" y="885" width="0.7" height="15.0" fill="rgb(207,218,4)" rx="2" ry="2" />
<text  x="271.91" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;void  (398 samples, 0.09%)</title><rect x="1113.8" y="1013" width="1.1" height="15.0" fill="rgb(231,102,16)" rx="2" ry="2" />
<text  x="1116.83" y="1023.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt;, false&gt;::~_Head_base (103 samples, 0.02%)</title><rect x="625.8" y="853" width="0.3" height="15.0" fill="rgb(246,39,30)" rx="2" ry="2" />
<text  x="628.82" y="863.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (134 samples, 0.03%)</title><rect x="545.2" y="533" width="0.3" height="15.0" fill="rgb(237,105,41)" rx="2" ry="2" />
<text  x="548.19" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (83 samples, 0.02%)</title><rect x="260.5" y="885" width="0.2" height="15.0" fill="rgb(226,113,44)" rx="2" ry="2" />
<text  x="263.46" y="895.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::tuple (120 samples, 0.03%)</title><rect x="777.1" y="949" width="0.3" height="15.0" fill="rgb(224,58,14)" rx="2" ry="2" />
<text  x="780.06" y="959.5" ></text>
</g>
<g >
<title>update_curr (88 samples, 0.02%)</title><rect x="664.1" y="597" width="0.2" height="15.0" fill="rgb(223,117,17)" rx="2" ry="2" />
<text  x="667.06" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (274 samples, 0.06%)</title><rect x="917.9" y="965" width="0.7" height="15.0" fill="rgb(235,157,14)" rx="2" ry="2" />
<text  x="920.92" y="975.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (88 samples, 0.02%)</title><rect x="851.2" y="981" width="0.2" height="15.0" fill="rgb(245,12,40)" rx="2" ry="2" />
<text  x="854.17" y="991.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (45 samples, 0.01%)</title><rect x="1189.4" y="1317" width="0.1" height="15.0" fill="rgb(248,147,7)" rx="2" ry="2" />
<text  x="1192.39" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (43 samples, 0.01%)</title><rect x="700.9" y="805" width="0.1" height="15.0" fill="rgb(221,140,17)" rx="2" ry="2" />
<text  x="703.87" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (818 samples, 0.18%)</title><rect x="1187.1" y="1205" width="2.2" height="15.0" fill="rgb(221,185,21)" rx="2" ry="2" />
<text  x="1190.13" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (73 samples, 0.02%)</title><rect x="40.5" y="1301" width="0.1" height="15.0" fill="rgb(209,37,8)" rx="2" ry="2" />
<text  x="43.46" y="1311.5" ></text>
</g>
<g >
<title>available_idle_cpu (157 samples, 0.03%)</title><rect x="662.0" y="645" width="0.4" height="15.0" fill="rgb(231,45,26)" rx="2" ry="2" />
<text  x="665.02" y="655.5" ></text>
</g>
<g >
<title>__schedule (72 samples, 0.02%)</title><rect x="444.7" y="661" width="0.2" height="15.0" fill="rgb(248,176,4)" rx="2" ry="2" />
<text  x="447.71" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,322 samples, 0.95%)</title><rect x="896.1" y="981" width="11.2" height="15.0" fill="rgb(219,87,13)" rx="2" ry="2" />
<text  x="899.09" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (57 samples, 0.01%)</title><rect x="618.1" y="869" width="0.2" height="15.0" fill="rgb(240,9,22)" rx="2" ry="2" />
<text  x="621.14" y="879.5" ></text>
</g>
<g >
<title>security_inode_permission (155 samples, 0.03%)</title><rect x="886.7" y="933" width="0.4" height="15.0" fill="rgb(224,61,3)" rx="2" ry="2" />
<text  x="889.69" y="943.5" ></text>
</g>
<g >
<title>_int_malloc (143 samples, 0.03%)</title><rect x="1000.8" y="837" width="0.4" height="15.0" fill="rgb(219,213,41)" rx="2" ry="2" />
<text  x="1003.80" y="847.5" ></text>
</g>
<g >
<title>ntohs@plt (40 samples, 0.01%)</title><rect x="1175.2" y="1061" width="0.1" height="15.0" fill="rgb(214,145,22)" rx="2" ry="2" />
<text  x="1178.16" y="1071.5" ></text>
</g>
<g >
<title>select_task_rq_fair (700 samples, 0.15%)</title><rect x="661.0" y="661" width="1.8" height="15.0" fill="rgb(240,158,46)" rx="2" ry="2" />
<text  x="664.02" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (270 samples, 0.06%)</title><rect x="164.0" y="1109" width="0.7" height="15.0" fill="rgb(234,106,8)" rx="2" ry="2" />
<text  x="166.96" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,053 samples, 1.11%)</title><rect x="590.5" y="821" width="13.1" height="15.0" fill="rgb(215,151,51)" rx="2" ry="2" />
<text  x="593.50" y="831.5" ></text>
</g>
<g >
<title>__update_load_avg_se (59 samples, 0.01%)</title><rect x="1126.6" y="789" width="0.1" height="15.0" fill="rgb(243,10,50)" rx="2" ry="2" />
<text  x="1129.57" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (127 samples, 0.03%)</title><rect x="60.6" y="1301" width="0.4" height="15.0" fill="rgb(252,66,10)" rx="2" ry="2" />
<text  x="63.63" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (88 samples, 0.02%)</title><rect x="1023.8" y="789" width="0.2" height="15.0" fill="rgb(208,217,37)" rx="2" ry="2" />
<text  x="1026.79" y="799.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (108 samples, 0.02%)</title><rect x="647.8" y="789" width="0.3" height="15.0" fill="rgb(241,189,5)" rx="2" ry="2" />
<text  x="650.83" y="799.5" ></text>
</g>
<g >
<title>release_sock (40 samples, 0.01%)</title><rect x="1105.2" y="757" width="0.1" height="15.0" fill="rgb(233,53,3)" rx="2" ry="2" />
<text  x="1108.15" y="767.5" ></text>
</g>
<g >
<title>tcp_wfree (94 samples, 0.02%)</title><rect x="391.4" y="661" width="0.2" height="15.0" fill="rgb(222,80,37)" rx="2" ry="2" />
<text  x="394.40" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (374 samples, 0.08%)</title><rect x="790.4" y="997" width="1.0" height="15.0" fill="rgb(222,147,15)" rx="2" ry="2" />
<text  x="793.44" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (61 samples, 0.01%)</title><rect x="979.4" y="949" width="0.1" height="15.0" fill="rgb(231,47,41)" rx="2" ry="2" />
<text  x="982.38" y="959.5" ></text>
</g>
<g >
<title>memcpy_erms (72 samples, 0.02%)</title><rect x="546.1" y="533" width="0.2" height="15.0" fill="rgb(207,127,52)" rx="2" ry="2" />
<text  x="549.07" y="543.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (354 samples, 0.08%)</title><rect x="1111.1" y="1061" width="0.9" height="15.0" fill="rgb(222,165,2)" rx="2" ry="2" />
<text  x="1114.07" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (109 samples, 0.02%)</title><rect x="1039.3" y="821" width="0.3" height="15.0" fill="rgb(212,220,42)" rx="2" ry="2" />
<text  x="1042.30" y="831.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (102 samples, 0.02%)</title><rect x="1096.9" y="325" width="0.2" height="15.0" fill="rgb(246,143,7)" rx="2" ry="2" />
<text  x="1099.87" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (40 samples, 0.01%)</title><rect x="256.0" y="917" width="0.1" height="15.0" fill="rgb(228,210,22)" rx="2" ry="2" />
<text  x="259.01" y="927.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (51 samples, 0.01%)</title><rect x="267.0" y="789" width="0.2" height="15.0" fill="rgb(215,147,23)" rx="2" ry="2" />
<text  x="270.04" y="799.5" ></text>
</g>
<g >
<title>__sysvec_call_function_single (39 samples, 0.01%)</title><rect x="1133.3" y="853" width="0.1" height="15.0" fill="rgb(206,36,42)" rx="2" ry="2" />
<text  x="1136.31" y="863.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (144 samples, 0.03%)</title><rect x="237.6" y="917" width="0.3" height="15.0" fill="rgb(232,107,15)" rx="2" ry="2" />
<text  x="240.57" y="927.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (339 samples, 0.07%)</title><rect x="491.6" y="1013" width="0.9" height="15.0" fill="rgb(247,169,37)" rx="2" ry="2" />
<text  x="494.61" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (220 samples, 0.05%)</title><rect x="701.0" y="869" width="0.6" height="15.0" fill="rgb(224,183,15)" rx="2" ry="2" />
<text  x="704.04" y="879.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (84 samples, 0.02%)</title><rect x="457.9" y="805" width="0.2" height="15.0" fill="rgb(206,90,48)" rx="2" ry="2" />
<text  x="460.88" y="815.5" ></text>
</g>
<g >
<title>syscall_exit_work (41 samples, 0.01%)</title><rect x="342.9" y="645" width="0.1" height="15.0" fill="rgb(242,218,29)" rx="2" ry="2" />
<text  x="345.87" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (73 samples, 0.02%)</title><rect x="350.2" y="773" width="0.2" height="15.0" fill="rgb(244,200,32)" rx="2" ry="2" />
<text  x="353.21" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (123 samples, 0.03%)</title><rect x="908.0" y="917" width="0.3" height="15.0" fill="rgb(245,159,51)" rx="2" ry="2" />
<text  x="910.96" y="927.5" ></text>
</g>
<g >
<title>enqueue_task_fair (638 samples, 0.14%)</title><rect x="948.6" y="597" width="1.7" height="15.0" fill="rgb(220,4,6)" rx="2" ry="2" />
<text  x="951.59" y="607.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (24,441 samples, 5.38%)</title><rect x="514.6" y="885" width="63.5" height="15.0" fill="rgb(205,43,43)" rx="2" ry="2" />
<text  x="517.55" y="895.5" >spdlog..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (310 samples, 0.07%)</title><rect x="622.4" y="1077" width="0.8" height="15.0" fill="rgb(243,104,17)" rx="2" ry="2" />
<text  x="625.43" y="1087.5" ></text>
</g>
<g >
<title>available_idle_cpu (153 samples, 0.03%)</title><rect x="1054.2" y="661" width="0.4" height="15.0" fill="rgb(254,223,27)" rx="2" ry="2" />
<text  x="1057.19" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::_M_ptr (68 samples, 0.01%)</title><rect x="998.4" y="1013" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1001.39" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::reserve&lt;fmt::v8::appender&gt; (70 samples, 0.02%)</title><rect x="50.9" y="1301" width="0.2" height="15.0" fill="rgb(205,23,36)" rx="2" ry="2" />
<text  x="53.94" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::source_location_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (45 samples, 0.01%)</title><rect x="18.8" y="1301" width="0.1" height="15.0" fill="rgb(224,201,28)" rx="2" ry="2" />
<text  x="21.82" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (155 samples, 0.03%)</title><rect x="1108.9" y="949" width="0.4" height="15.0" fill="rgb(235,108,33)" rx="2" ry="2" />
<text  x="1111.88" y="959.5" ></text>
</g>
<g >
<title>_int_free (83 samples, 0.02%)</title><rect x="627.3" y="981" width="0.2" height="15.0" fill="rgb(209,89,41)" rx="2" ry="2" />
<text  x="630.27" y="991.5" ></text>
</g>
<g >
<title>_int_free (98 samples, 0.02%)</title><rect x="171.0" y="709" width="0.2" height="15.0" fill="rgb(211,84,13)" rx="2" ry="2" />
<text  x="173.97" y="719.5" ></text>
</g>
<g >
<title>tty_paranoia_check (44 samples, 0.01%)</title><rect x="1060.1" y="757" width="0.1" height="15.0" fill="rgb(249,117,1)" rx="2" ry="2" />
<text  x="1063.12" y="767.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (81 samples, 0.02%)</title><rect x="11.9" y="1237" width="0.2" height="15.0" fill="rgb(220,104,7)" rx="2" ry="2" />
<text  x="14.91" y="1247.5" ></text>
</g>
<g >
<title>kmem_cache_free (475 samples, 0.10%)</title><rect x="826.3" y="949" width="1.3" height="15.0" fill="rgb(243,200,43)" rx="2" ry="2" />
<text  x="829.34" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (80 samples, 0.02%)</title><rect x="525.6" y="709" width="0.3" height="15.0" fill="rgb(253,147,19)" rx="2" ry="2" />
<text  x="528.65" y="719.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (2,093 samples, 0.46%)</title><rect x="1069.3" y="933" width="5.4" height="15.0" fill="rgb(250,96,11)" rx="2" ry="2" />
<text  x="1072.31" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,331 samples, 0.29%)</title><rect x="774.1" y="981" width="3.4" height="15.0" fill="rgb(246,91,21)" rx="2" ry="2" />
<text  x="777.07" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (735 samples, 0.16%)</title><rect x="769.2" y="1013" width="1.9" height="15.0" fill="rgb(249,170,25)" rx="2" ry="2" />
<text  x="772.19" y="1023.5" ></text>
</g>
<g >
<title>__fget_files (132 samples, 0.03%)</title><rect x="1043.4" y="773" width="0.4" height="15.0" fill="rgb(213,110,9)" rx="2" ry="2" />
<text  x="1046.44" y="783.5" ></text>
</g>
<g >
<title>cpumask_next_wrap (77 samples, 0.02%)</title><rect x="1123.8" y="853" width="0.2" height="15.0" fill="rgb(224,172,12)" rx="2" ry="2" />
<text  x="1126.80" y="863.5" ></text>
</g>
<g >
<title>security_file_permission (105 samples, 0.02%)</title><rect x="954.4" y="741" width="0.2" height="15.0" fill="rgb(219,158,20)" rx="2" ry="2" />
<text  x="957.37" y="751.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (81 samples, 0.02%)</title><rect x="11.9" y="1285" width="0.2" height="15.0" fill="rgb(213,160,53)" rx="2" ry="2" />
<text  x="14.91" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (42 samples, 0.01%)</title><rect x="764.1" y="965" width="0.1" height="15.0" fill="rgb(243,153,2)" rx="2" ry="2" />
<text  x="767.14" y="975.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (68 samples, 0.01%)</title><rect x="597.5" y="709" width="0.2" height="15.0" fill="rgb(218,95,33)" rx="2" ry="2" />
<text  x="600.50" y="719.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (69 samples, 0.02%)</title><rect x="333.8" y="549" width="0.2" height="15.0" fill="rgb(241,165,45)" rx="2" ry="2" />
<text  x="336.78" y="559.5" ></text>
</g>
<g >
<title>update_rq_clock (100 samples, 0.02%)</title><rect x="666.5" y="661" width="0.3" height="15.0" fill="rgb(236,81,6)" rx="2" ry="2" />
<text  x="669.54" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (591 samples, 0.13%)</title><rect x="758.5" y="1061" width="1.5" height="15.0" fill="rgb(215,64,6)" rx="2" ry="2" />
<text  x="761.46" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (161 samples, 0.04%)</title><rect x="258.1" y="821" width="0.4" height="15.0" fill="rgb(212,121,49)" rx="2" ry="2" />
<text  x="261.11" y="831.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (141 samples, 0.03%)</title><rect x="786.1" y="1029" width="0.4" height="15.0" fill="rgb(210,171,44)" rx="2" ry="2" />
<text  x="789.15" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (194 samples, 0.04%)</title><rect x="530.8" y="725" width="0.5" height="15.0" fill="rgb(225,131,31)" rx="2" ry="2" />
<text  x="533.76" y="735.5" ></text>
</g>
<g >
<title>webserver::EventLoop::queue_in_loop (10,245 samples, 2.26%)</title><rect x="1110.8" y="1093" width="26.7" height="15.0" fill="rgb(220,59,51)" rx="2" ry="2" />
<text  x="1113.84" y="1103.5" >w..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (393 samples, 0.09%)</title><rect x="162.9" y="1109" width="1.1" height="15.0" fill="rgb(250,78,1)" rx="2" ry="2" />
<text  x="165.94" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,358 samples, 0.52%)</title><rect x="570.8" y="741" width="6.1" height="15.0" fill="rgb(239,182,7)" rx="2" ry="2" />
<text  x="573.81" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (94 samples, 0.02%)</title><rect x="526.5" y="773" width="0.2" height="15.0" fill="rgb(242,64,40)" rx="2" ry="2" />
<text  x="529.50" y="783.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (52 samples, 0.01%)</title><rect x="732.1" y="725" width="0.1" height="15.0" fill="rgb(242,67,20)" rx="2" ry="2" />
<text  x="735.09" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (50 samples, 0.01%)</title><rect x="1171.0" y="1077" width="0.1" height="15.0" fill="rgb(228,205,34)" rx="2" ry="2" />
<text  x="1174.00" y="1087.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (228 samples, 0.05%)</title><rect x="1162.9" y="885" width="0.6" height="15.0" fill="rgb(207,106,1)" rx="2" ry="2" />
<text  x="1165.87" y="895.5" ></text>
</g>
<g >
<title>__fsnotify_parent (141 samples, 0.03%)</title><rect x="875.4" y="981" width="0.3" height="15.0" fill="rgb(234,158,0)" rx="2" ry="2" />
<text  x="878.35" y="991.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt;*, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; (119 samples, 0.03%)</title><rect x="509.0" y="1045" width="0.3" height="15.0" fill="rgb(214,13,14)" rx="2" ry="2" />
<text  x="511.96" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::shared_ptr (52 samples, 0.01%)</title><rect x="1142.0" y="917" width="0.1" height="15.0" fill="rgb(238,201,2)" rx="2" ry="2" />
<text  x="1145.00" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (118 samples, 0.03%)</title><rect x="1003.7" y="949" width="0.4" height="15.0" fill="rgb(234,108,13)" rx="2" ry="2" />
<text  x="1006.75" y="959.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (44 samples, 0.01%)</title><rect x="677.4" y="741" width="0.2" height="15.0" fill="rgb(254,159,43)" rx="2" ry="2" />
<text  x="680.45" y="751.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (1,551 samples, 0.34%)</title><rect x="277.2" y="901" width="4.0" height="15.0" fill="rgb(217,57,14)" rx="2" ry="2" />
<text  x="280.20" y="911.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (161 samples, 0.04%)</title><rect x="533.8" y="741" width="0.4" height="15.0" fill="rgb(233,179,46)" rx="2" ry="2" />
<text  x="536.78" y="751.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (106 samples, 0.02%)</title><rect x="917.3" y="757" width="0.3" height="15.0" fill="rgb(219,45,37)" rx="2" ry="2" />
<text  x="920.28" y="767.5" ></text>
</g>
<g >
<title>__wake_up_common (2,785 samples, 0.61%)</title><rect x="202.7" y="149" width="7.3" height="15.0" fill="rgb(217,126,24)" rx="2" ry="2" />
<text  x="205.74" y="159.5" ></text>
</g>
<g >
<title>check_preempt_curr (384 samples, 0.08%)</title><rect x="665.5" y="645" width="1.0" height="15.0" fill="rgb(210,185,30)" rx="2" ry="2" />
<text  x="668.52" y="655.5" ></text>
</g>
<g >
<title>get_unmapped_area (1,252 samples, 0.28%)</title><rect x="797.4" y="965" width="3.3" height="15.0" fill="rgb(253,37,48)" rx="2" ry="2" />
<text  x="800.42" y="975.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (19,523 samples, 4.30%)</title><rect x="635.6" y="965" width="50.7" height="15.0" fill="rgb(224,195,49)" rx="2" ry="2" />
<text  x="638.61" y="975.5" >spdlo..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (77 samples, 0.02%)</title><rect x="759.3" y="997" width="0.2" height="15.0" fill="rgb(217,4,13)" rx="2" ry="2" />
<text  x="762.30" y="1007.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4,640 samples, 1.02%)</title><rect x="199.0" y="245" width="12.0" height="15.0" fill="rgb(215,95,46)" rx="2" ry="2" />
<text  x="201.99" y="255.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (102 samples, 0.02%)</title><rect x="694.8" y="885" width="0.2" height="15.0" fill="rgb(229,88,24)" rx="2" ry="2" />
<text  x="697.76" y="895.5" ></text>
</g>
<g >
<title>nf_hook_slow (600 samples, 0.13%)</title><rect x="213.4" y="453" width="1.5" height="15.0" fill="rgb(225,226,52)" rx="2" ry="2" />
<text  x="216.35" y="463.5" ></text>
</g>
<g >
<title>unmap_single_vma (109 samples, 0.02%)</title><rect x="844.5" y="933" width="0.3" height="15.0" fill="rgb(206,151,7)" rx="2" ry="2" />
<text  x="847.51" y="943.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (256 samples, 0.06%)</title><rect x="272.9" y="725" width="0.6" height="15.0" fill="rgb(231,187,31)" rx="2" ry="2" />
<text  x="275.85" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (91 samples, 0.02%)</title><rect x="1039.3" y="805" width="0.3" height="15.0" fill="rgb(240,87,18)" rx="2" ry="2" />
<text  x="1042.32" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (66 samples, 0.01%)</title><rect x="894.9" y="1045" width="0.1" height="15.0" fill="rgb(224,145,2)" rx="2" ry="2" />
<text  x="897.86" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (85 samples, 0.02%)</title><rect x="931.4" y="757" width="0.3" height="15.0" fill="rgb(241,195,32)" rx="2" ry="2" />
<text  x="934.44" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (182 samples, 0.04%)</title><rect x="183.7" y="405" width="0.5" height="15.0" fill="rgb(216,125,20)" rx="2" ry="2" />
<text  x="186.69" y="415.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (74 samples, 0.02%)</title><rect x="923.4" y="789" width="0.2" height="15.0" fill="rgb(209,48,7)" rx="2" ry="2" />
<text  x="926.37" y="799.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (125 samples, 0.03%)</title><rect x="1103.1" y="709" width="0.3" height="15.0" fill="rgb(241,203,50)" rx="2" ry="2" />
<text  x="1106.06" y="719.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (381 samples, 0.08%)</title><rect x="689.3" y="965" width="1.0" height="15.0" fill="rgb(210,115,52)" rx="2" ry="2" />
<text  x="692.31" y="975.5" ></text>
</g>
<g >
<title>std::make_shared&lt;webserver::TcpSocket, int&amp;, webserver::InetAddr&gt; (726 samples, 0.16%)</title><rect x="1168.8" y="1077" width="1.9" height="15.0" fill="rgb(205,172,21)" rx="2" ry="2" />
<text  x="1171.83" y="1087.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (110 samples, 0.02%)</title><rect x="983.3" y="981" width="0.3" height="15.0" fill="rgb(249,215,48)" rx="2" ry="2" />
<text  x="986.31" y="991.5" ></text>
</g>
<g >
<title>__queue_work (3,008 samples, 0.66%)</title><rect x="717.9" y="693" width="7.8" height="15.0" fill="rgb(244,203,15)" rx="2" ry="2" />
<text  x="720.91" y="703.5" ></text>
</g>
<g >
<title>__legitimize_mnt (157 samples, 0.03%)</title><rect x="856.1" y="901" width="0.4" height="15.0" fill="rgb(217,7,16)" rx="2" ry="2" />
<text  x="859.14" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (640 samples, 0.14%)</title><rect x="1035.2" y="933" width="1.7" height="15.0" fill="rgb(216,177,45)" rx="2" ry="2" />
<text  x="1038.21" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (59 samples, 0.01%)</title><rect x="276.0" y="773" width="0.1" height="15.0" fill="rgb(247,108,39)" rx="2" ry="2" />
<text  x="278.96" y="783.5" ></text>
</g>
<g >
<title>tcp_send_fin (1,065 samples, 0.23%)</title><rect x="217.7" y="533" width="2.7" height="15.0" fill="rgb(241,142,41)" rx="2" ry="2" />
<text  x="220.65" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (167 samples, 0.04%)</title><rect x="1175.5" y="1013" width="0.4" height="15.0" fill="rgb(247,150,22)" rx="2" ry="2" />
<text  x="1178.48" y="1023.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (281 samples, 0.06%)</title><rect x="744.3" y="981" width="0.8" height="15.0" fill="rgb(235,37,16)" rx="2" ry="2" />
<text  x="747.33" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (70 samples, 0.02%)</title><rect x="990.7" y="997" width="0.2" height="15.0" fill="rgb(252,128,26)" rx="2" ry="2" />
<text  x="993.68" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (79 samples, 0.02%)</title><rect x="548.8" y="517" width="0.2" height="15.0" fill="rgb(217,223,52)" rx="2" ry="2" />
<text  x="551.82" y="527.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (63 samples, 0.01%)</title><rect x="292.8" y="885" width="0.1" height="15.0" fill="rgb(210,15,25)" rx="2" ry="2" />
<text  x="295.76" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::max_size (47 samples, 0.01%)</title><rect x="114.9" y="1301" width="0.1" height="15.0" fill="rgb(236,12,36)" rx="2" ry="2" />
<text  x="117.89" y="1311.5" ></text>
</g>
<g >
<title>tty_write (40 samples, 0.01%)</title><rect x="558.8" y="613" width="0.1" height="15.0" fill="rgb(250,98,3)" rx="2" ry="2" />
<text  x="561.80" y="623.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (94 samples, 0.02%)</title><rect x="304.3" y="741" width="0.3" height="15.0" fill="rgb(215,168,47)" rx="2" ry="2" />
<text  x="307.33" y="751.5" ></text>
</g>
<g >
<title>preempt_schedule (73 samples, 0.02%)</title><rect x="1049.1" y="677" width="0.2" height="15.0" fill="rgb(230,182,13)" rx="2" ry="2" />
<text  x="1052.08" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (803 samples, 0.18%)</title><rect x="777.7" y="965" width="2.1" height="15.0" fill="rgb(206,20,24)" rx="2" ry="2" />
<text  x="780.72" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (399 samples, 0.09%)</title><rect x="283.1" y="821" width="1.0" height="15.0" fill="rgb(225,124,43)" rx="2" ry="2" />
<text  x="286.09" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_begin (44 samples, 0.01%)</title><rect x="991.0" y="997" width="0.1" height="15.0" fill="rgb(238,39,11)" rx="2" ry="2" />
<text  x="993.96" y="1007.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (209 samples, 0.05%)</title><rect x="198.3" y="245" width="0.6" height="15.0" fill="rgb(219,1,33)" rx="2" ry="2" />
<text  x="201.35" y="255.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (412 samples, 0.09%)</title><rect x="517.2" y="789" width="1.0" height="15.0" fill="rgb(236,31,1)" rx="2" ry="2" />
<text  x="520.17" y="799.5" ></text>
</g>
<g >
<title>cubictcp_acked (78 samples, 0.02%)</title><rect x="369.5" y="741" width="0.2" height="15.0" fill="rgb(223,195,50)" rx="2" ry="2" />
<text  x="372.46" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (21,316 samples, 4.69%)</title><rect x="166.6" y="981" width="55.4" height="15.0" fill="rgb(240,206,32)" rx="2" ry="2" />
<text  x="169.60" y="991.5" >std::..</text>
</g>
<g >
<title>ep_remove (1,505 samples, 0.33%)</title><rect x="285.9" y="805" width="3.9" height="15.0" fill="rgb(227,1,46)" rx="2" ry="2" />
<text  x="288.86" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (591 samples, 0.13%)</title><rect x="1169.1" y="1013" width="1.5" height="15.0" fill="rgb(237,210,33)" rx="2" ry="2" />
<text  x="1172.09" y="1023.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (1,205 samples, 0.27%)</title><rect x="271.1" y="837" width="3.2" height="15.0" fill="rgb(222,213,42)" rx="2" ry="2" />
<text  x="274.14" y="847.5" ></text>
</g>
<g >
<title>ipv4_dst_check (51 samples, 0.01%)</title><rect x="187.1" y="453" width="0.2" height="15.0" fill="rgb(206,185,50)" rx="2" ry="2" />
<text  x="190.12" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt;::_Node_iterator_base (71 samples, 0.02%)</title><rect x="99.9" y="1301" width="0.2" height="15.0" fill="rgb(228,208,51)" rx="2" ry="2" />
<text  x="102.95" y="1311.5" ></text>
</g>
<g >
<title>set_task_cpu (68 samples, 0.01%)</title><rect x="552.5" y="517" width="0.2" height="15.0" fill="rgb(234,214,54)" rx="2" ry="2" />
<text  x="555.52" y="527.5" ></text>
</g>
<g >
<title>__check_heap_object (54 samples, 0.01%)</title><rect x="540.9" y="581" width="0.1" height="15.0" fill="rgb(247,11,31)" rx="2" ry="2" />
<text  x="543.90" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;webserver::Channel, void&gt; (49 samples, 0.01%)</title><rect x="277.0" y="885" width="0.1" height="15.0" fill="rgb(240,113,18)" rx="2" ry="2" />
<text  x="279.95" y="895.5" ></text>
</g>
<g >
<title>__gthread_active_p (139 samples, 0.03%)</title><rect x="43.2" y="1301" width="0.3" height="15.0" fill="rgb(237,176,30)" rx="2" ry="2" />
<text  x="46.17" y="1311.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (54 samples, 0.01%)</title><rect x="24.8" y="1301" width="0.1" height="15.0" fill="rgb(208,58,7)" rx="2" ry="2" />
<text  x="27.80" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (767 samples, 0.17%)</title><rect x="789.8" y="1045" width="2.0" height="15.0" fill="rgb(227,176,18)" rx="2" ry="2" />
<text  x="792.85" y="1055.5" ></text>
</g>
<g >
<title>update_curr (48 samples, 0.01%)</title><rect x="1126.9" y="805" width="0.1" height="15.0" fill="rgb(233,101,4)" rx="2" ry="2" />
<text  x="1129.89" y="815.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (69 samples, 0.02%)</title><rect x="952.9" y="661" width="0.1" height="15.0" fill="rgb(228,194,8)" rx="2" ry="2" />
<text  x="955.86" y="671.5" ></text>
</g>
<g >
<title>lockref_put_return (39 samples, 0.01%)</title><rect x="849.7" y="917" width="0.1" height="15.0" fill="rgb(233,69,17)" rx="2" ry="2" />
<text  x="852.69" y="927.5" ></text>
</g>
<g >
<title>__release_sock (405 samples, 0.09%)</title><rect x="183.3" y="533" width="1.1" height="15.0" fill="rgb(248,13,36)" rx="2" ry="2" />
<text  x="186.33" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (42 samples, 0.01%)</title><rect x="971.3" y="1029" width="0.1" height="15.0" fill="rgb(243,2,27)" rx="2" ry="2" />
<text  x="974.30" y="1039.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (205 samples, 0.05%)</title><rect x="463.4" y="1109" width="0.6" height="15.0" fill="rgb(215,125,24)" rx="2" ry="2" />
<text  x="466.45" y="1119.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (45 samples, 0.01%)</title><rect x="904.5" y="869" width="0.1" height="15.0" fill="rgb(208,15,16)" rx="2" ry="2" />
<text  x="907.46" y="879.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt;, false&gt;::_Head_base&lt;std::shared_ptr&lt;webserver::HttpHandler&gt;&amp;&gt; (68 samples, 0.01%)</title><rect x="1076.5" y="1013" width="0.2" height="15.0" fill="rgb(250,114,41)" rx="2" ry="2" />
<text  x="1079.51" y="1023.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (264 samples, 0.06%)</title><rect x="251.4" y="853" width="0.7" height="15.0" fill="rgb(245,86,36)" rx="2" ry="2" />
<text  x="254.38" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (252 samples, 0.06%)</title><rect x="930.6" y="869" width="0.6" height="15.0" fill="rgb(248,69,15)" rx="2" ry="2" />
<text  x="933.55" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::push_back (60 samples, 0.01%)</title><rect x="16.1" y="1301" width="0.1" height="15.0" fill="rgb(229,189,27)" rx="2" ry="2" />
<text  x="19.06" y="1311.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpConnection*&gt;::_M_head (73 samples, 0.02%)</title><rect x="79.5" y="1301" width="0.2" height="15.0" fill="rgb(231,35,31)" rx="2" ry="2" />
<text  x="82.48" y="1311.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (55 samples, 0.01%)</title><rect x="1002.2" y="917" width="0.2" height="15.0" fill="rgb(210,134,3)" rx="2" ry="2" />
<text  x="1005.21" y="927.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (226 samples, 0.05%)</title><rect x="607.8" y="789" width="0.6" height="15.0" fill="rgb(239,189,2)" rx="2" ry="2" />
<text  x="610.81" y="799.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (65 samples, 0.01%)</title><rect x="153.9" y="1301" width="0.2" height="15.0" fill="rgb(218,148,16)" rx="2" ry="2" />
<text  x="156.93" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (63 samples, 0.01%)</title><rect x="86.7" y="1301" width="0.2" height="15.0" fill="rgb(235,92,16)" rx="2" ry="2" />
<text  x="89.75" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (237 samples, 0.05%)</title><rect x="588.8" y="709" width="0.6" height="15.0" fill="rgb(250,113,3)" rx="2" ry="2" />
<text  x="591.77" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (107 samples, 0.02%)</title><rect x="273.6" y="773" width="0.3" height="15.0" fill="rgb(238,130,41)" rx="2" ry="2" />
<text  x="276.61" y="783.5" ></text>
</g>
<g >
<title>update_curr (66 samples, 0.01%)</title><rect x="1098.3" y="261" width="0.1" height="15.0" fill="rgb(243,217,23)" rx="2" ry="2" />
<text  x="1101.27" y="271.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (41 samples, 0.01%)</title><rect x="690.3" y="997" width="0.1" height="15.0" fill="rgb(209,135,33)" rx="2" ry="2" />
<text  x="693.31" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (43 samples, 0.01%)</title><rect x="531.5" y="741" width="0.1" height="15.0" fill="rgb(254,137,22)" rx="2" ry="2" />
<text  x="534.46" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, fmt::v8::detail::vformat_to&lt;char&gt; (714 samples, 0.16%)</title><rect x="1024.2" y="981" width="1.9" height="15.0" fill="rgb(247,216,17)" rx="2" ry="2" />
<text  x="1027.23" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (135 samples, 0.03%)</title><rect x="629.5" y="1061" width="0.3" height="15.0" fill="rgb(234,12,20)" rx="2" ry="2" />
<text  x="632.48" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (56 samples, 0.01%)</title><rect x="92.1" y="1301" width="0.2" height="15.0" fill="rgb(248,90,37)" rx="2" ry="2" />
<text  x="95.13" y="1311.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (9,466 samples, 2.08%)</title><rect x="313.2" y="773" width="24.5" height="15.0" fill="rgb(212,78,39)" rx="2" ry="2" />
<text  x="316.15" y="783.5" >s..</text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (111 samples, 0.02%)</title><rect x="698.0" y="869" width="0.3" height="15.0" fill="rgb(250,136,36)" rx="2" ry="2" />
<text  x="701.03" y="879.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (96 samples, 0.02%)</title><rect x="455.4" y="757" width="0.2" height="15.0" fill="rgb(230,21,38)" rx="2" ry="2" />
<text  x="458.38" y="767.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (246 samples, 0.05%)</title><rect x="1023.5" y="869" width="0.7" height="15.0" fill="rgb(229,84,47)" rx="2" ry="2" />
<text  x="1026.51" y="879.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (152 samples, 0.03%)</title><rect x="701.8" y="821" width="0.4" height="15.0" fill="rgb(208,42,4)" rx="2" ry="2" />
<text  x="704.81" y="831.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, 0ul&gt; (350 samples, 0.08%)</title><rect x="985.4" y="933" width="0.9" height="15.0" fill="rgb(229,196,2)" rx="2" ry="2" />
<text  x="988.39" y="943.5" ></text>
</g>
<g >
<title>mutex_unlock (47 samples, 0.01%)</title><rect x="546.6" y="581" width="0.2" height="15.0" fill="rgb(214,206,40)" rx="2" ry="2" />
<text  x="549.65" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (80 samples, 0.02%)</title><rect x="931.5" y="741" width="0.2" height="15.0" fill="rgb(225,153,29)" rx="2" ry="2" />
<text  x="934.45" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_begin (65 samples, 0.01%)</title><rect x="73.6" y="1301" width="0.1" height="15.0" fill="rgb(229,106,38)" rx="2" ry="2" />
<text  x="76.56" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_node (67 samples, 0.01%)</title><rect x="351.8" y="869" width="0.1" height="15.0" fill="rgb(239,127,15)" rx="2" ry="2" />
<text  x="354.76" y="879.5" ></text>
</g>
<g >
<title>up_write (69 samples, 0.02%)</title><rect x="819.3" y="981" width="0.1" height="15.0" fill="rgb(243,216,52)" rx="2" ry="2" />
<text  x="822.26" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (10,242 samples, 2.26%)</title><rect x="1079.1" y="1077" width="26.6" height="15.0" fill="rgb(224,223,19)" rx="2" ry="2" />
<text  x="1082.13" y="1087.5" >s..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (67 samples, 0.01%)</title><rect x="1003.0" y="933" width="0.2" height="15.0" fill="rgb(210,76,24)" rx="2" ry="2" />
<text  x="1006.03" y="943.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (65 samples, 0.01%)</title><rect x="691.7" y="949" width="0.2" height="15.0" fill="rgb(252,112,5)" rx="2" ry="2" />
<text  x="694.69" y="959.5" ></text>
</g>
<g >
<title>is_cpu_allowed (54 samples, 0.01%)</title><rect x="424.6" y="405" width="0.1" height="15.0" fill="rgb(215,189,33)" rx="2" ry="2" />
<text  x="427.58" y="415.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (73 samples, 0.02%)</title><rect x="814.8" y="917" width="0.2" height="15.0" fill="rgb(241,133,35)" rx="2" ry="2" />
<text  x="817.83" y="927.5" ></text>
</g>
<g >
<title>[[nf_nat]] (76 samples, 0.02%)</title><rect x="214.7" y="437" width="0.2" height="15.0" fill="rgb(232,214,5)" rx="2" ry="2" />
<text  x="217.70" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (136 samples, 0.03%)</title><rect x="112.4" y="1301" width="0.4" height="15.0" fill="rgb(216,0,23)" rx="2" ry="2" />
<text  x="115.45" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (108 samples, 0.02%)</title><rect x="639.7" y="885" width="0.3" height="15.0" fill="rgb(238,204,42)" rx="2" ry="2" />
<text  x="642.72" y="895.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (69 samples, 0.02%)</title><rect x="886.9" y="917" width="0.2" height="15.0" fill="rgb(254,123,18)" rx="2" ry="2" />
<text  x="889.92" y="927.5" ></text>
</g>
<g >
<title>__check_heap_object (57 samples, 0.01%)</title><rect x="938.1" y="693" width="0.2" height="15.0" fill="rgb(228,67,33)" rx="2" ry="2" />
<text  x="941.12" y="703.5" ></text>
</g>
<g >
<title>dput (60 samples, 0.01%)</title><rect x="1084.2" y="821" width="0.1" height="15.0" fill="rgb(242,2,50)" rx="2" ry="2" />
<text  x="1087.18" y="831.5" ></text>
</g>
<g >
<title>native_write_msr (56 samples, 0.01%)</title><rect x="724.8" y="597" width="0.2" height="15.0" fill="rgb(238,34,35)" rx="2" ry="2" />
<text  x="727.82" y="607.5" ></text>
</g>
<g >
<title>__fdget_pos (134 samples, 0.03%)</title><rect x="705.0" y="789" width="0.4" height="15.0" fill="rgb(208,181,37)" rx="2" ry="2" />
<text  x="708.04" y="799.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (79 samples, 0.02%)</title><rect x="1045.7" y="757" width="0.2" height="15.0" fill="rgb(214,78,33)" rx="2" ry="2" />
<text  x="1048.73" y="767.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (236 samples, 0.05%)</title><rect x="1002.8" y="1013" width="0.6" height="15.0" fill="rgb(239,65,7)" rx="2" ry="2" />
<text  x="1005.76" y="1023.5" ></text>
</g>
<g >
<title>up_read (43 samples, 0.01%)</title><rect x="727.5" y="725" width="0.1" height="15.0" fill="rgb(205,216,39)" rx="2" ry="2" />
<text  x="730.47" y="735.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (50 samples, 0.01%)</title><rect x="267.3" y="805" width="0.1" height="15.0" fill="rgb(228,62,2)" rx="2" ry="2" />
<text  x="270.28" y="815.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (262 samples, 0.06%)</title><rect x="623.3" y="1077" width="0.7" height="15.0" fill="rgb(221,37,32)" rx="2" ry="2" />
<text  x="626.32" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (42 samples, 0.01%)</title><rect x="627.0" y="1045" width="0.1" height="15.0" fill="rgb(212,197,54)" rx="2" ry="2" />
<text  x="629.97" y="1055.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::respond_request (113 samples, 0.02%)</title><rect x="1189.6" y="1317" width="0.3" height="15.0" fill="rgb(222,56,41)" rx="2" ry="2" />
<text  x="1192.64" y="1327.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (116 samples, 0.03%)</title><rect x="311.4" y="629" width="0.3" height="15.0" fill="rgb(221,223,12)" rx="2" ry="2" />
<text  x="314.36" y="639.5" ></text>
</g>
<g >
<title>dequeue_entity (260 samples, 0.06%)</title><rect x="564.9" y="581" width="0.7" height="15.0" fill="rgb(218,152,33)" rx="2" ry="2" />
<text  x="567.90" y="591.5" ></text>
</g>
<g >
<title>ktime_get (74 samples, 0.02%)</title><rect x="215.9" y="501" width="0.2" height="15.0" fill="rgb(222,120,1)" rx="2" ry="2" />
<text  x="218.87" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (60 samples, 0.01%)</title><rect x="679.1" y="805" width="0.1" height="15.0" fill="rgb(212,8,37)" rx="2" ry="2" />
<text  x="682.09" y="815.5" ></text>
</g>
<g >
<title>mutex_lock (82 samples, 0.02%)</title><rect x="546.4" y="581" width="0.2" height="15.0" fill="rgb(206,8,46)" rx="2" ry="2" />
<text  x="549.43" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1,044 samples, 0.23%)</title><rect x="979.3" y="1029" width="2.7" height="15.0" fill="rgb(231,143,39)" rx="2" ry="2" />
<text  x="982.33" y="1039.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (70 samples, 0.02%)</title><rect x="1064.9" y="757" width="0.1" height="15.0" fill="rgb(238,204,17)" rx="2" ry="2" />
<text  x="1067.86" y="767.5" ></text>
</g>
<g >
<title>try_to_wake_up (71 samples, 0.02%)</title><rect x="942.0" y="629" width="0.2" height="15.0" fill="rgb(245,226,31)" rx="2" ry="2" />
<text  x="945.03" y="639.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (289 samples, 0.06%)</title><rect x="689.5" y="933" width="0.8" height="15.0" fill="rgb(248,125,7)" rx="2" ry="2" />
<text  x="692.54" y="943.5" ></text>
</g>
<g >
<title>operator delete (73 samples, 0.02%)</title><rect x="908.8" y="917" width="0.2" height="15.0" fill="rgb(205,204,51)" rx="2" ry="2" />
<text  x="911.79" y="927.5" ></text>
</g>
<g >
<title>ktime_get (94 samples, 0.02%)</title><rect x="448.4" y="773" width="0.2" height="15.0" fill="rgb(248,23,24)" rx="2" ry="2" />
<text  x="451.36" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (1,137 samples, 0.25%)</title><rect x="1131.6" y="965" width="2.9" height="15.0" fill="rgb(227,86,48)" rx="2" ry="2" />
<text  x="1134.57" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (47 samples, 0.01%)</title><rect x="172.0" y="709" width="0.1" height="15.0" fill="rgb(222,186,30)" rx="2" ry="2" />
<text  x="175.02" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::allocate (95 samples, 0.02%)</title><rect x="41.8" y="1301" width="0.3" height="15.0" fill="rgb(206,40,25)" rx="2" ry="2" />
<text  x="44.82" y="1311.5" ></text>
</g>
<g >
<title>kfree (39 samples, 0.01%)</title><rect x="1150.6" y="949" width="0.1" height="15.0" fill="rgb(250,132,21)" rx="2" ry="2" />
<text  x="1153.55" y="959.5" ></text>
</g>
<g >
<title>webserver::Channel::update (2,814 samples, 0.62%)</title><rect x="743.3" y="1045" width="7.3" height="15.0" fill="rgb(227,113,45)" rx="2" ry="2" />
<text  x="746.33" y="1055.5" ></text>
</g>
<g >
<title>__do_softirq (353 samples, 0.08%)</title><rect x="1086.2" y="565" width="0.9" height="15.0" fill="rgb(241,114,18)" rx="2" ry="2" />
<text  x="1089.18" y="575.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (63 samples, 0.01%)</title><rect x="645.5" y="901" width="0.1" height="15.0" fill="rgb(214,159,31)" rx="2" ry="2" />
<text  x="648.47" y="911.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (269 samples, 0.06%)</title><rect x="1160.2" y="901" width="0.7" height="15.0" fill="rgb(254,50,31)" rx="2" ry="2" />
<text  x="1163.19" y="911.5" ></text>
</g>
<g >
<title>sock_alloc_file (2,089 samples, 0.46%)</title><rect x="1161.2" y="981" width="5.4" height="15.0" fill="rgb(220,4,14)" rx="2" ry="2" />
<text  x="1164.16" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (855 samples, 0.19%)</title><rect x="777.6" y="997" width="2.2" height="15.0" fill="rgb(232,31,9)" rx="2" ry="2" />
<text  x="780.60" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,934 samples, 1.97%)</title><rect x="537.9" y="693" width="23.2" height="15.0" fill="rgb(226,124,43)" rx="2" ry="2" />
<text  x="540.93" y="703.5" >e..</text>
</g>
<g >
<title>ttwu_do_wakeup (41 samples, 0.01%)</title><rect x="346.7" y="597" width="0.1" height="15.0" fill="rgb(254,125,34)" rx="2" ry="2" />
<text  x="349.70" y="607.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1189" width="860.0" height="15.0" fill="rgb(229,176,25)" rx="2" ry="2" />
<text  x="161.66" y="1199.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::~_Tuple_impl (102 samples, 0.02%)</title><rect x="1078.7" y="981" width="0.3" height="15.0" fill="rgb(222,12,25)" rx="2" ry="2" />
<text  x="1081.69" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (41 samples, 0.01%)</title><rect x="40.1" y="1301" width="0.1" height="15.0" fill="rgb(225,8,50)" rx="2" ry="2" />
<text  x="43.13" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (136 samples, 0.03%)</title><rect x="256.7" y="789" width="0.4" height="15.0" fill="rgb(223,148,7)" rx="2" ry="2" />
<text  x="259.73" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (128 samples, 0.03%)</title><rect x="262.2" y="821" width="0.4" height="15.0" fill="rgb(208,60,16)" rx="2" ry="2" />
<text  x="265.22" y="831.5" ></text>
</g>
<g >
<title>unlock_page (53 samples, 0.01%)</title><rect x="903.6" y="837" width="0.1" height="15.0" fill="rgb(226,20,24)" rx="2" ry="2" />
<text  x="906.57" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (82 samples, 0.02%)</title><rect x="223.5" y="1061" width="0.2" height="15.0" fill="rgb(224,101,16)" rx="2" ry="2" />
<text  x="226.48" y="1071.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (43 samples, 0.01%)</title><rect x="1062.3" y="821" width="0.1" height="15.0" fill="rgb(214,61,51)" rx="2" ry="2" />
<text  x="1065.33" y="831.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;char [23]&gt; (310 samples, 0.07%)</title><rect x="268.8" y="917" width="0.8" height="15.0" fill="rgb(208,87,38)" rx="2" ry="2" />
<text  x="271.81" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (114 samples, 0.03%)</title><rect x="1004.1" y="965" width="0.3" height="15.0" fill="rgb(246,218,33)" rx="2" ry="2" />
<text  x="1007.09" y="975.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,274 samples, 4.46%)</title><rect x="687.4" y="1029" width="52.6" height="15.0" fill="rgb(229,39,28)" rx="2" ry="2" />
<text  x="690.35" y="1039.5" >spdlo..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (135 samples, 0.03%)</title><rect x="311.3" y="661" width="0.4" height="15.0" fill="rgb(233,70,47)" rx="2" ry="2" />
<text  x="314.32" y="671.5" ></text>
</g>
<g >
<title>_copy_to_user (108 samples, 0.02%)</title><rect x="1155.5" y="965" width="0.3" height="15.0" fill="rgb(238,118,23)" rx="2" ry="2" />
<text  x="1158.49" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (106 samples, 0.02%)</title><rect x="931.4" y="773" width="0.3" height="15.0" fill="rgb(208,3,35)" rx="2" ry="2" />
<text  x="934.42" y="783.5" ></text>
</g>
<g >
<title>complete_walk (128 samples, 0.03%)</title><rect x="881.0" y="949" width="0.4" height="15.0" fill="rgb(212,102,38)" rx="2" ry="2" />
<text  x="884.04" y="959.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::~TcpSocket (9,891 samples, 2.18%)</title><rect x="1080.0" y="965" width="25.7" height="15.0" fill="rgb(219,14,37)" rx="2" ry="2" />
<text  x="1082.99" y="975.5" >w..</text>
</g>
<g >
<title>spdlog::sinks::sink::should_log (41 samples, 0.01%)</title><rect x="686.3" y="965" width="0.2" height="15.0" fill="rgb(225,118,22)" rx="2" ry="2" />
<text  x="689.34" y="975.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (99 samples, 0.02%)</title><rect x="913.5" y="981" width="0.3" height="15.0" fill="rgb(244,42,10)" rx="2" ry="2" />
<text  x="916.49" y="991.5" ></text>
</g>
<g >
<title>ttwu_do_activate (964 samples, 0.21%)</title><rect x="663.0" y="661" width="2.5" height="15.0" fill="rgb(222,79,38)" rx="2" ry="2" />
<text  x="665.96" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (316 samples, 0.07%)</title><rect x="994.8" y="885" width="0.8" height="15.0" fill="rgb(240,223,41)" rx="2" ry="2" />
<text  x="997.78" y="895.5" ></text>
</g>
<g >
<title>release_pages (238 samples, 0.05%)</title><rect x="839.8" y="933" width="0.7" height="15.0" fill="rgb(215,112,26)" rx="2" ry="2" />
<text  x="842.84" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (84 samples, 0.02%)</title><rect x="718.3" y="677" width="0.3" height="15.0" fill="rgb(208,30,31)" rx="2" ry="2" />
<text  x="721.34" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (99 samples, 0.02%)</title><rect x="631.8" y="1061" width="0.3" height="15.0" fill="rgb(250,80,11)" rx="2" ry="2" />
<text  x="634.84" y="1071.5" ></text>
</g>
<g >
<title>[anon] (42,260 samples, 9.31%)</title><rect x="34.1" y="1317" width="109.8" height="15.0" fill="rgb(238,224,13)" rx="2" ry="2" />
<text  x="37.05" y="1327.5" >[anon]</text>
</g>
<g >
<title>slab_free_freelist_hook (43 samples, 0.01%)</title><rect x="827.5" y="933" width="0.1" height="15.0" fill="rgb(238,194,1)" rx="2" ry="2" />
<text  x="830.46" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (53 samples, 0.01%)</title><rect x="444.4" y="613" width="0.1" height="15.0" fill="rgb(247,142,27)" rx="2" ry="2" />
<text  x="447.38" y="623.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (86 samples, 0.02%)</title><rect x="732.1" y="741" width="0.2" height="15.0" fill="rgb(216,53,49)" rx="2" ry="2" />
<text  x="735.05" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (43 samples, 0.01%)</title><rect x="24.1" y="1301" width="0.1" height="15.0" fill="rgb(208,137,19)" rx="2" ry="2" />
<text  x="27.07" y="1311.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (50 samples, 0.01%)</title><rect x="830.4" y="901" width="0.2" height="15.0" fill="rgb(217,84,7)" rx="2" ry="2" />
<text  x="833.45" y="911.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (40 samples, 0.01%)</title><rect x="200.2" y="165" width="0.1" height="15.0" fill="rgb(215,77,36)" rx="2" ry="2" />
<text  x="203.18" y="175.5" ></text>
</g>
<g >
<title>__ip_local_out (807 samples, 0.18%)</title><rect x="1089.1" y="661" width="2.1" height="15.0" fill="rgb(249,54,11)" rx="2" ry="2" />
<text  x="1092.06" y="671.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; (21,368 samples, 4.71%)</title><rect x="166.5" y="1013" width="55.5" height="15.0" fill="rgb(213,105,7)" rx="2" ry="2" />
<text  x="169.46" y="1023.5" >std::..</text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (59 samples, 0.01%)</title><rect x="1107.5" y="885" width="0.2" height="15.0" fill="rgb(228,137,45)" rx="2" ry="2" />
<text  x="1110.51" y="895.5" ></text>
</g>
<g >
<title>__skb_clone (43 samples, 0.01%)</title><rect x="1102.5" y="693" width="0.1" height="15.0" fill="rgb(205,61,1)" rx="2" ry="2" />
<text  x="1105.50" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,689 samples, 0.37%)</title><rect x="338.6" y="677" width="4.4" height="15.0" fill="rgb(211,47,14)" rx="2" ry="2" />
<text  x="341.63" y="687.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,033 samples, 0.23%)</title><rect x="964.8" y="757" width="2.7" height="15.0" fill="rgb(224,129,49)" rx="2" ry="2" />
<text  x="967.79" y="767.5" ></text>
</g>
<g >
<title>ep_poll_callback (114 samples, 0.03%)</title><rect x="232.1" y="821" width="0.3" height="15.0" fill="rgb(245,89,32)" rx="2" ry="2" />
<text  x="235.12" y="831.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (68 samples, 0.01%)</title><rect x="297.3" y="629" width="0.2" height="15.0" fill="rgb(220,178,32)" rx="2" ry="2" />
<text  x="300.34" y="639.5" ></text>
</g>
<g >
<title>filp_close (218 samples, 0.05%)</title><rect x="871.5" y="997" width="0.6" height="15.0" fill="rgb(250,50,54)" rx="2" ry="2" />
<text  x="874.49" y="1007.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::find (286 samples, 0.06%)</title><rect x="744.3" y="997" width="0.8" height="15.0" fill="rgb(232,227,42)" rx="2" ry="2" />
<text  x="747.32" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::size (108 samples, 0.02%)</title><rect x="137.0" y="1301" width="0.3" height="15.0" fill="rgb(215,1,7)" rx="2" ry="2" />
<text  x="140.04" y="1311.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (41 samples, 0.01%)</title><rect x="1126.5" y="789" width="0.1" height="15.0" fill="rgb(252,20,0)" rx="2" ry="2" />
<text  x="1129.47" y="799.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (46 samples, 0.01%)</title><rect x="128.3" y="1301" width="0.2" height="15.0" fill="rgb(208,91,3)" rx="2" ry="2" />
<text  x="131.35" y="1311.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (50 samples, 0.01%)</title><rect x="43.7" y="1301" width="0.1" height="15.0" fill="rgb(205,45,15)" rx="2" ry="2" />
<text  x="46.66" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (722 samples, 0.16%)</title><rect x="527.4" y="725" width="1.9" height="15.0" fill="rgb(243,192,50)" rx="2" ry="2" />
<text  x="530.40" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (66 samples, 0.01%)</title><rect x="270.0" y="869" width="0.1" height="15.0" fill="rgb(250,100,48)" rx="2" ry="2" />
<text  x="272.97" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (59 samples, 0.01%)</title><rect x="1032.3" y="917" width="0.2" height="15.0" fill="rgb(214,198,48)" rx="2" ry="2" />
<text  x="1035.33" y="927.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (200 samples, 0.04%)</title><rect x="1076.9" y="1029" width="0.6" height="15.0" fill="rgb(207,42,1)" rx="2" ry="2" />
<text  x="1079.95" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (44 samples, 0.01%)</title><rect x="1115.5" y="1013" width="0.1" height="15.0" fill="rgb(250,199,11)" rx="2" ry="2" />
<text  x="1118.52" y="1023.5" ></text>
</g>
<g >
<title>std::locale::locale (204 samples, 0.04%)</title><rect x="973.7" y="1013" width="0.5" height="15.0" fill="rgb(213,19,36)" rx="2" ry="2" />
<text  x="976.68" y="1023.5" ></text>
</g>
<g >
<title>destroy_inode (274 samples, 0.06%)</title><rect x="1082.2" y="805" width="0.8" height="15.0" fill="rgb(226,181,8)" rx="2" ry="2" />
<text  x="1085.24" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;::basic_format_context (42 samples, 0.01%)</title><rect x="297.6" y="789" width="0.1" height="15.0" fill="rgb(224,155,13)" rx="2" ry="2" />
<text  x="300.56" y="799.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::details::flag_formatter*, false&gt;::_M_head (41 samples, 0.01%)</title><rect x="535.6" y="693" width="0.1" height="15.0" fill="rgb(254,188,42)" rx="2" ry="2" />
<text  x="538.55" y="703.5" ></text>
</g>
<g >
<title>dequeue_entity (201 samples, 0.04%)</title><rect x="959.6" y="693" width="0.6" height="15.0" fill="rgb(224,148,25)" rx="2" ry="2" />
<text  x="962.64" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (183 samples, 0.04%)</title><rect x="740.4" y="1061" width="0.4" height="15.0" fill="rgb(246,62,31)" rx="2" ry="2" />
<text  x="743.36" y="1071.5" ></text>
</g>
<g >
<title>update_rq_clock (94 samples, 0.02%)</title><rect x="1130.1" y="869" width="0.3" height="15.0" fill="rgb(242,19,36)" rx="2" ry="2" />
<text  x="1133.14" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (44 samples, 0.01%)</title><rect x="309.6" y="645" width="0.1" height="15.0" fill="rgb(254,128,21)" rx="2" ry="2" />
<text  x="312.56" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (431 samples, 0.09%)</title><rect x="770.0" y="981" width="1.1" height="15.0" fill="rgb(253,164,30)" rx="2" ry="2" />
<text  x="772.97" y="991.5" ></text>
</g>
<g >
<title>ksys_read (1,297 samples, 0.29%)</title><rect x="230.4" y="901" width="3.4" height="15.0" fill="rgb(205,142,2)" rx="2" ry="2" />
<text  x="233.38" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (85 samples, 0.02%)</title><rect x="1107.9" y="917" width="0.2" height="15.0" fill="rgb(226,98,17)" rx="2" ry="2" />
<text  x="1110.89" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::deallocate (41 samples, 0.01%)</title><rect x="522.4" y="789" width="0.1" height="15.0" fill="rgb(214,132,43)" rx="2" ry="2" />
<text  x="525.38" y="799.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (314 samples, 0.07%)</title><rect x="1114.0" y="981" width="0.8" height="15.0" fill="rgb(211,130,0)" rx="2" ry="2" />
<text  x="1117.01" y="991.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (188 samples, 0.04%)</title><rect x="1038.6" y="869" width="0.4" height="15.0" fill="rgb(242,2,29)" rx="2" ry="2" />
<text  x="1041.56" y="879.5" ></text>
</g>
<g >
<title>inet_accept (2,547 samples, 0.56%)</title><rect x="1148.1" y="981" width="6.6" height="15.0" fill="rgb(225,132,31)" rx="2" ry="2" />
<text  x="1151.10" y="991.5" ></text>
</g>
<g >
<title>mutex_unlock (60 samples, 0.01%)</title><rect x="322.9" y="549" width="0.1" height="15.0" fill="rgb(241,228,49)" rx="2" ry="2" />
<text  x="325.89" y="559.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (498 samples, 0.11%)</title><rect x="213.4" y="437" width="1.3" height="15.0" fill="rgb(211,68,33)" rx="2" ry="2" />
<text  x="216.41" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (83 samples, 0.02%)</title><rect x="519.0" y="661" width="0.2" height="15.0" fill="rgb(216,215,8)" rx="2" ry="2" />
<text  x="522.00" y="671.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (531 samples, 0.12%)</title><rect x="748.3" y="933" width="1.4" height="15.0" fill="rgb(233,173,53)" rx="2" ry="2" />
<text  x="751.28" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (116 samples, 0.03%)</title><rect x="41.1" y="1301" width="0.3" height="15.0" fill="rgb(228,18,27)" rx="2" ry="2" />
<text  x="44.10" y="1311.5" ></text>
</g>
<g >
<title>__lll_lock_wait (211 samples, 0.05%)</title><rect x="43.9" y="1301" width="0.6" height="15.0" fill="rgb(231,181,40)" rx="2" ry="2" />
<text  x="46.93" y="1311.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (98 samples, 0.02%)</title><rect x="1058.9" y="709" width="0.3" height="15.0" fill="rgb(245,45,35)" rx="2" ry="2" />
<text  x="1061.91" y="719.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (300 samples, 0.07%)</title><rect x="644.0" y="853" width="0.8" height="15.0" fill="rgb(215,22,19)" rx="2" ry="2" />
<text  x="646.98" y="863.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (69 samples, 0.02%)</title><rect x="1066.0" y="725" width="0.2" height="15.0" fill="rgb(223,80,8)" rx="2" ry="2" />
<text  x="1069.01" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_activate (693 samples, 0.15%)</title><rect x="682.8" y="773" width="1.8" height="15.0" fill="rgb(240,134,27)" rx="2" ry="2" />
<text  x="685.80" y="783.5" ></text>
</g>
<g >
<title>__vma_rb_erase (228 samples, 0.05%)</title><rect x="823.7" y="965" width="0.6" height="15.0" fill="rgb(223,40,42)" rx="2" ry="2" />
<text  x="826.72" y="975.5" ></text>
</g>
<g >
<title>psi_group_change (310 samples, 0.07%)</title><rect x="676.6" y="725" width="0.8" height="15.0" fill="rgb(213,108,6)" rx="2" ry="2" />
<text  x="679.59" y="735.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::shared_from_this (65 samples, 0.01%)</title><rect x="585.0" y="885" width="0.1" height="15.0" fill="rgb(219,155,3)" rx="2" ry="2" />
<text  x="587.98" y="895.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (185 samples, 0.04%)</title><rect x="1077.5" y="1045" width="0.5" height="15.0" fill="rgb(221,174,23)" rx="2" ry="2" />
<text  x="1080.48" y="1055.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (176 samples, 0.04%)</title><rect x="1086.5" y="389" width="0.5" height="15.0" fill="rgb(220,107,5)" rx="2" ry="2" />
<text  x="1089.54" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (56 samples, 0.01%)</title><rect x="923.4" y="773" width="0.1" height="15.0" fill="rgb(224,202,1)" rx="2" ry="2" />
<text  x="926.40" y="783.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (48 samples, 0.01%)</title><rect x="154.5" y="1301" width="0.1" height="15.0" fill="rgb(214,34,5)" rx="2" ry="2" />
<text  x="157.48" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (109 samples, 0.02%)</title><rect x="998.3" y="1045" width="0.3" height="15.0" fill="rgb(239,168,11)" rx="2" ry="2" />
<text  x="1001.29" y="1055.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::_M_ptr (41 samples, 0.01%)</title><rect x="577.3" y="773" width="0.1" height="15.0" fill="rgb(241,122,20)" rx="2" ry="2" />
<text  x="580.32" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (96 samples, 0.02%)</title><rect x="148.1" y="1301" width="0.3" height="15.0" fill="rgb(228,199,45)" rx="2" ry="2" />
<text  x="151.14" y="1311.5" ></text>
</g>
<g >
<title>set_next_entity (44 samples, 0.01%)</title><rect x="340.9" y="549" width="0.1" height="15.0" fill="rgb(244,75,43)" rx="2" ry="2" />
<text  x="343.89" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (153 samples, 0.03%)</title><rect x="275.3" y="757" width="0.4" height="15.0" fill="rgb(246,60,10)" rx="2" ry="2" />
<text  x="278.34" y="767.5" ></text>
</g>
<g >
<title>__fget_light (124 samples, 0.03%)</title><rect x="459.4" y="837" width="0.4" height="15.0" fill="rgb(241,212,42)" rx="2" ry="2" />
<text  x="462.43" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (45 samples, 0.01%)</title><rect x="224.2" y="1029" width="0.1" height="15.0" fill="rgb(232,37,23)" rx="2" ry="2" />
<text  x="227.17" y="1039.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (43 samples, 0.01%)</title><rect x="759.4" y="965" width="0.1" height="15.0" fill="rgb(221,106,31)" rx="2" ry="2" />
<text  x="762.37" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_newfstatat (69 samples, 0.02%)</title><rect x="867.5" y="1013" width="0.1" height="15.0" fill="rgb(223,12,25)" rx="2" ry="2" />
<text  x="870.47" y="1023.5" ></text>
</g>
<g >
<title>set_task_cpu (45 samples, 0.01%)</title><rect x="662.8" y="661" width="0.2" height="15.0" fill="rgb(253,34,48)" rx="2" ry="2" />
<text  x="665.84" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (80 samples, 0.02%)</title><rect x="776.6" y="901" width="0.2" height="15.0" fill="rgb(241,41,32)" rx="2" ry="2" />
<text  x="779.61" y="911.5" ></text>
</g>
<g >
<title>__kfree_skb (300 samples, 0.07%)</title><rect x="368.6" y="741" width="0.8" height="15.0" fill="rgb(219,149,27)" rx="2" ry="2" />
<text  x="371.59" y="751.5" ></text>
</g>
<g >
<title>lock_page_memcg (65 samples, 0.01%)</title><rect x="902.7" y="805" width="0.2" height="15.0" fill="rgb(222,54,1)" rx="2" ry="2" />
<text  x="905.71" y="815.5" ></text>
</g>
<g >
<title>__list_add_valid (39 samples, 0.01%)</title><rect x="663.9" y="597" width="0.1" height="15.0" fill="rgb(220,161,31)" rx="2" ry="2" />
<text  x="666.88" y="607.5" ></text>
</g>
<g >
<title>available_idle_cpu (63 samples, 0.01%)</title><rect x="735.9" y="757" width="0.2" height="15.0" fill="rgb(238,194,14)" rx="2" ry="2" />
<text  x="738.91" y="767.5" ></text>
</g>
<g >
<title>lookup_fast.constprop.0 (139 samples, 0.03%)</title><rect x="863.4" y="933" width="0.4" height="15.0" fill="rgb(228,67,33)" rx="2" ry="2" />
<text  x="866.40" y="943.5" ></text>
</g>
<g >
<title>enqueue_task_fair (246 samples, 0.05%)</title><rect x="1072.2" y="757" width="0.7" height="15.0" fill="rgb(241,49,11)" rx="2" ry="2" />
<text  x="1075.21" y="767.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (79 samples, 0.02%)</title><rect x="675.3" y="709" width="0.2" height="15.0" fill="rgb(212,8,16)" rx="2" ry="2" />
<text  x="678.30" y="719.5" ></text>
</g>
<g >
<title>tcp_options_write (45 samples, 0.01%)</title><rect x="417.4" y="469" width="0.1" height="15.0" fill="rgb(252,93,2)" rx="2" ry="2" />
<text  x="420.40" y="479.5" ></text>
</g>
<g >
<title>__schedule (98 samples, 0.02%)</title><rect x="717.2" y="661" width="0.2" height="15.0" fill="rgb(221,88,31)" rx="2" ry="2" />
<text  x="720.17" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (431 samples, 0.09%)</title><rect x="772.1" y="1045" width="1.1" height="15.0" fill="rgb(221,29,13)" rx="2" ry="2" />
<text  x="775.05" y="1055.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (53 samples, 0.01%)</title><rect x="967.3" y="741" width="0.1" height="15.0" fill="rgb(245,71,33)" rx="2" ry="2" />
<text  x="970.28" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (81 samples, 0.02%)</title><rect x="11.9" y="1205" width="0.2" height="15.0" fill="rgb(225,35,50)" rx="2" ry="2" />
<text  x="14.91" y="1215.5" ></text>
</g>
<g >
<title>__check_heap_object (54 samples, 0.01%)</title><rect x="317.7" y="549" width="0.2" height="15.0" fill="rgb(248,31,28)" rx="2" ry="2" />
<text  x="320.73" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (385 samples, 0.08%)</title><rect x="357.8" y="853" width="1.0" height="15.0" fill="rgb(219,35,9)" rx="2" ry="2" />
<text  x="360.79" y="863.5" ></text>
</g>
<g >
<title>operator new (186 samples, 0.04%)</title><rect x="1113.3" y="981" width="0.4" height="15.0" fill="rgb(244,66,13)" rx="2" ry="2" />
<text  x="1116.27" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (21,166 samples, 4.66%)</title><rect x="167.0" y="949" width="55.0" height="15.0" fill="rgb(236,227,10)" rx="2" ry="2" />
<text  x="169.97" y="959.5" >std::..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, webserver::Epoll*, false&gt;::_M_head (96 samples, 0.02%)</title><rect x="72.3" y="1301" width="0.3" height="15.0" fill="rgb(235,80,26)" rx="2" ry="2" />
<text  x="75.33" y="1311.5" ></text>
</g>
<g >
<title>webserver::Channel::update (7,659 samples, 1.69%)</title><rect x="584.9" y="901" width="19.9" height="15.0" fill="rgb(206,101,7)" rx="2" ry="2" />
<text  x="587.93" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (40 samples, 0.01%)</title><rect x="1018.2" y="917" width="0.1" height="15.0" fill="rgb(218,165,51)" rx="2" ry="2" />
<text  x="1021.16" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::make_checked&lt;char&gt; (55 samples, 0.01%)</title><rect x="16.8" y="1301" width="0.2" height="15.0" fill="rgb(205,212,18)" rx="2" ry="2" />
<text  x="19.81" y="1311.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::send (38,517 samples, 8.48%)</title><rect x="362.8" y="949" width="100.1" height="15.0" fill="rgb(234,160,33)" rx="2" ry="2" />
<text  x="365.82" y="959.5" >webserver::T..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (378 samples, 0.08%)</title><rect x="765.5" y="1061" width="1.0" height="15.0" fill="rgb(252,209,41)" rx="2" ry="2" />
<text  x="768.52" y="1071.5" ></text>
</g>
<g >
<title>current_time (69 samples, 0.02%)</title><rect x="802.0" y="901" width="0.2" height="15.0" fill="rgb(221,35,35)" rx="2" ry="2" />
<text  x="804.99" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (274 samples, 0.06%)</title><rect x="698.4" y="853" width="0.7" height="15.0" fill="rgb(220,109,10)" rx="2" ry="2" />
<text  x="701.35" y="863.5" ></text>
</g>
<g >
<title>__check_heap_object (39 samples, 0.01%)</title><rect x="1045.4" y="741" width="0.1" height="15.0" fill="rgb(234,8,20)" rx="2" ry="2" />
<text  x="1048.35" y="751.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (15,918 samples, 3.50%)</title><rect x="398.5" y="533" width="41.4" height="15.0" fill="rgb(238,138,3)" rx="2" ry="2" />
<text  x="401.50" y="543.5" >tcp..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_S_equals (48 samples, 0.01%)</title><rect x="97.6" y="1301" width="0.2" height="15.0" fill="rgb(230,201,34)" rx="2" ry="2" />
<text  x="100.65" y="1311.5" ></text>
</g>
<g >
<title>_find_next_bit (41 samples, 0.01%)</title><rect x="948.0" y="597" width="0.1" height="15.0" fill="rgb(210,6,0)" rx="2" ry="2" />
<text  x="950.96" y="607.5" ></text>
</g>
<g >
<title>webserver::TcpSocket::accept (10,046 samples, 2.21%)</title><rect x="1145.1" y="1093" width="26.1" height="15.0" fill="rgb(210,73,26)" rx="2" ry="2" />
<text  x="1148.07" y="1103.5" >w..</text>
</g>
<g >
<title>psi_group_change (322 samples, 0.07%)</title><rect x="567.3" y="581" width="0.8" height="15.0" fill="rgb(239,85,37)" rx="2" ry="2" />
<text  x="570.25" y="591.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;webserver::HttpHandler,  (53 samples, 0.01%)</title><rect x="276.1" y="773" width="0.2" height="15.0" fill="rgb(235,72,38)" rx="2" ry="2" />
<text  x="279.13" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_free (131 samples, 0.03%)</title><rect x="607.1" y="821" width="0.4" height="15.0" fill="rgb(241,226,51)" rx="2" ry="2" />
<text  x="610.14" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (390 samples, 0.09%)</title><rect x="702.5" y="933" width="1.0" height="15.0" fill="rgb(230,4,20)" rx="2" ry="2" />
<text  x="705.53" y="943.5" ></text>
</g>
<g >
<title>bpf_lsm_socket_shutdown (44 samples, 0.01%)</title><rect x="754.0" y="933" width="0.1" height="15.0" fill="rgb(252,13,3)" rx="2" ry="2" />
<text  x="757.01" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (196 samples, 0.04%)</title><rect x="1039.1" y="949" width="0.5" height="15.0" fill="rgb(242,52,38)" rx="2" ry="2" />
<text  x="1042.11" y="959.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (193 samples, 0.04%)</title><rect x="115.8" y="1301" width="0.5" height="15.0" fill="rgb(251,130,13)" rx="2" ry="2" />
<text  x="118.81" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (670 samples, 0.15%)</title><rect x="641.4" y="853" width="1.8" height="15.0" fill="rgb(226,109,29)" rx="2" ry="2" />
<text  x="644.42" y="863.5" ></text>
</g>
<g >
<title>iterate_groups (101 samples, 0.02%)</title><rect x="487.6" y="949" width="0.2" height="15.0" fill="rgb(247,78,0)" rx="2" ry="2" />
<text  x="490.58" y="959.5" ></text>
</g>
<g >
<title>validate_xmit_skb (113 samples, 0.02%)</title><rect x="193.9" y="421" width="0.3" height="15.0" fill="rgb(215,218,12)" rx="2" ry="2" />
<text  x="196.87" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_allocate (845 samples, 0.19%)</title><rect x="506.6" y="1077" width="2.2" height="15.0" fill="rgb(226,164,18)" rx="2" ry="2" />
<text  x="509.63" y="1087.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (152 samples, 0.03%)</title><rect x="155.5" y="1269" width="0.4" height="15.0" fill="rgb(216,60,15)" rx="2" ry="2" />
<text  x="158.49" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (55 samples, 0.01%)</title><rect x="276.0" y="757" width="0.1" height="15.0" fill="rgb(248,91,18)" rx="2" ry="2" />
<text  x="278.97" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl::_Vector_impl (70 samples, 0.02%)</title><rect x="81.0" y="1301" width="0.2" height="15.0" fill="rgb(223,188,21)" rx="2" ry="2" />
<text  x="84.04" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (131 samples, 0.03%)</title><rect x="1108.9" y="901" width="0.3" height="15.0" fill="rgb(225,50,0)" rx="2" ry="2" />
<text  x="1111.91" y="911.5" ></text>
</g>
<g >
<title>fput_many (61 samples, 0.01%)</title><rect x="1013.4" y="853" width="0.2" height="15.0" fill="rgb(208,167,25)" rx="2" ry="2" />
<text  x="1016.40" y="863.5" ></text>
</g>
<g >
<title>sock_recvmsg (195 samples, 0.04%)</title><rect x="250.9" y="853" width="0.5" height="15.0" fill="rgb(221,171,9)" rx="2" ry="2" />
<text  x="253.87" y="863.5" ></text>
</g>
<g >
<title>do_output_char (411 samples, 0.09%)</title><rect x="321.5" y="549" width="1.1" height="15.0" fill="rgb(251,36,46)" rx="2" ry="2" />
<text  x="324.52" y="559.5" ></text>
</g>
<g >
<title>__clock_gettime_2 (157 samples, 0.03%)</title><rect x="298.3" y="773" width="0.4" height="15.0" fill="rgb(227,108,29)" rx="2" ry="2" />
<text  x="301.28" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (54 samples, 0.01%)</title><rect x="985.9" y="901" width="0.1" height="15.0" fill="rgb(208,17,17)" rx="2" ry="2" />
<text  x="988.90" y="911.5" ></text>
</g>
<g >
<title>new_sync_write (6,112 samples, 1.35%)</title><rect x="1044.4" y="789" width="15.9" height="15.0" fill="rgb(221,161,9)" rx="2" ry="2" />
<text  x="1047.44" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40 samples, 0.01%)</title><rect x="306.3" y="565" width="0.1" height="15.0" fill="rgb(241,143,22)" rx="2" ry="2" />
<text  x="309.28" y="575.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (106 samples, 0.02%)</title><rect x="681.5" y="741" width="0.3" height="15.0" fill="rgb(250,54,41)" rx="2" ry="2" />
<text  x="684.50" y="751.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3,161 samples, 0.70%)</title><rect x="831.1" y="933" width="8.2" height="15.0" fill="rgb(228,56,2)" rx="2" ry="2" />
<text  x="834.12" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (44 samples, 0.01%)</title><rect x="646.3" y="917" width="0.1" height="15.0" fill="rgb(212,107,7)" rx="2" ry="2" />
<text  x="649.28" y="927.5" ></text>
</g>
<g >
<title>tcp_ack (62 samples, 0.01%)</title><rect x="1085.6" y="693" width="0.1" height="15.0" fill="rgb(245,175,5)" rx="2" ry="2" />
<text  x="1088.58" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;int&gt;, true&gt;::_M_cget (62 samples, 0.01%)</title><rect x="98.2" y="1301" width="0.2" height="15.0" fill="rgb(236,114,10)" rx="2" ry="2" />
<text  x="101.19" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad_uint&lt;unsigned long&gt; (640 samples, 0.14%)</title><rect x="697.9" y="901" width="1.7" height="15.0" fill="rgb(241,229,43)" rx="2" ry="2" />
<text  x="700.94" y="911.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (49 samples, 0.01%)</title><rect x="276.1" y="757" width="0.2" height="15.0" fill="rgb(208,99,10)" rx="2" ry="2" />
<text  x="279.14" y="767.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;&gt; (44 samples, 0.01%)</title><rect x="123.6" y="1301" width="0.1" height="15.0" fill="rgb(235,199,40)" rx="2" ry="2" />
<text  x="126.57" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,697 samples, 1.69%)</title><rect x="1116.9" y="1029" width="20.0" height="15.0" fill="rgb(237,55,51)" rx="2" ry="2" />
<text  x="1119.93" y="1039.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (129 samples, 0.03%)</title><rect x="1108.1" y="885" width="0.4" height="15.0" fill="rgb(240,149,46)" rx="2" ry="2" />
<text  x="1111.14" y="895.5" ></text>
</g>
<g >
<title>psi_group_change (119 samples, 0.03%)</title><rect x="732.6" y="725" width="0.3" height="15.0" fill="rgb(216,38,34)" rx="2" ry="2" />
<text  x="735.56" y="735.5" ></text>
</g>
<g >
<title>_int_malloc (320 samples, 0.07%)</title><rect x="1138.9" y="1029" width="0.8" height="15.0" fill="rgb(224,126,44)" rx="2" ry="2" />
<text  x="1141.85" y="1039.5" ></text>
</g>
<g >
<title>__fsnotify_parent (86 samples, 0.02%)</title><rect x="936.9" y="741" width="0.2" height="15.0" fill="rgb(228,138,27)" rx="2" ry="2" />
<text  x="939.87" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (172 samples, 0.04%)</title><rect x="716.6" y="709" width="0.4" height="15.0" fill="rgb(236,78,51)" rx="2" ry="2" />
<text  x="719.59" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,300 samples, 1.61%)</title><rect x="651.4" y="837" width="19.0" height="15.0" fill="rgb(221,20,3)" rx="2" ry="2" />
<text  x="654.41" y="847.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (231 samples, 0.05%)</title><rect x="132.9" y="1301" width="0.6" height="15.0" fill="rgb(232,100,44)" rx="2" ry="2" />
<text  x="135.87" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (43 samples, 0.01%)</title><rect x="700.4" y="917" width="0.1" height="15.0" fill="rgb(206,3,38)" rx="2" ry="2" />
<text  x="703.43" y="927.5" ></text>
</g>
<g >
<title>_copy_to_user (164 samples, 0.04%)</title><rect x="853.2" y="981" width="0.4" height="15.0" fill="rgb(216,49,25)" rx="2" ry="2" />
<text  x="856.17" y="991.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (488 samples, 0.11%)</title><rect x="1085.9" y="645" width="1.3" height="15.0" fill="rgb(235,141,44)" rx="2" ry="2" />
<text  x="1088.89" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,883 samples, 0.41%)</title><rect x="1064.1" y="869" width="4.9" height="15.0" fill="rgb(223,179,43)" rx="2" ry="2" />
<text  x="1067.11" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (141 samples, 0.03%)</title><rect x="1034.2" y="773" width="0.4" height="15.0" fill="rgb(217,170,17)" rx="2" ry="2" />
<text  x="1037.20" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (166 samples, 0.04%)</title><rect x="308.9" y="741" width="0.4" height="15.0" fill="rgb(207,70,51)" rx="2" ry="2" />
<text  x="311.89" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (43 samples, 0.01%)</title><rect x="534.5" y="789" width="0.1" height="15.0" fill="rgb(221,113,32)" rx="2" ry="2" />
<text  x="537.51" y="799.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (39 samples, 0.01%)</title><rect x="29.5" y="1301" width="0.1" height="15.0" fill="rgb(215,178,49)" rx="2" ry="2" />
<text  x="32.51" y="1311.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (58 samples, 0.01%)</title><rect x="461.2" y="869" width="0.2" height="15.0" fill="rgb(228,24,51)" rx="2" ry="2" />
<text  x="464.24" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,952 samples, 0.43%)</title><rect x="734.1" y="885" width="5.1" height="15.0" fill="rgb(211,225,54)" rx="2" ry="2" />
<text  x="737.14" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (39 samples, 0.01%)</title><rect x="88.0" y="1301" width="0.1" height="15.0" fill="rgb(250,80,4)" rx="2" ry="2" />
<text  x="91.01" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (87 samples, 0.02%)</title><rect x="625.9" y="805" width="0.2" height="15.0" fill="rgb(251,2,11)" rx="2" ry="2" />
<text  x="628.86" y="815.5" ></text>
</g>
<g >
<title>dequeue_task_fair (509 samples, 0.11%)</title><rect x="673.9" y="741" width="1.3" height="15.0" fill="rgb(218,226,7)" rx="2" ry="2" />
<text  x="676.87" y="751.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (76 samples, 0.02%)</title><rect x="310.2" y="661" width="0.2" height="15.0" fill="rgb(206,159,38)" rx="2" ry="2" />
<text  x="313.25" y="671.5" ></text>
</g>
<g >
<title>d_set_d_op (63 samples, 0.01%)</title><rect x="1164.1" y="917" width="0.2" height="15.0" fill="rgb(252,187,19)" rx="2" ry="2" />
<text  x="1167.12" y="927.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (57 samples, 0.01%)</title><rect x="1108.0" y="869" width="0.1" height="15.0" fill="rgb(240,26,5)" rx="2" ry="2" />
<text  x="1110.97" y="879.5" ></text>
</g>
<g >
<title>__napi_poll (19,268 samples, 4.24%)</title><rect x="394.5" y="645" width="50.0" height="15.0" fill="rgb(238,3,21)" rx="2" ry="2" />
<text  x="397.48" y="655.5" >__nap..</text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (151 samples, 0.03%)</title><rect x="533.8" y="725" width="0.4" height="15.0" fill="rgb(250,58,12)" rx="2" ry="2" />
<text  x="536.80" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (1,200 samples, 0.26%)</title><rect x="271.2" y="821" width="3.1" height="15.0" fill="rgb(222,17,29)" rx="2" ry="2" />
<text  x="274.15" y="831.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (233 samples, 0.05%)</title><rect x="325.9" y="453" width="0.6" height="15.0" fill="rgb(226,36,9)" rx="2" ry="2" />
<text  x="328.89" y="463.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (182 samples, 0.04%)</title><rect x="647.7" y="917" width="0.5" height="15.0" fill="rgb(239,183,8)" rx="2" ry="2" />
<text  x="650.68" y="927.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (40 samples, 0.01%)</title><rect x="154.8" y="1301" width="0.1" height="15.0" fill="rgb(210,31,45)" rx="2" ry="2" />
<text  x="157.79" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (142 samples, 0.03%)</title><rect x="311.3" y="677" width="0.4" height="15.0" fill="rgb(251,116,18)" rx="2" ry="2" />
<text  x="314.30" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (75 samples, 0.02%)</title><rect x="581.3" y="869" width="0.2" height="15.0" fill="rgb(230,109,42)" rx="2" ry="2" />
<text  x="584.34" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (371 samples, 0.08%)</title><rect x="104.9" y="1301" width="1.0" height="15.0" fill="rgb(252,73,31)" rx="2" ry="2" />
<text  x="107.91" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (5,157 samples, 1.14%)</title><rect x="238.7" y="885" width="13.4" height="15.0" fill="rgb(207,14,3)" rx="2" ry="2" />
<text  x="241.67" y="895.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (941 samples, 0.21%)</title><rect x="924.4" y="885" width="2.4" height="15.0" fill="rgb(240,208,17)" rx="2" ry="2" />
<text  x="927.36" y="895.5" ></text>
</g>
<g >
<title>enqueue_entity (456 samples, 0.10%)</title><rect x="329.3" y="437" width="1.1" height="15.0" fill="rgb(233,45,49)" rx="2" ry="2" />
<text  x="332.25" y="447.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (41 samples, 0.01%)</title><rect x="666.9" y="709" width="0.1" height="15.0" fill="rgb(209,64,0)" rx="2" ry="2" />
<text  x="669.94" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (158 samples, 0.03%)</title><rect x="69.1" y="1301" width="0.4" height="15.0" fill="rgb(241,121,8)" rx="2" ry="2" />
<text  x="72.05" y="1311.5" ></text>
</g>
<g >
<title>update_curr (73 samples, 0.02%)</title><rect x="573.9" y="565" width="0.2" height="15.0" fill="rgb(206,33,27)" rx="2" ry="2" />
<text  x="576.95" y="575.5" ></text>
</g>
<g >
<title>up_write (42 samples, 0.01%)</title><rect x="829.1" y="933" width="0.1" height="15.0" fill="rgb(220,91,13)" rx="2" ry="2" />
<text  x="832.08" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (42 samples, 0.01%)</title><rect x="304.4" y="709" width="0.1" height="15.0" fill="rgb(217,218,1)" rx="2" ry="2" />
<text  x="307.42" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (995 samples, 0.22%)</title><rect x="745.7" y="933" width="2.5" height="15.0" fill="rgb(229,194,11)" rx="2" ry="2" />
<text  x="748.66" y="943.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,427 samples, 0.31%)</title><rect x="205.5" y="117" width="3.7" height="15.0" fill="rgb(237,149,50)" rx="2" ry="2" />
<text  x="208.45" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (69 samples, 0.02%)</title><rect x="437.6" y="437" width="0.2" height="15.0" fill="rgb(217,220,24)" rx="2" ry="2" />
<text  x="440.62" y="447.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (42 samples, 0.01%)</title><rect x="212.4" y="293" width="0.1" height="15.0" fill="rgb(240,20,54)" rx="2" ry="2" />
<text  x="215.37" y="303.5" ></text>
</g>
<g >
<title>insert_work (85 samples, 0.02%)</title><rect x="324.7" y="501" width="0.2" height="15.0" fill="rgb(217,7,37)" rx="2" ry="2" />
<text  x="327.70" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (412 samples, 0.09%)</title><rect x="1141.6" y="965" width="1.1" height="15.0" fill="rgb(229,110,24)" rx="2" ry="2" />
<text  x="1144.59" y="975.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (157 samples, 0.03%)</title><rect x="869.5" y="1045" width="0.4" height="15.0" fill="rgb(222,56,39)" rx="2" ry="2" />
<text  x="872.49" y="1055.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,824 samples, 0.62%)</title><rect x="659.5" y="677" width="7.3" height="15.0" fill="rgb(239,97,49)" rx="2" ry="2" />
<text  x="662.46" y="687.5" ></text>
</g>
<g >
<title>close_fd (209 samples, 0.05%)</title><rect x="870.9" y="997" width="0.6" height="15.0" fill="rgb(250,104,12)" rx="2" ry="2" />
<text  x="873.95" y="1007.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (198 samples, 0.04%)</title><rect x="839.3" y="933" width="0.5" height="15.0" fill="rgb(211,98,8)" rx="2" ry="2" />
<text  x="842.33" y="943.5" ></text>
</g>
<g >
<title>__strlen_avx2 (48 samples, 0.01%)</title><rect x="361.8" y="805" width="0.1" height="15.0" fill="rgb(205,12,10)" rx="2" ry="2" />
<text  x="364.77" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output (281 samples, 0.06%)</title><rect x="444.9" y="725" width="0.8" height="15.0" fill="rgb(233,33,49)" rx="2" ry="2" />
<text  x="447.93" y="735.5" ></text>
</g>
<g >
<title>select_task_rq_fair (368 samples, 0.08%)</title><rect x="572.5" y="629" width="0.9" height="15.0" fill="rgb(211,81,3)" rx="2" ry="2" />
<text  x="575.46" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl::_Vector_impl (94 samples, 0.02%)</title><rect x="509.9" y="1061" width="0.2" height="15.0" fill="rgb(248,97,2)" rx="2" ry="2" />
<text  x="512.87" y="1071.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (233 samples, 0.05%)</title><rect x="879.2" y="901" width="0.6" height="15.0" fill="rgb(206,140,0)" rx="2" ry="2" />
<text  x="882.18" y="911.5" ></text>
</g>
<g >
<title>psi_task_change (333 samples, 0.07%)</title><rect x="737.4" y="741" width="0.8" height="15.0" fill="rgb(223,117,0)" rx="2" ry="2" />
<text  x="740.36" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (134 samples, 0.03%)</title><rect x="275.4" y="741" width="0.3" height="15.0" fill="rgb(229,203,6)" rx="2" ry="2" />
<text  x="278.39" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52 samples, 0.01%)</title><rect x="776.0" y="805" width="0.2" height="15.0" fill="rgb(212,114,15)" rx="2" ry="2" />
<text  x="779.03" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (71 samples, 0.02%)</title><rect x="40.8" y="1301" width="0.2" height="15.0" fill="rgb(205,87,19)" rx="2" ry="2" />
<text  x="43.84" y="1311.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (171 samples, 0.04%)</title><rect x="451.9" y="789" width="0.4" height="15.0" fill="rgb(238,123,33)" rx="2" ry="2" />
<text  x="454.87" y="799.5" ></text>
</g>
<g >
<title>___slab_alloc (49 samples, 0.01%)</title><rect x="219.3" y="469" width="0.1" height="15.0" fill="rgb(212,93,37)" rx="2" ry="2" />
<text  x="222.26" y="479.5" ></text>
</g>
<g >
<title>webserver::Channel::update (3,070 samples, 0.68%)</title><rect x="260.4" y="933" width="7.9" height="15.0" fill="rgb(208,79,31)" rx="2" ry="2" />
<text  x="263.35" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (175 samples, 0.04%)</title><rect x="647.7" y="901" width="0.5" height="15.0" fill="rgb(245,74,30)" rx="2" ry="2" />
<text  x="650.70" y="911.5" ></text>
</g>
<g >
<title>schedule (1,825 samples, 0.40%)</title><rect x="673.0" y="773" width="4.7" height="15.0" fill="rgb(225,108,13)" rx="2" ry="2" />
<text  x="676.00" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (85 samples, 0.02%)</title><rect x="990.6" y="1029" width="0.3" height="15.0" fill="rgb(247,150,5)" rx="2" ry="2" />
<text  x="993.65" y="1039.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (134 samples, 0.03%)</title><rect x="681.4" y="773" width="0.4" height="15.0" fill="rgb(222,130,34)" rx="2" ry="2" />
<text  x="684.42" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (84 samples, 0.02%)</title><rect x="1031.1" y="933" width="0.2" height="15.0" fill="rgb(205,66,27)" rx="2" ry="2" />
<text  x="1034.09" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (60 samples, 0.01%)</title><rect x="519.1" y="613" width="0.1" height="15.0" fill="rgb(233,36,41)" rx="2" ry="2" />
<text  x="522.06" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (424 samples, 0.09%)</title><rect x="994.5" y="949" width="1.1" height="15.0" fill="rgb(228,113,8)" rx="2" ry="2" />
<text  x="997.53" y="959.5" ></text>
</g>
<g >
<title>do_output_char (527 samples, 0.12%)</title><rect x="544.9" y="581" width="1.4" height="15.0" fill="rgb(242,219,36)" rx="2" ry="2" />
<text  x="547.89" y="591.5" ></text>
</g>
<g >
<title>std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_iostream (1,660 samples, 0.37%)</title><rect x="974.7" y="1029" width="4.3" height="15.0" fill="rgb(224,139,33)" rx="2" ry="2" />
<text  x="977.72" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (67 samples, 0.01%)</title><rect x="261.8" y="853" width="0.2" height="15.0" fill="rgb(228,121,47)" rx="2" ry="2" />
<text  x="264.84" y="863.5" ></text>
</g>
<g >
<title>cubictcp_cong_avoid (56 samples, 0.01%)</title><rect x="369.7" y="741" width="0.1" height="15.0" fill="rgb(247,173,2)" rx="2" ry="2" />
<text  x="372.66" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::vector (146 samples, 0.03%)</title><rect x="224.0" y="1077" width="0.4" height="15.0" fill="rgb(246,10,50)" rx="2" ry="2" />
<text  x="226.99" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (62 samples, 0.01%)</title><rect x="304.4" y="725" width="0.1" height="15.0" fill="rgb(221,5,21)" rx="2" ry="2" />
<text  x="307.37" y="735.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (275 samples, 0.06%)</title><rect x="916.9" y="869" width="0.7" height="15.0" fill="rgb(250,212,26)" rx="2" ry="2" />
<text  x="919.92" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (44 samples, 0.01%)</title><rect x="618.0" y="885" width="0.1" height="15.0" fill="rgb(228,71,17)" rx="2" ry="2" />
<text  x="621.00" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_free (97 samples, 0.02%)</title><rect x="1108.2" y="853" width="0.2" height="15.0" fill="rgb(213,35,31)" rx="2" ry="2" />
<text  x="1111.17" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (103 samples, 0.02%)</title><rect x="643.7" y="869" width="0.3" height="15.0" fill="rgb(228,206,45)" rx="2" ry="2" />
<text  x="646.69" y="879.5" ></text>
</g>
<g >
<title>webserver::HttpManager::handler (83 samples, 0.02%)</title><rect x="143.1" y="1301" width="0.2" height="15.0" fill="rgb(208,199,40)" rx="2" ry="2" />
<text  x="146.09" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (235 samples, 0.05%)</title><rect x="1107.9" y="933" width="0.6" height="15.0" fill="rgb(209,84,25)" rx="2" ry="2" />
<text  x="1110.88" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (396 samples, 0.09%)</title><rect x="980.1" y="917" width="1.0" height="15.0" fill="rgb(225,105,48)" rx="2" ry="2" />
<text  x="983.09" y="927.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42 samples, 0.01%)</title><rect x="670.9" y="901" width="0.1" height="15.0" fill="rgb(251,34,43)" rx="2" ry="2" />
<text  x="673.85" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (126 samples, 0.03%)</title><rect x="970.7" y="1013" width="0.3" height="15.0" fill="rgb(242,115,52)" rx="2" ry="2" />
<text  x="973.65" y="1023.5" ></text>
</g>
<g >
<title>inet_ehashfn (75 samples, 0.02%)</title><rect x="402.8" y="501" width="0.2" height="15.0" fill="rgb(206,159,6)" rx="2" ry="2" />
<text  x="405.84" y="511.5" ></text>
</g>
<g >
<title>mutex_lock (66 samples, 0.01%)</title><rect x="322.7" y="549" width="0.2" height="15.0" fill="rgb(214,110,53)" rx="2" ry="2" />
<text  x="325.72" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (71 samples, 0.02%)</title><rect x="359.0" y="821" width="0.1" height="15.0" fill="rgb(229,60,50)" rx="2" ry="2" />
<text  x="361.95" y="831.5" ></text>
</g>
<g >
<title>__check_object_size (250 samples, 0.06%)</title><rect x="866.4" y="933" width="0.7" height="15.0" fill="rgb(238,217,0)" rx="2" ry="2" />
<text  x="869.40" y="943.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (248 samples, 0.05%)</title><rect x="978.4" y="1013" width="0.6" height="15.0" fill="rgb(253,36,4)" rx="2" ry="2" />
<text  x="981.39" y="1023.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (4,859 samples, 1.07%)</title><rect x="773.2" y="1045" width="12.6" height="15.0" fill="rgb(211,187,3)" rx="2" ry="2" />
<text  x="776.21" y="1055.5" ></text>
</g>
<g >
<title>psi_task_change (312 samples, 0.07%)</title><rect x="683.8" y="741" width="0.8" height="15.0" fill="rgb(215,28,40)" rx="2" ry="2" />
<text  x="686.79" y="751.5" ></text>
</g>
<g >
<title>task_work_add (48 samples, 0.01%)</title><rect x="173.1" y="629" width="0.1" height="15.0" fill="rgb(228,156,51)" rx="2" ry="2" />
<text  x="176.10" y="639.5" ></text>
</g>
<g >
<title>webserver::Channel::set_close_cb (377 samples, 0.08%)</title><rect x="607.6" y="901" width="1.0" height="15.0" fill="rgb(235,188,18)" rx="2" ry="2" />
<text  x="610.64" y="911.5" ></text>
</g>
<g >
<title>check_preempt_curr (417 samples, 0.09%)</title><rect x="331.4" y="469" width="1.1" height="15.0" fill="rgb(252,104,31)" rx="2" ry="2" />
<text  x="334.39" y="479.5" ></text>
</g>
<g >
<title>pick_file (163 samples, 0.04%)</title><rect x="871.1" y="981" width="0.4" height="15.0" fill="rgb(214,87,15)" rx="2" ry="2" />
<text  x="874.07" y="991.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (72 samples, 0.02%)</title><rect x="944.8" y="629" width="0.2" height="15.0" fill="rgb(215,84,37)" rx="2" ry="2" />
<text  x="947.85" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1173" width="860.0" height="15.0" fill="rgb(212,211,19)" rx="2" ry="2" />
<text  x="161.66" y="1183.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>syscall_return_via_sysret (79 samples, 0.02%)</title><rect x="570.1" y="725" width="0.2" height="15.0" fill="rgb(227,9,26)" rx="2" ry="2" />
<text  x="573.05" y="735.5" ></text>
</g>
<g >
<title>[[nf_nat]] (76 samples, 0.02%)</title><rect x="191.4" y="405" width="0.2" height="15.0" fill="rgb(243,113,9)" rx="2" ry="2" />
<text  x="194.37" y="415.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (41 samples, 0.01%)</title><rect x="643.0" y="805" width="0.1" height="15.0" fill="rgb(251,126,44)" rx="2" ry="2" />
<text  x="646.03" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (78 samples, 0.02%)</title><rect x="639.8" y="853" width="0.2" height="15.0" fill="rgb(245,24,7)" rx="2" ry="2" />
<text  x="642.80" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (59 samples, 0.01%)</title><rect x="636.6" y="949" width="0.1" height="15.0" fill="rgb(246,154,27)" rx="2" ry="2" />
<text  x="639.59" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (312 samples, 0.07%)</title><rect x="893.7" y="1013" width="0.8" height="15.0" fill="rgb(245,151,29)" rx="2" ry="2" />
<text  x="896.70" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::operator++ (46 samples, 0.01%)</title><rect x="39.0" y="1301" width="0.2" height="15.0" fill="rgb(212,28,29)" rx="2" ry="2" />
<text  x="42.04" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (175 samples, 0.04%)</title><rect x="744.5" y="949" width="0.5" height="15.0" fill="rgb(236,148,27)" rx="2" ry="2" />
<text  x="747.53" y="959.5" ></text>
</g>
<g >
<title>queue_work_on (3,272 samples, 0.72%)</title><rect x="658.4" y="709" width="8.5" height="15.0" fill="rgb(217,100,3)" rx="2" ry="2" />
<text  x="661.44" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (113 samples, 0.02%)</title><rect x="984.4" y="1045" width="0.3" height="15.0" fill="rgb(231,11,17)" rx="2" ry="2" />
<text  x="987.38" y="1055.5" ></text>
</g>
<g >
<title>set_next_entity (58 samples, 0.01%)</title><rect x="961.1" y="693" width="0.1" height="15.0" fill="rgb(241,191,10)" rx="2" ry="2" />
<text  x="964.08" y="703.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (78 samples, 0.02%)</title><rect x="1031.4" y="901" width="0.3" height="15.0" fill="rgb(253,86,2)" rx="2" ry="2" />
<text  x="1034.45" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_limit (39 samples, 0.01%)</title><rect x="791.5" y="1029" width="0.1" height="15.0" fill="rgb(220,174,11)" rx="2" ry="2" />
<text  x="794.48" y="1039.5" ></text>
</g>
<g >
<title>memset_erms (62 samples, 0.01%)</title><rect x="407.6" y="437" width="0.2" height="15.0" fill="rgb(247,86,18)" rx="2" ry="2" />
<text  x="410.60" y="447.5" ></text>
</g>
<g >
<title>__queue_work (3,161 samples, 0.70%)</title><rect x="658.6" y="693" width="8.2" height="15.0" fill="rgb(231,75,18)" rx="2" ry="2" />
<text  x="661.59" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (124 samples, 0.03%)</title><rect x="42.8" y="1301" width="0.4" height="15.0" fill="rgb(219,192,5)" rx="2" ry="2" />
<text  x="45.85" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (98 samples, 0.02%)</title><rect x="927.2" y="821" width="0.3" height="15.0" fill="rgb(219,16,20)" rx="2" ry="2" />
<text  x="930.24" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::~vector (644 samples, 0.14%)</title><rect x="224.4" y="1077" width="1.6" height="15.0" fill="rgb(205,120,25)" rx="2" ry="2" />
<text  x="227.37" y="1087.5" ></text>
</g>
<g >
<title>__GI___libc_free (277 samples, 0.06%)</title><rect x="274.5" y="805" width="0.7" height="15.0" fill="rgb(226,149,14)" rx="2" ry="2" />
<text  x="277.50" y="815.5" ></text>
</g>
<g >
<title>get_align_mask (52 samples, 0.01%)</title><rect x="798.0" y="933" width="0.1" height="15.0" fill="rgb(228,224,41)" rx="2" ry="2" />
<text  x="801.01" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (51 samples, 0.01%)</title><rect x="1037.5" y="869" width="0.2" height="15.0" fill="rgb(214,37,42)" rx="2" ry="2" />
<text  x="1040.53" y="879.5" ></text>
</g>
<g >
<title>available_idle_cpu (79 samples, 0.02%)</title><rect x="682.2" y="757" width="0.2" height="15.0" fill="rgb(206,97,25)" rx="2" ry="2" />
<text  x="685.19" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (668 samples, 0.15%)</title><rect x="986.6" y="965" width="1.8" height="15.0" fill="rgb(238,17,45)" rx="2" ry="2" />
<text  x="989.63" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_work (85 samples, 0.02%)</title><rect x="820.9" y="997" width="0.2" height="15.0" fill="rgb(220,173,52)" rx="2" ry="2" />
<text  x="823.88" y="1007.5" ></text>
</g>
<g >
<title>alloc_fd (361 samples, 0.08%)</title><rect x="875.7" y="981" width="1.0" height="15.0" fill="rgb(224,39,37)" rx="2" ry="2" />
<text  x="878.72" y="991.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (373 samples, 0.08%)</title><rect x="549.4" y="517" width="1.0" height="15.0" fill="rgb(230,118,48)" rx="2" ry="2" />
<text  x="552.40" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (175 samples, 0.04%)</title><rect x="306.0" y="597" width="0.4" height="15.0" fill="rgb(245,12,30)" rx="2" ry="2" />
<text  x="308.95" y="607.5" ></text>
</g>
<g >
<title>fmt::v8::detail::find&lt;false, char, char const*&gt; (142 samples, 0.03%)</title><rect x="294.9" y="789" width="0.4" height="15.0" fill="rgb(251,188,44)" rx="2" ry="2" />
<text  x="297.92" y="799.5" ></text>
</g>
<g >
<title>new_sync_write (6,640 samples, 1.46%)</title><rect x="937.1" y="741" width="17.2" height="15.0" fill="rgb(242,99,30)" rx="2" ry="2" />
<text  x="940.09" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_write (9,354 samples, 2.06%)</title><rect x="537.3" y="709" width="24.3" height="15.0" fill="rgb(251,185,39)" rx="2" ry="2" />
<text  x="540.27" y="719.5" >_..</text>
</g>
<g >
<title>sock_poll (1,237 samples, 0.27%)</title><rect x="594.5" y="741" width="3.2" height="15.0" fill="rgb(243,89,51)" rx="2" ry="2" />
<text  x="597.47" y="751.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (188 samples, 0.04%)</title><rect x="528.4" y="613" width="0.5" height="15.0" fill="rgb(229,165,42)" rx="2" ry="2" />
<text  x="531.41" y="623.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (89 samples, 0.02%)</title><rect x="1037.4" y="933" width="0.3" height="15.0" fill="rgb(211,209,47)" rx="2" ry="2" />
<text  x="1040.43" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,397 samples, 4.49%)</title><rect x="687.1" y="1045" width="53.0" height="15.0" fill="rgb(241,207,45)" rx="2" ry="2" />
<text  x="690.08" y="1055.5" >spdlo..</text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::vector (59 samples, 0.01%)</title><rect x="138.7" y="1301" width="0.2" height="15.0" fill="rgb(232,167,10)" rx="2" ry="2" />
<text  x="141.70" y="1311.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (942 samples, 0.21%)</title><rect x="188.6" y="405" width="2.5" height="15.0" fill="rgb(237,208,12)" rx="2" ry="2" />
<text  x="191.60" y="415.5" ></text>
</g>
<g >
<title>__strlen_avx2 (256 samples, 0.06%)</title><rect x="997.6" y="1013" width="0.6" height="15.0" fill="rgb(246,29,2)" rx="2" ry="2" />
<text  x="1000.57" y="1023.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [24], 0&gt; (276 samples, 0.06%)</title><rect x="628.1" y="1045" width="0.8" height="15.0" fill="rgb(210,197,52)" rx="2" ry="2" />
<text  x="631.14" y="1055.5" ></text>
</g>
<g >
<title>htons (42 samples, 0.01%)</title><rect x="357.5" y="853" width="0.1" height="15.0" fill="rgb(243,117,34)" rx="2" ry="2" />
<text  x="360.49" y="863.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (127 samples, 0.03%)</title><rect x="160.8" y="1093" width="0.3" height="15.0" fill="rgb(230,60,38)" rx="2" ry="2" />
<text  x="163.76" y="1103.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_istream (1,412 samples, 0.31%)</title><rect x="974.7" y="1013" width="3.7" height="15.0" fill="rgb(223,178,26)" rx="2" ry="2" />
<text  x="977.72" y="1023.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (243 samples, 0.05%)</title><rect x="533.0" y="725" width="0.6" height="15.0" fill="rgb(208,44,16)" rx="2" ry="2" />
<text  x="535.97" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::function&lt;void  (62 samples, 0.01%)</title><rect x="67.5" y="1301" width="0.1" height="15.0" fill="rgb(243,2,10)" rx="2" ry="2" />
<text  x="70.47" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (521 samples, 0.11%)</title><rect x="256.2" y="885" width="1.3" height="15.0" fill="rgb(217,208,2)" rx="2" ry="2" />
<text  x="259.18" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (113 samples, 0.02%)</title><rect x="582.8" y="789" width="0.3" height="15.0" fill="rgb(246,94,14)" rx="2" ry="2" />
<text  x="585.76" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (68 samples, 0.01%)</title><rect x="917.6" y="901" width="0.2" height="15.0" fill="rgb(243,1,43)" rx="2" ry="2" />
<text  x="920.64" y="911.5" ></text>
</g>
<g >
<title>dequeue_entity (305 samples, 0.07%)</title><rect x="674.1" y="725" width="0.8" height="15.0" fill="rgb(206,46,31)" rx="2" ry="2" />
<text  x="677.06" y="735.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (144 samples, 0.03%)</title><rect x="55.1" y="1301" width="0.4" height="15.0" fill="rgb(240,215,21)" rx="2" ry="2" />
<text  x="58.11" y="1311.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (107 samples, 0.02%)</title><rect x="853.3" y="965" width="0.3" height="15.0" fill="rgb(208,80,11)" rx="2" ry="2" />
<text  x="856.32" y="975.5" ></text>
</g>
<g >
<title>__fget_light (223 samples, 0.05%)</title><rect x="230.5" y="869" width="0.6" height="15.0" fill="rgb(250,213,22)" rx="2" ry="2" />
<text  x="233.54" y="879.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,240 samples, 0.27%)</title><rect x="389.1" y="709" width="3.2" height="15.0" fill="rgb(227,123,36)" rx="2" ry="2" />
<text  x="392.12" y="719.5" ></text>
</g>
<g >
<title>locks_remove_file (45 samples, 0.01%)</title><rect x="850.0" y="949" width="0.1" height="15.0" fill="rgb(243,161,26)" rx="2" ry="2" />
<text  x="853.02" y="959.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (214 samples, 0.05%)</title><rect x="170.8" y="757" width="0.6" height="15.0" fill="rgb(223,85,23)" rx="2" ry="2" />
<text  x="173.82" y="767.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::end (46 samples, 0.01%)</title><rect x="1005.1" y="949" width="0.1" height="15.0" fill="rgb(234,179,39)" rx="2" ry="2" />
<text  x="1008.09" y="959.5" ></text>
</g>
<g >
<title>syscall_exit_work (394 samples, 0.09%)</title><rect x="497.1" y="1029" width="1.0" height="15.0" fill="rgb(247,209,0)" rx="2" ry="2" />
<text  x="500.10" y="1039.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (51 samples, 0.01%)</title><rect x="692.0" y="949" width="0.1" height="15.0" fill="rgb(226,224,36)" rx="2" ry="2" />
<text  x="694.97" y="959.5" ></text>
</g>
<g >
<title>do_output_char (432 samples, 0.10%)</title><rect x="656.3" y="725" width="1.1" height="15.0" fill="rgb(209,109,19)" rx="2" ry="2" />
<text  x="659.26" y="735.5" ></text>
</g>
<g >
<title>nf_hook_slow (660 samples, 0.15%)</title><rect x="439.9" y="565" width="1.7" height="15.0" fill="rgb(232,186,24)" rx="2" ry="2" />
<text  x="442.86" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (69 samples, 0.02%)</title><rect x="927.3" y="773" width="0.2" height="15.0" fill="rgb(247,121,52)" rx="2" ry="2" />
<text  x="930.31" y="783.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (774 samples, 0.17%)</title><rect x="924.8" y="853" width="2.0" height="15.0" fill="rgb(234,112,43)" rx="2" ry="2" />
<text  x="927.80" y="863.5" ></text>
</g>
<g >
<title>psi_group_change (216 samples, 0.05%)</title><rect x="961.6" y="693" width="0.5" height="15.0" fill="rgb(254,128,42)" rx="2" ry="2" />
<text  x="964.58" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (83 samples, 0.02%)</title><rect x="981.4" y="901" width="0.2" height="15.0" fill="rgb(217,202,16)" rx="2" ry="2" />
<text  x="984.37" y="911.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (59 samples, 0.01%)</title><rect x="700.8" y="821" width="0.2" height="15.0" fill="rgb(234,213,36)" rx="2" ry="2" />
<text  x="703.84" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;webserver::HttpHandler*,  (48 samples, 0.01%)</title><rect x="1107.1" y="1013" width="0.1" height="15.0" fill="rgb(218,175,48)" rx="2" ry="2" />
<text  x="1110.10" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (40 samples, 0.01%)</title><rect x="1142.2" y="837" width="0.1" height="15.0" fill="rgb(248,21,44)" rx="2" ry="2" />
<text  x="1145.19" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (242 samples, 0.05%)</title><rect x="1038.4" y="901" width="0.6" height="15.0" fill="rgb(253,5,45)" rx="2" ry="2" />
<text  x="1041.42" y="911.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (63 samples, 0.01%)</title><rect x="639.5" y="821" width="0.1" height="15.0" fill="rgb(241,149,11)" rx="2" ry="2" />
<text  x="642.47" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (90 samples, 0.02%)</title><rect x="1050.5" y="725" width="0.2" height="15.0" fill="rgb(243,227,22)" rx="2" ry="2" />
<text  x="1053.46" y="735.5" ></text>
</g>
<g >
<title>__queue_work (2,977 samples, 0.66%)</title><rect x="1050.9" y="709" width="7.8" height="15.0" fill="rgb(243,102,18)" rx="2" ry="2" />
<text  x="1053.93" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (393 samples, 0.09%)</title><rect x="162.9" y="1077" width="1.1" height="15.0" fill="rgb(230,59,42)" rx="2" ry="2" />
<text  x="165.94" y="1087.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (40 samples, 0.01%)</title><rect x="275.8" y="741" width="0.1" height="15.0" fill="rgb(215,220,3)" rx="2" ry="2" />
<text  x="278.84" y="751.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (53 samples, 0.01%)</title><rect x="926.9" y="901" width="0.1" height="15.0" fill="rgb(246,226,1)" rx="2" ry="2" />
<text  x="929.86" y="911.5" ></text>
</g>
<g >
<title>try_to_wake_up (89 samples, 0.02%)</title><rect x="656.9" y="661" width="0.3" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="659.92" y="671.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (223 samples, 0.05%)</title><rect x="264.9" y="789" width="0.6" height="15.0" fill="rgb(234,196,6)" rx="2" ry="2" />
<text  x="267.88" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (108 samples, 0.02%)</title><rect x="706.8" y="741" width="0.3" height="15.0" fill="rgb(232,57,22)" rx="2" ry="2" />
<text  x="709.79" y="751.5" ></text>
</g>
<g >
<title>queue_work_on (111 samples, 0.02%)</title><rect x="1049.3" y="709" width="0.3" height="15.0" fill="rgb(231,173,1)" rx="2" ry="2" />
<text  x="1052.27" y="719.5" ></text>
</g>
<g >
<title>webserver::InetAddr::to_ip_port_string[abi:cxx11] (4,021 samples, 0.89%)</title><rect x="352.4" y="869" width="10.4" height="15.0" fill="rgb(252,151,30)" rx="2" ry="2" />
<text  x="355.36" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (153 samples, 0.03%)</title><rect x="303.7" y="709" width="0.4" height="15.0" fill="rgb(224,70,12)" rx="2" ry="2" />
<text  x="306.71" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (205 samples, 0.05%)</title><rect x="1023.6" y="837" width="0.5" height="15.0" fill="rgb(237,123,1)" rx="2" ry="2" />
<text  x="1026.62" y="847.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (49 samples, 0.01%)</title><rect x="25.2" y="1301" width="0.1" height="15.0" fill="rgb(237,227,6)" rx="2" ry="2" />
<text  x="28.15" y="1311.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (117 samples, 0.03%)</title><rect x="276.6" y="869" width="0.3" height="15.0" fill="rgb(253,154,54)" rx="2" ry="2" />
<text  x="279.58" y="879.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (482 samples, 0.11%)</title><rect x="305.5" y="645" width="1.2" height="15.0" fill="rgb(249,193,7)" rx="2" ry="2" />
<text  x="308.48" y="655.5" ></text>
</g>
<g >
<title>webserver::EventLoop::add_http_connection (41,786 samples, 9.20%)</title><rect x="513.4" y="965" width="108.6" height="15.0" fill="rgb(216,115,50)" rx="2" ry="2" />
<text  x="516.40" y="975.5" >webserver::Ev..</text>
</g>
<g >
<title>spdlog::logger::sink_it_ (176 samples, 0.04%)</title><rect x="151.6" y="1301" width="0.4" height="15.0" fill="rgb(236,47,51)" rx="2" ry="2" />
<text  x="154.58" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (142 samples, 0.03%)</title><rect x="35.4" y="1285" width="0.4" height="15.0" fill="rgb(237,68,15)" rx="2" ry="2" />
<text  x="38.41" y="1295.5" ></text>
</g>
<g >
<title>enqueue_entity (210 samples, 0.05%)</title><rect x="1098.1" y="277" width="0.5" height="15.0" fill="rgb(250,151,29)" rx="2" ry="2" />
<text  x="1101.06" y="287.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (79 samples, 0.02%)</title><rect x="667.6" y="725" width="0.2" height="15.0" fill="rgb(238,13,31)" rx="2" ry="2" />
<text  x="670.59" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::operator (443 samples, 0.10%)</title><rect x="932.1" y="901" width="1.1" height="15.0" fill="rgb(223,88,36)" rx="2" ry="2" />
<text  x="935.10" y="911.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (59 samples, 0.01%)</title><rect x="1006.3" y="869" width="0.2" height="15.0" fill="rgb(212,142,13)" rx="2" ry="2" />
<text  x="1009.33" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_close (458 samples, 0.10%)</title><rect x="172.3" y="677" width="1.2" height="15.0" fill="rgb(211,100,8)" rx="2" ry="2" />
<text  x="175.32" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,548 samples, 1.44%)</title><rect x="852.5" y="1029" width="17.0" height="15.0" fill="rgb(251,170,10)" rx="2" ry="2" />
<text  x="855.48" y="1039.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (72 samples, 0.02%)</title><rect x="321.1" y="549" width="0.2" height="15.0" fill="rgb(205,27,3)" rx="2" ry="2" />
<text  x="324.13" y="559.5" ></text>
</g>
<g >
<title>_int_free (109 samples, 0.02%)</title><rect x="1109.0" y="837" width="0.2" height="15.0" fill="rgb(233,55,52)" rx="2" ry="2" />
<text  x="1111.95" y="847.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (729 samples, 0.16%)</title><rect x="389.7" y="693" width="1.9" height="15.0" fill="rgb(219,109,14)" rx="2" ry="2" />
<text  x="392.75" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (51 samples, 0.01%)</title><rect x="22.6" y="1301" width="0.1" height="15.0" fill="rgb(226,49,39)" rx="2" ry="2" />
<text  x="25.58" y="1311.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (43 samples, 0.01%)</title><rect x="556.2" y="469" width="0.1" height="15.0" fill="rgb(246,29,3)" rx="2" ry="2" />
<text  x="559.17" y="479.5" ></text>
</g>
<g >
<title>_copy_from_iter (134 samples, 0.03%)</title><rect x="318.4" y="565" width="0.4" height="15.0" fill="rgb(253,190,52)" rx="2" ry="2" />
<text  x="321.44" y="575.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (77 samples, 0.02%)</title><rect x="1049.6" y="709" width="0.2" height="15.0" fill="rgb(221,122,5)" rx="2" ry="2" />
<text  x="1052.58" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (164 samples, 0.04%)</title><rect x="272.4" y="709" width="0.4" height="15.0" fill="rgb(231,32,40)" rx="2" ry="2" />
<text  x="275.37" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpConnection*&gt; (46 samples, 0.01%)</title><rect x="463.2" y="997" width="0.1" height="15.0" fill="rgb(236,151,20)" rx="2" ry="2" />
<text  x="466.16" y="1007.5" ></text>
</g>
<g >
<title>tcp_current_mss (66 samples, 0.01%)</title><rect x="1104.9" y="725" width="0.2" height="15.0" fill="rgb(224,93,47)" rx="2" ry="2" />
<text  x="1107.89" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common (1,330 samples, 0.29%)</title><rect x="1096.6" y="357" width="3.4" height="15.0" fill="rgb(252,148,48)" rx="2" ry="2" />
<text  x="1099.59" y="367.5" ></text>
</g>
<g >
<title>__virt_addr_valid (67 samples, 0.01%)</title><rect x="706.5" y="725" width="0.1" height="15.0" fill="rgb(229,170,52)" rx="2" ry="2" />
<text  x="709.46" y="735.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (90,640 samples, 19.96%)</title><rect x="227.9" y="1061" width="235.5" height="15.0" fill="rgb(253,194,21)" rx="2" ry="2" />
<text  x="230.92" y="1071.5" >std::__invoke_r&lt;void, std::_Bin..</text>
</g>
<g >
<title>futex_wait (734 samples, 0.16%)</title><rect x="731.2" y="805" width="1.9" height="15.0" fill="rgb(219,29,4)" rx="2" ry="2" />
<text  x="734.18" y="815.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_impl::_Vector_impl (79 samples, 0.02%)</title><rect x="224.1" y="1045" width="0.2" height="15.0" fill="rgb(233,2,32)" rx="2" ry="2" />
<text  x="227.13" y="1055.5" ></text>
</g>
<g >
<title>__copy_skb_header (59 samples, 0.01%)</title><rect x="446.9" y="741" width="0.2" height="15.0" fill="rgb(240,72,47)" rx="2" ry="2" />
<text  x="449.91" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (645 samples, 0.14%)</title><rect x="728.1" y="805" width="1.7" height="15.0" fill="rgb(224,168,33)" rx="2" ry="2" />
<text  x="731.12" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (78 samples, 0.02%)</title><rect x="41.2" y="1269" width="0.2" height="15.0" fill="rgb(237,176,42)" rx="2" ry="2" />
<text  x="44.19" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::get (65 samples, 0.01%)</title><rect x="134.7" y="1301" width="0.2" height="15.0" fill="rgb(206,188,1)" rx="2" ry="2" />
<text  x="137.72" y="1311.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::_M_weak_assign&lt;webserver::Channel&gt; (97 samples, 0.02%)</title><rect x="1144.1" y="965" width="0.2" height="15.0" fill="rgb(247,89,7)" rx="2" ry="2" />
<text  x="1147.08" y="975.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (82 samples, 0.02%)</title><rect x="767.7" y="1013" width="0.2" height="15.0" fill="rgb(226,162,45)" rx="2" ry="2" />
<text  x="770.69" y="1023.5" ></text>
</g>
<g >
<title>psi_group_change (40 samples, 0.01%)</title><rect x="737.3" y="741" width="0.1" height="15.0" fill="rgb(250,169,16)" rx="2" ry="2" />
<text  x="740.26" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (45 samples, 0.01%)</title><rect x="350.3" y="709" width="0.1" height="15.0" fill="rgb(252,40,11)" rx="2" ry="2" />
<text  x="353.28" y="719.5" ></text>
</g>
<g >
<title>task_h_load (94 samples, 0.02%)</title><rect x="1124.1" y="853" width="0.3" height="15.0" fill="rgb(238,107,29)" rx="2" ry="2" />
<text  x="1127.11" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_limit (72 samples, 0.02%)</title><rect x="765.1" y="1029" width="0.2" height="15.0" fill="rgb(226,161,46)" rx="2" ry="2" />
<text  x="768.09" y="1039.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (464 samples, 0.10%)</title><rect x="766.7" y="1061" width="1.2" height="15.0" fill="rgb(235,113,4)" rx="2" ry="2" />
<text  x="769.71" y="1071.5" ></text>
</g>
<g >
<title>generic_fillattr (88 samples, 0.02%)</title><rect x="854.8" y="949" width="0.2" height="15.0" fill="rgb(212,19,15)" rx="2" ry="2" />
<text  x="857.79" y="959.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_dest (65 samples, 0.01%)</title><rect x="331.8" y="437" width="0.1" height="15.0" fill="rgb(227,53,1)" rx="2" ry="2" />
<text  x="334.78" y="447.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (19,358 samples, 4.26%)</title><rect x="918.6" y="965" width="50.3" height="15.0" fill="rgb(213,131,2)" rx="2" ry="2" />
<text  x="921.64" y="975.5" >spdlo..</text>
</g>
<g >
<title>put_cpu_partial (51 samples, 0.01%)</title><rect x="244.6" y="757" width="0.1" height="15.0" fill="rgb(238,152,41)" rx="2" ry="2" />
<text  x="247.57" y="767.5" ></text>
</g>
<g >
<title>[[ext4]] (325 samples, 0.07%)</title><rect x="801.5" y="949" width="0.8" height="15.0" fill="rgb(239,214,27)" rx="2" ry="2" />
<text  x="804.47" y="959.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (127 samples, 0.03%)</title><rect x="140.9" y="1285" width="0.3" height="15.0" fill="rgb(252,218,20)" rx="2" ry="2" />
<text  x="143.85" y="1295.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="923.3" y="837" width="0.3" height="15.0" fill="rgb(221,143,32)" rx="2" ry="2" />
<text  x="926.32" y="847.5" ></text>
</g>
<g >
<title>tcp_fin (335 samples, 0.07%)</title><rect x="183.5" y="469" width="0.9" height="15.0" fill="rgb(220,217,2)" rx="2" ry="2" />
<text  x="186.50" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::~unique_ptr (785 samples, 0.17%)</title><rect x="274.3" y="837" width="2.1" height="15.0" fill="rgb(254,148,50)" rx="2" ry="2" />
<text  x="277.32" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (378 samples, 0.08%)</title><rect x="620.0" y="885" width="1.0" height="15.0" fill="rgb(230,30,9)" rx="2" ry="2" />
<text  x="622.98" y="895.5" ></text>
</g>
<g >
<title>__fget_light (239 samples, 0.05%)</title><rect x="538.3" y="629" width="0.6" height="15.0" fill="rgb(237,78,43)" rx="2" ry="2" />
<text  x="541.31" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (241 samples, 0.05%)</title><rect x="218.9" y="501" width="0.7" height="15.0" fill="rgb(247,127,14)" rx="2" ry="2" />
<text  x="221.93" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (137 samples, 0.03%)</title><rect x="741.5" y="1061" width="0.4" height="15.0" fill="rgb(230,66,1)" rx="2" ry="2" />
<text  x="744.54" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (44 samples, 0.01%)</title><rect x="275.8" y="757" width="0.1" height="15.0" fill="rgb(252,12,39)" rx="2" ry="2" />
<text  x="278.83" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (155 samples, 0.03%)</title><rect x="931.3" y="869" width="0.4" height="15.0" fill="rgb(238,63,33)" rx="2" ry="2" />
<text  x="934.31" y="879.5" ></text>
</g>
<g >
<title>enqueue_entity (412 samples, 0.09%)</title><rect x="1055.6" y="629" width="1.1" height="15.0" fill="rgb(254,32,35)" rx="2" ry="2" />
<text  x="1058.61" y="639.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (220 samples, 0.05%)</title><rect x="250.3" y="805" width="0.6" height="15.0" fill="rgb(225,227,22)" rx="2" ry="2" />
<text  x="253.30" y="815.5" ></text>
</g>
<g >
<title>update_curr (55 samples, 0.01%)</title><rect x="484.6" y="933" width="0.1" height="15.0" fill="rgb(233,112,20)" rx="2" ry="2" />
<text  x="487.59" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (108 samples, 0.02%)</title><rect x="297.3" y="709" width="0.2" height="15.0" fill="rgb(214,107,45)" rx="2" ry="2" />
<text  x="300.25" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (59 samples, 0.01%)</title><rect x="981.6" y="933" width="0.2" height="15.0" fill="rgb(214,129,23)" rx="2" ry="2" />
<text  x="984.61" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_write (7,875 samples, 1.73%)</title><rect x="1042.4" y="869" width="20.4" height="15.0" fill="rgb(253,27,39)" rx="2" ry="2" />
<text  x="1045.38" y="879.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::tuple&lt;webserver::EventLoop*&amp;, std::shared_ptr&lt;webserver::HttpHandler&gt;&amp;, true&gt; (140 samples, 0.03%)</title><rect x="1076.4" y="1061" width="0.3" height="15.0" fill="rgb(225,27,34)" rx="2" ry="2" />
<text  x="1079.36" y="1071.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (232 samples, 0.05%)</title><rect x="701.0" y="901" width="0.6" height="15.0" fill="rgb(215,3,37)" rx="2" ry="2" />
<text  x="704.01" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (76 samples, 0.02%)</title><rect x="923.4" y="805" width="0.2" height="15.0" fill="rgb(224,28,21)" rx="2" ry="2" />
<text  x="926.37" y="815.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (65 samples, 0.01%)</title><rect x="935.2" y="805" width="0.2" height="15.0" fill="rgb(209,177,27)" rx="2" ry="2" />
<text  x="938.22" y="815.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (860 samples, 0.19%)</title><rect x="1035.2" y="949" width="2.2" height="15.0" fill="rgb(238,0,14)" rx="2" ry="2" />
<text  x="1038.16" y="959.5" ></text>
</g>
<g >
<title>bpf_lsm_d_instantiate (54 samples, 0.01%)</title><rect x="1166.2" y="917" width="0.1" height="15.0" fill="rgb(222,125,17)" rx="2" ry="2" />
<text  x="1169.18" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (79 samples, 0.02%)</title><rect x="639.4" y="869" width="0.2" height="15.0" fill="rgb(205,36,29)" rx="2" ry="2" />
<text  x="642.43" y="879.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (75 samples, 0.02%)</title><rect x="277.6" y="821" width="0.2" height="15.0" fill="rgb(227,222,9)" rx="2" ry="2" />
<text  x="280.64" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (95 samples, 0.02%)</title><rect x="257.2" y="869" width="0.3" height="15.0" fill="rgb(226,211,24)" rx="2" ry="2" />
<text  x="260.25" y="879.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,869 samples, 0.63%)</title><rect x="428.7" y="405" width="7.4" height="15.0" fill="rgb(239,74,2)" rx="2" ry="2" />
<text  x="431.68" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (89 samples, 0.02%)</title><rect x="271.9" y="757" width="0.3" height="15.0" fill="rgb(245,10,32)" rx="2" ry="2" />
<text  x="274.93" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;epoll_event, std::allocator&lt;epoll_event&gt; &gt;::operator[] (78 samples, 0.02%)</title><rect x="504.8" y="1093" width="0.2" height="15.0" fill="rgb(225,221,27)" rx="2" ry="2" />
<text  x="507.79" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (63 samples, 0.01%)</title><rect x="1106.8" y="1013" width="0.2" height="15.0" fill="rgb(244,89,43)" rx="2" ry="2" />
<text  x="1109.80" y="1023.5" ></text>
</g>
<g >
<title>_raw_spin_lock (62 samples, 0.01%)</title><rect x="659.0" y="677" width="0.2" height="15.0" fill="rgb(217,142,22)" rx="2" ry="2" />
<text  x="662.04" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,652 samples, 0.58%)</title><rect x="563.1" y="725" width="6.9" height="15.0" fill="rgb(240,120,5)" rx="2" ry="2" />
<text  x="566.12" y="735.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (214 samples, 0.05%)</title><rect x="1152.9" y="949" width="0.6" height="15.0" fill="rgb(222,54,49)" rx="2" ry="2" />
<text  x="1155.94" y="959.5" ></text>
</g>
<g >
<title>kfree (108 samples, 0.02%)</title><rect x="372.1" y="709" width="0.3" height="15.0" fill="rgb(246,95,29)" rx="2" ry="2" />
<text  x="375.09" y="719.5" ></text>
</g>
<g >
<title>tcp_send_fin (483 samples, 0.11%)</title><rect x="1103.8" y="741" width="1.3" height="15.0" fill="rgb(248,67,9)" rx="2" ry="2" />
<text  x="1106.80" y="751.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str_noinline&lt;char, char const*, fmt::v8::appender&gt; (97 samples, 0.02%)</title><rect x="1025.8" y="901" width="0.3" height="15.0" fill="rgb(245,6,50)" rx="2" ry="2" />
<text  x="1028.82" y="911.5" ></text>
</g>
<g >
<title>__slab_free (51 samples, 0.01%)</title><rect x="180.3" y="581" width="0.1" height="15.0" fill="rgb(226,159,29)" rx="2" ry="2" />
<text  x="183.31" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (235 samples, 0.05%)</title><rect x="908.4" y="965" width="0.6" height="15.0" fill="rgb(229,132,42)" rx="2" ry="2" />
<text  x="911.40" y="975.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (75 samples, 0.02%)</title><rect x="529.8" y="725" width="0.1" height="15.0" fill="rgb(223,103,51)" rx="2" ry="2" />
<text  x="532.75" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (50 samples, 0.01%)</title><rect x="981.2" y="933" width="0.1" height="15.0" fill="rgb(220,28,19)" rx="2" ry="2" />
<text  x="984.17" y="943.5" ></text>
</g>
<g >
<title>std::mutex::unlock (821 samples, 0.18%)</title><rect x="1187.1" y="1317" width="2.2" height="15.0" fill="rgb(226,22,29)" rx="2" ry="2" />
<text  x="1190.13" y="1327.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (128 samples, 0.03%)</title><rect x="302.9" y="757" width="0.3" height="15.0" fill="rgb(254,193,33)" rx="2" ry="2" />
<text  x="305.91" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_free (103 samples, 0.02%)</title><rect x="275.4" y="693" width="0.3" height="15.0" fill="rgb(222,195,8)" rx="2" ry="2" />
<text  x="278.45" y="703.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (105 samples, 0.02%)</title><rect x="601.2" y="725" width="0.2" height="15.0" fill="rgb(222,143,36)" rx="2" ry="2" />
<text  x="604.16" y="735.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (51 samples, 0.01%)</title><rect x="450.1" y="725" width="0.2" height="15.0" fill="rgb(210,179,35)" rx="2" ry="2" />
<text  x="453.13" y="735.5" ></text>
</g>
<g >
<title>__GI___mmap64 (10,463 samples, 2.30%)</title><rect x="795.0" y="1061" width="27.2" height="15.0" fill="rgb(225,228,37)" rx="2" ry="2" />
<text  x="797.99" y="1071.5" >_..</text>
</g>
<g >
<title>native_sched_clock (40 samples, 0.01%)</title><rect x="195.0" y="357" width="0.1" height="15.0" fill="rgb(236,89,38)" rx="2" ry="2" />
<text  x="197.96" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (78 samples, 0.02%)</title><rect x="525.7" y="693" width="0.2" height="15.0" fill="rgb(222,12,47)" rx="2" ry="2" />
<text  x="528.65" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (121 samples, 0.03%)</title><rect x="983.3" y="997" width="0.3" height="15.0" fill="rgb(222,46,28)" rx="2" ry="2" />
<text  x="986.29" y="1007.5" ></text>
</g>
<g >
<title>__vm_munmap (8,890 samples, 1.96%)</title><rect x="822.8" y="997" width="23.1" height="15.0" fill="rgb(242,49,1)" rx="2" ry="2" />
<text  x="825.80" y="1007.5" >_..</text>
</g>
<g >
<title>__GI_epoll_ctl (162 samples, 0.04%)</title><rect x="145.4" y="1301" width="0.4" height="15.0" fill="rgb(247,146,27)" rx="2" ry="2" />
<text  x="148.35" y="1311.5" ></text>
</g>
<g >
<title>ip_local_deliver (17,072 samples, 3.76%)</title><rect x="397.2" y="581" width="44.4" height="15.0" fill="rgb(248,84,30)" rx="2" ry="2" />
<text  x="400.21" y="591.5" >ip_l..</text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (62 samples, 0.01%)</title><rect x="500.1" y="1061" width="0.2" height="15.0" fill="rgb(210,8,5)" rx="2" ry="2" />
<text  x="503.10" y="1071.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (5,295 samples, 1.17%)</title><rect x="1088.7" y="693" width="13.8" height="15.0" fill="rgb(207,48,54)" rx="2" ry="2" />
<text  x="1091.74" y="703.5" ></text>
</g>
<g >
<title>__release_sock (2,840 samples, 0.63%)</title><rect x="366.2" y="805" width="7.4" height="15.0" fill="rgb(207,208,29)" rx="2" ry="2" />
<text  x="369.21" y="815.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (67 samples, 0.01%)</title><rect x="706.9" y="725" width="0.2" height="15.0" fill="rgb(243,44,5)" rx="2" ry="2" />
<text  x="709.90" y="735.5" ></text>
</g>
<g >
<title>netlink_has_listeners (98 samples, 0.02%)</title><rect x="214.4" y="389" width="0.3" height="15.0" fill="rgb(230,135,26)" rx="2" ry="2" />
<text  x="217.42" y="399.5" ></text>
</g>
<g >
<title>psi_group_change (143 samples, 0.03%)</title><rect x="1056.7" y="645" width="0.4" height="15.0" fill="rgb(254,1,21)" rx="2" ry="2" />
<text  x="1059.70" y="655.5" ></text>
</g>
<g >
<title>_int_free (60 samples, 0.01%)</title><rect x="1078.3" y="997" width="0.2" height="15.0" fill="rgb(216,144,1)" rx="2" ry="2" />
<text  x="1081.32" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2,535 samples, 0.56%)</title><rect x="269.8" y="901" width="6.6" height="15.0" fill="rgb(216,60,9)" rx="2" ry="2" />
<text  x="272.78" y="911.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (81 samples, 0.02%)</title><rect x="1026.2" y="1013" width="0.2" height="15.0" fill="rgb(252,2,44)" rx="2" ry="2" />
<text  x="1029.20" y="1023.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (191 samples, 0.04%)</title><rect x="53.4" y="1301" width="0.5" height="15.0" fill="rgb(220,3,16)" rx="2" ry="2" />
<text  x="56.43" y="1311.5" ></text>
</g>
<g >
<title>__schedule (1,007 samples, 0.22%)</title><rect x="1131.9" y="917" width="2.6" height="15.0" fill="rgb(220,161,16)" rx="2" ry="2" />
<text  x="1134.90" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_valptr (59 samples, 0.01%)</title><rect x="504.5" y="1045" width="0.1" height="15.0" fill="rgb(244,150,22)" rx="2" ry="2" />
<text  x="507.48" y="1055.5" ></text>
</g>
<g >
<title>_find_next_bit (80 samples, 0.02%)</title><rect x="1147.4" y="965" width="0.2" height="15.0" fill="rgb(226,210,25)" rx="2" ry="2" />
<text  x="1150.44" y="975.5" ></text>
</g>
<g >
<title>tcp_v4_send_reset (48 samples, 0.01%)</title><rect x="439.7" y="517" width="0.2" height="15.0" fill="rgb(237,204,24)" rx="2" ry="2" />
<text  x="442.73" y="527.5" ></text>
</g>
<g >
<title>webserver::EventLoop::update_channel (5,414 samples, 1.19%)</title><rect x="1004.4" y="981" width="14.1" height="15.0" fill="rgb(226,91,41)" rx="2" ry="2" />
<text  x="1007.42" y="991.5" ></text>
</g>
<g >
<title>process_backlog (141 samples, 0.03%)</title><rect x="183.8" y="309" width="0.3" height="15.0" fill="rgb(205,227,27)" rx="2" ry="2" />
<text  x="186.78" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (82 samples, 0.02%)</title><rect x="698.1" y="837" width="0.2" height="15.0" fill="rgb(212,93,35)" rx="2" ry="2" />
<text  x="701.10" y="847.5" ></text>
</g>
<g >
<title>webserver::Channel::dispatch_event (61,880 samples, 13.63%)</title><rect x="1018.7" y="1253" width="160.8" height="15.0" fill="rgb(217,187,33)" rx="2" ry="2" />
<text  x="1021.74" y="1263.5" >webserver::Channel::..</text>
</g>
<g >
<title>std::_Rb_tree_decrement (55 samples, 0.01%)</title><rect x="988.8" y="981" width="0.1" height="15.0" fill="rgb(246,153,18)" rx="2" ry="2" />
<text  x="991.80" y="991.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (121 samples, 0.03%)</title><rect x="62.9" y="1301" width="0.3" height="15.0" fill="rgb(235,207,45)" rx="2" ry="2" />
<text  x="65.92" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (219 samples, 0.05%)</title><rect x="642.2" y="773" width="0.6" height="15.0" fill="rgb(217,168,43)" rx="2" ry="2" />
<text  x="645.23" y="783.5" ></text>
</g>
<g >
<title>enqueue_task_fair (224 samples, 0.05%)</title><rect x="345.5" y="565" width="0.6" height="15.0" fill="rgb(226,31,50)" rx="2" ry="2" />
<text  x="348.51" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (292 samples, 0.06%)</title><rect x="1143.1" y="869" width="0.8" height="15.0" fill="rgb(239,191,41)" rx="2" ry="2" />
<text  x="1146.09" y="879.5" ></text>
</g>
<g >
<title>std::function&lt;void  (472 samples, 0.10%)</title><rect x="168.8" y="869" width="1.3" height="15.0" fill="rgb(220,101,3)" rx="2" ry="2" />
<text  x="171.84" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned int&gt; (57 samples, 0.01%)</title><rect x="360.3" y="837" width="0.1" height="15.0" fill="rgb(211,204,50)" rx="2" ry="2" />
<text  x="363.26" y="847.5" ></text>
</g>
<g >
<title>std::function&lt;void  (407 samples, 0.09%)</title><rect x="610.3" y="869" width="1.1" height="15.0" fill="rgb(209,201,37)" rx="2" ry="2" />
<text  x="613.32" y="879.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (90,126 samples, 19.84%)</title><rect x="228.9" y="997" width="234.1" height="15.0" fill="rgb(250,78,6)" rx="2" ry="2" />
<text  x="231.88" y="1007.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (39 samples, 0.01%)</title><rect x="153.8" y="1301" width="0.1" height="15.0" fill="rgb(230,182,30)" rx="2" ry="2" />
<text  x="156.83" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (356 samples, 0.08%)</title><rect x="757.3" y="1029" width="0.9" height="15.0" fill="rgb(250,122,38)" rx="2" ry="2" />
<text  x="760.28" y="1039.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (356 samples, 0.08%)</title><rect x="406.8" y="453" width="1.0" height="15.0" fill="rgb(227,37,29)" rx="2" ry="2" />
<text  x="409.84" y="463.5" ></text>
</g>
<g >
<title>__fget_light (218 samples, 0.05%)</title><rect x="251.5" y="837" width="0.6" height="15.0" fill="rgb(209,134,50)" rx="2" ry="2" />
<text  x="254.50" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,952 samples, 0.43%)</title><rect x="734.1" y="869" width="5.1" height="15.0" fill="rgb(218,152,46)" rx="2" ry="2" />
<text  x="737.14" y="879.5" ></text>
</g>
<g >
<title>ip_rcv (2,957 samples, 0.65%)</title><rect x="1093.6" y="533" width="7.7" height="15.0" fill="rgb(246,207,32)" rx="2" ry="2" />
<text  x="1096.62" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (65 samples, 0.01%)</title><rect x="639.5" y="837" width="0.1" height="15.0" fill="rgb(212,148,27)" rx="2" ry="2" />
<text  x="642.47" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (546 samples, 0.12%)</title><rect x="990.9" y="1013" width="1.5" height="15.0" fill="rgb(244,135,34)" rx="2" ry="2" />
<text  x="993.94" y="1023.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (178 samples, 0.04%)</title><rect x="603.6" y="821" width="0.5" height="15.0" fill="rgb(240,14,16)" rx="2" ry="2" />
<text  x="606.64" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (80 samples, 0.02%)</title><rect x="1078.7" y="917" width="0.3" height="15.0" fill="rgb(251,219,54)" rx="2" ry="2" />
<text  x="1081.75" y="927.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (82 samples, 0.02%)</title><rect x="65.1" y="1301" width="0.2" height="15.0" fill="rgb(242,94,14)" rx="2" ry="2" />
<text  x="68.08" y="1311.5" ></text>
</g>
<g >
<title>do_futex (1,365 samples, 0.30%)</title><rect x="338.8" y="645" width="3.5" height="15.0" fill="rgb(225,18,26)" rx="2" ry="2" />
<text  x="341.77" y="655.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (119 samples, 0.03%)</title><rect x="1039.3" y="837" width="0.3" height="15.0" fill="rgb(242,98,51)" rx="2" ry="2" />
<text  x="1042.28" y="847.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (243 samples, 0.05%)</title><rect x="244.7" y="757" width="0.6" height="15.0" fill="rgb(227,190,41)" rx="2" ry="2" />
<text  x="247.70" y="767.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (105 samples, 0.02%)</title><rect x="541.5" y="597" width="0.3" height="15.0" fill="rgb(251,15,15)" rx="2" ry="2" />
<text  x="544.49" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (43 samples, 0.01%)</title><rect x="315.2" y="629" width="0.1" height="15.0" fill="rgb(248,81,29)" rx="2" ry="2" />
<text  x="318.18" y="639.5" ></text>
</g>
<g >
<title>netif_rx_internal (125 samples, 0.03%)</title><rect x="193.2" y="373" width="0.4" height="15.0" fill="rgb(240,42,17)" rx="2" ry="2" />
<text  x="196.25" y="383.5" ></text>
</g>
<g >
<title>__mod_timer (57 samples, 0.01%)</title><rect x="1103.2" y="677" width="0.1" height="15.0" fill="rgb(237,159,7)" rx="2" ry="2" />
<text  x="1106.18" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (68 samples, 0.01%)</title><rect x="312.8" y="677" width="0.2" height="15.0" fill="rgb(244,165,50)" rx="2" ry="2" />
<text  x="315.80" y="687.5" ></text>
</g>
<g >
<title>do_futex (1,747 samples, 0.38%)</title><rect x="680.4" y="837" width="4.6" height="15.0" fill="rgb(216,37,27)" rx="2" ry="2" />
<text  x="683.43" y="847.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (279 samples, 0.06%)</title><rect x="991.6" y="965" width="0.7" height="15.0" fill="rgb(251,150,42)" rx="2" ry="2" />
<text  x="994.60" y="975.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,644 samples, 0.58%)</title><rect x="570.3" y="805" width="6.9" height="15.0" fill="rgb(254,179,2)" rx="2" ry="2" />
<text  x="573.34" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (46 samples, 0.01%)</title><rect x="698.2" y="773" width="0.1" height="15.0" fill="rgb(220,93,19)" rx="2" ry="2" />
<text  x="701.18" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (775 samples, 0.17%)</title><rect x="695.6" y="901" width="2.0" height="15.0" fill="rgb(205,9,11)" rx="2" ry="2" />
<text  x="698.62" y="911.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (52 samples, 0.01%)</title><rect x="719.5" y="645" width="0.1" height="15.0" fill="rgb(237,50,17)" rx="2" ry="2" />
<text  x="722.50" y="655.5" ></text>
</g>
<g >
<title>available_idle_cpu (40 samples, 0.01%)</title><rect x="965.6" y="725" width="0.1" height="15.0" fill="rgb(229,162,7)" rx="2" ry="2" />
<text  x="968.64" y="735.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (182 samples, 0.04%)</title><rect x="307.7" y="645" width="0.5" height="15.0" fill="rgb(230,174,46)" rx="2" ry="2" />
<text  x="310.73" y="655.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (546 samples, 0.12%)</title><rect x="805.4" y="933" width="1.4" height="15.0" fill="rgb(234,151,41)" rx="2" ry="2" />
<text  x="808.40" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator* (82 samples, 0.02%)</title><rect x="783.0" y="1029" width="0.2" height="15.0" fill="rgb(218,92,35)" rx="2" ry="2" />
<text  x="785.97" y="1039.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (342 samples, 0.08%)</title><rect x="1109.4" y="885" width="0.9" height="15.0" fill="rgb(243,61,10)" rx="2" ry="2" />
<text  x="1112.43" y="895.5" ></text>
</g>
<g >
<title>operator delete (78 samples, 0.02%)</title><rect x="283.8" y="757" width="0.2" height="15.0" fill="rgb(220,148,36)" rx="2" ry="2" />
<text  x="286.80" y="767.5" ></text>
</g>
<g >
<title>__fget_files (278 samples, 0.06%)</title><rect x="1117.3" y="965" width="0.7" height="15.0" fill="rgb(237,200,9)" rx="2" ry="2" />
<text  x="1120.31" y="975.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (77 samples, 0.02%)</title><rect x="289.3" y="773" width="0.2" height="15.0" fill="rgb(245,4,44)" rx="2" ry="2" />
<text  x="292.25" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (42 samples, 0.01%)</title><rect x="732.1" y="693" width="0.1" height="15.0" fill="rgb(222,104,15)" rx="2" ry="2" />
<text  x="735.11" y="703.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (161 samples, 0.04%)</title><rect x="280.7" y="837" width="0.4" height="15.0" fill="rgb(225,41,42)" rx="2" ry="2" />
<text  x="283.65" y="847.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,641 samples, 0.58%)</title><rect x="366.7" y="773" width="6.9" height="15.0" fill="rgb(220,227,11)" rx="2" ry="2" />
<text  x="369.70" y="783.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (63 samples, 0.01%)</title><rect x="927.3" y="757" width="0.2" height="15.0" fill="rgb(225,152,47)" rx="2" ry="2" />
<text  x="930.33" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (251 samples, 0.06%)</title><rect x="711.3" y="693" width="0.6" height="15.0" fill="rgb(210,42,37)" rx="2" ry="2" />
<text  x="714.28" y="703.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (243 samples, 0.05%)</title><rect x="913.2" y="1045" width="0.7" height="15.0" fill="rgb(245,44,9)" rx="2" ry="2" />
<text  x="916.24" y="1055.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl&lt;std::shared_ptr&lt;webserver::HttpHandler&gt;&amp;&gt; (88 samples, 0.02%)</title><rect x="1076.5" y="1029" width="0.2" height="15.0" fill="rgb(210,7,30)" rx="2" ry="2" />
<text  x="1079.47" y="1039.5" ></text>
</g>
<g >
<title>syscall_exit_work (117 samples, 0.03%)</title><rect x="869.1" y="997" width="0.3" height="15.0" fill="rgb(250,93,44)" rx="2" ry="2" />
<text  x="872.07" y="1007.5" ></text>
</g>
<g >
<title>check_preempt_wakeup (43 samples, 0.01%)</title><rect x="684.7" y="741" width="0.1" height="15.0" fill="rgb(205,50,9)" rx="2" ry="2" />
<text  x="687.65" y="751.5" ></text>
</g>
<g >
<title>switch_fpu_return (63 samples, 0.01%)</title><rect x="1068.6" y="821" width="0.2" height="15.0" fill="rgb(210,91,6)" rx="2" ry="2" />
<text  x="1071.61" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,644 samples, 0.58%)</title><rect x="718.9" y="677" width="6.8" height="15.0" fill="rgb(249,226,19)" rx="2" ry="2" />
<text  x="721.86" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (439 samples, 0.10%)</title><rect x="1180.1" y="1317" width="1.1" height="15.0" fill="rgb(239,24,1)" rx="2" ry="2" />
<text  x="1183.07" y="1327.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt; &gt;::allocate (335 samples, 0.07%)</title><rect x="588.5" y="773" width="0.9" height="15.0" fill="rgb(253,161,2)" rx="2" ry="2" />
<text  x="591.55" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (37,778 samples, 8.32%)</title><rect x="363.9" y="901" width="98.2" height="15.0" fill="rgb(226,10,52)" rx="2" ry="2" />
<text  x="366.90" y="911.5" >do_syscall_64</text>
</g>
<g >
<title>_int_malloc (90 samples, 0.02%)</title><rect x="1019.7" y="1061" width="0.2" height="15.0" fill="rgb(224,206,5)" rx="2" ry="2" />
<text  x="1022.71" y="1071.5" ></text>
</g>
<g >
<title>release_sock (102 samples, 0.02%)</title><rect x="752.3" y="933" width="0.3" height="15.0" fill="rgb(208,19,0)" rx="2" ry="2" />
<text  x="755.30" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::deallocate (60 samples, 0.01%)</title><rect x="1107.7" y="917" width="0.1" height="15.0" fill="rgb(234,213,42)" rx="2" ry="2" />
<text  x="1110.69" y="927.5" ></text>
</g>
<g >
<title>native_write_msr (76 samples, 0.02%)</title><rect x="1132.6" y="869" width="0.2" height="15.0" fill="rgb(244,220,0)" rx="2" ry="2" />
<text  x="1135.59" y="879.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_channel (256 samples, 0.06%)</title><rect x="140.5" y="1301" width="0.7" height="15.0" fill="rgb(241,126,15)" rx="2" ry="2" />
<text  x="143.52" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (102 samples, 0.02%)</title><rect x="645.9" y="901" width="0.3" height="15.0" fill="rgb(209,184,14)" rx="2" ry="2" />
<text  x="648.90" y="911.5" ></text>
</g>
<g >
<title>__legitimize_path (76 samples, 0.02%)</title><rect x="881.2" y="917" width="0.2" height="15.0" fill="rgb(247,195,49)" rx="2" ry="2" />
<text  x="884.15" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (79 samples, 0.02%)</title><rect x="46.3" y="1301" width="0.2" height="15.0" fill="rgb(226,16,42)" rx="2" ry="2" />
<text  x="49.33" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad6&lt;unsigned long&gt; (642 samples, 0.14%)</title><rect x="529.6" y="773" width="1.7" height="15.0" fill="rgb(251,149,43)" rx="2" ry="2" />
<text  x="532.60" y="783.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (42 samples, 0.01%)</title><rect x="262.4" y="805" width="0.1" height="15.0" fill="rgb(235,157,31)" rx="2" ry="2" />
<text  x="265.43" y="815.5" ></text>
</g>
<g >
<title>psi_group_change (196 samples, 0.04%)</title><rect x="1073.0" y="741" width="0.5" height="15.0" fill="rgb(248,69,32)" rx="2" ry="2" />
<text  x="1076.04" y="751.5" ></text>
</g>
<g >
<title>dput (52 samples, 0.01%)</title><rect x="864.1" y="965" width="0.1" height="15.0" fill="rgb(251,156,53)" rx="2" ry="2" />
<text  x="867.09" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::HttpHandler,  (52 samples, 0.01%)</title><rect x="578.4" y="917" width="0.2" height="15.0" fill="rgb(234,108,10)" rx="2" ry="2" />
<text  x="581.42" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (52 samples, 0.01%)</title><rect x="924.2" y="869" width="0.1" height="15.0" fill="rgb(228,97,3)" rx="2" ry="2" />
<text  x="927.19" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (57 samples, 0.01%)</title><rect x="646.0" y="821" width="0.1" height="15.0" fill="rgb(220,41,42)" rx="2" ry="2" />
<text  x="648.99" y="831.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (18,228 samples, 4.01%)</title><rect x="1027.7" y="981" width="47.4" height="15.0" fill="rgb(242,151,47)" rx="2" ry="2" />
<text  x="1030.70" y="991.5" >spdl..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (41 samples, 0.01%)</title><rect x="1008.7" y="853" width="0.1" height="15.0" fill="rgb(237,216,10)" rx="2" ry="2" />
<text  x="1011.73" y="863.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (65 samples, 0.01%)</title><rect x="1176.8" y="997" width="0.2" height="15.0" fill="rgb(213,223,4)" rx="2" ry="2" />
<text  x="1179.81" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (50 samples, 0.01%)</title><rect x="529.8" y="661" width="0.1" height="15.0" fill="rgb(224,190,38)" rx="2" ry="2" />
<text  x="532.82" y="671.5" ></text>
</g>
<g >
<title>___slab_alloc (167 samples, 0.04%)</title><rect x="878.7" y="885" width="0.5" height="15.0" fill="rgb(238,155,16)" rx="2" ry="2" />
<text  x="881.73" y="895.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (148 samples, 0.03%)</title><rect x="647.8" y="853" width="0.3" height="15.0" fill="rgb(254,208,5)" rx="2" ry="2" />
<text  x="650.76" y="863.5" ></text>
</g>
<g >
<title>do_softirq (355 samples, 0.08%)</title><rect x="1086.2" y="581" width="0.9" height="15.0" fill="rgb(219,151,52)" rx="2" ry="2" />
<text  x="1089.17" y="591.5" ></text>
</g>
<g >
<title>inet_recvmsg (4,317 samples, 0.95%)</title><rect x="239.7" y="853" width="11.2" height="15.0" fill="rgb(248,35,37)" rx="2" ry="2" />
<text  x="242.66" y="863.5" ></text>
</g>
<g >
<title>vma_set_page_prot (58 samples, 0.01%)</title><rect x="817.6" y="949" width="0.2" height="15.0" fill="rgb(250,54,6)" rx="2" ry="2" />
<text  x="820.60" y="959.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1,606 samples, 0.35%)</title><rect x="964.1" y="869" width="4.1" height="15.0" fill="rgb(236,198,48)" rx="2" ry="2" />
<text  x="967.05" y="879.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (129 samples, 0.03%)</title><rect x="678.7" y="821" width="0.3" height="15.0" fill="rgb(251,80,47)" rx="2" ry="2" />
<text  x="681.71" y="831.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (164 samples, 0.04%)</title><rect x="1164.9" y="901" width="0.4" height="15.0" fill="rgb(241,120,45)" rx="2" ry="2" />
<text  x="1167.89" y="911.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (81 samples, 0.02%)</title><rect x="11.9" y="1301" width="0.2" height="15.0" fill="rgb(232,134,9)" rx="2" ry="2" />
<text  x="14.91" y="1311.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (54 samples, 0.01%)</title><rect x="170.6" y="789" width="0.1" height="15.0" fill="rgb(243,97,52)" rx="2" ry="2" />
<text  x="173.57" y="799.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (39 samples, 0.01%)</title><rect x="220.6" y="533" width="0.1" height="15.0" fill="rgb(233,111,9)" rx="2" ry="2" />
<text  x="223.58" y="543.5" ></text>
</g>
<g >
<title>enqueue_entity (193 samples, 0.04%)</title><rect x="736.5" y="725" width="0.6" height="15.0" fill="rgb(248,131,31)" rx="2" ry="2" />
<text  x="739.55" y="735.5" ></text>
</g>
<g >
<title>__fget_light (336 samples, 0.07%)</title><rect x="469.5" y="1013" width="0.8" height="15.0" fill="rgb(238,163,18)" rx="2" ry="2" />
<text  x="472.48" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (57 samples, 0.01%)</title><rect x="525.7" y="661" width="0.1" height="15.0" fill="rgb(244,120,44)" rx="2" ry="2" />
<text  x="528.69" y="671.5" ></text>
</g>
<g >
<title>ip_local_out (818 samples, 0.18%)</title><rect x="1089.0" y="677" width="2.2" height="15.0" fill="rgb(206,181,41)" rx="2" ry="2" />
<text  x="1092.03" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (664 samples, 0.15%)</title><rect x="986.6" y="949" width="1.8" height="15.0" fill="rgb(208,97,12)" rx="2" ry="2" />
<text  x="989.64" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (422 samples, 0.09%)</title><rect x="108.0" y="1301" width="1.1" height="15.0" fill="rgb(217,32,36)" rx="2" ry="2" />
<text  x="111.04" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (88 samples, 0.02%)</title><rect x="525.6" y="725" width="0.3" height="15.0" fill="rgb(209,95,2)" rx="2" ry="2" />
<text  x="528.63" y="735.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (114 samples, 0.03%)</title><rect x="154.2" y="1301" width="0.3" height="15.0" fill="rgb(219,156,15)" rx="2" ry="2" />
<text  x="157.18" y="1311.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (84 samples, 0.02%)</title><rect x="439.5" y="517" width="0.2" height="15.0" fill="rgb(248,16,44)" rx="2" ry="2" />
<text  x="442.47" y="527.5" ></text>
</g>
<g >
<title>ktime_get (54 samples, 0.01%)</title><rect x="438.7" y="469" width="0.1" height="15.0" fill="rgb(230,35,34)" rx="2" ry="2" />
<text  x="441.67" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (132 samples, 0.03%)</title><rect x="271.5" y="709" width="0.4" height="15.0" fill="rgb(228,192,1)" rx="2" ry="2" />
<text  x="274.54" y="719.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (63 samples, 0.01%)</title><rect x="698.1" y="789" width="0.2" height="15.0" fill="rgb(209,196,6)" rx="2" ry="2" />
<text  x="701.15" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::operator++ (39 samples, 0.01%)</title><rect x="160.2" y="1109" width="0.1" height="15.0" fill="rgb(217,81,37)" rx="2" ry="2" />
<text  x="163.24" y="1119.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::deallocate (123 samples, 0.03%)</title><rect x="349.7" y="805" width="0.3" height="15.0" fill="rgb(210,106,52)" rx="2" ry="2" />
<text  x="352.68" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (284 samples, 0.06%)</title><rect x="1086.3" y="453" width="0.7" height="15.0" fill="rgb(228,141,39)" rx="2" ry="2" />
<text  x="1089.27" y="463.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (58 samples, 0.01%)</title><rect x="820.9" y="981" width="0.2" height="15.0" fill="rgb(213,46,28)" rx="2" ry="2" />
<text  x="823.95" y="991.5" ></text>
</g>
<g >
<title>_find_next_bit (108 samples, 0.02%)</title><rect x="876.1" y="965" width="0.2" height="15.0" fill="rgb(233,78,35)" rx="2" ry="2" />
<text  x="879.05" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (547 samples, 0.12%)</title><rect x="507.2" y="997" width="1.4" height="15.0" fill="rgb(253,112,8)" rx="2" ry="2" />
<text  x="510.18" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (162 samples, 0.04%)</title><rect x="932.8" y="853" width="0.4" height="15.0" fill="rgb(217,204,50)" rx="2" ry="2" />
<text  x="935.76" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,489 samples, 0.55%)</title><rect x="898.1" y="885" width="6.5" height="15.0" fill="rgb(228,17,7)" rx="2" ry="2" />
<text  x="901.11" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (264 samples, 0.06%)</title><rect x="359.3" y="837" width="0.7" height="15.0" fill="rgb(210,142,3)" rx="2" ry="2" />
<text  x="362.27" y="847.5" ></text>
</g>
<g >
<title>timerqueue_del (290 samples, 0.06%)</title><rect x="479.8" y="965" width="0.7" height="15.0" fill="rgb(214,16,28)" rx="2" ry="2" />
<text  x="482.76" y="975.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, webserver::HttpConnection*, false&gt;::_Head_base&lt;webserver::HttpConnection*&gt; (41 samples, 0.01%)</title><rect x="605.6" y="837" width="0.1" height="15.0" fill="rgb(219,49,25)" rx="2" ry="2" />
<text  x="608.60" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpManager, std::default_delete&lt;webserver::HttpManager&gt; &gt;::get (40 samples, 0.01%)</title><rect x="135.7" y="1301" width="0.1" height="15.0" fill="rgb(244,82,25)" rx="2" ry="2" />
<text  x="138.70" y="1311.5" ></text>
</g>
<g >
<title>add_wait_queue (43 samples, 0.01%)</title><rect x="656.1" y="725" width="0.2" height="15.0" fill="rgb(208,169,32)" rx="2" ry="2" />
<text  x="659.14" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (225 samples, 0.05%)</title><rect x="607.0" y="853" width="0.6" height="15.0" fill="rgb(252,29,6)" rx="2" ry="2" />
<text  x="610.04" y="863.5" ></text>
</g>
<g >
<title>update_load_avg (63 samples, 0.01%)</title><rect x="960.0" y="677" width="0.2" height="15.0" fill="rgb(209,44,51)" rx="2" ry="2" />
<text  x="963.00" y="687.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,465 samples, 0.54%)</title><rect x="957.4" y="901" width="6.4" height="15.0" fill="rgb(237,155,38)" rx="2" ry="2" />
<text  x="960.41" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (242 samples, 0.05%)</title><rect x="587.5" y="789" width="0.6" height="15.0" fill="rgb(248,42,44)" rx="2" ry="2" />
<text  x="590.50" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,359 samples, 0.30%)</title><rect x="343.8" y="709" width="3.5" height="15.0" fill="rgb(241,204,23)" rx="2" ry="2" />
<text  x="346.81" y="719.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (324 samples, 0.07%)</title><rect x="149.9" y="1301" width="0.9" height="15.0" fill="rgb(209,149,30)" rx="2" ry="2" />
<text  x="152.93" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (223 samples, 0.05%)</title><rect x="983.1" y="1029" width="0.6" height="15.0" fill="rgb(241,66,35)" rx="2" ry="2" />
<text  x="986.08" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::function&lt;void  (50 samples, 0.01%)</title><rect x="38.1" y="1301" width="0.1" height="15.0" fill="rgb(227,165,45)" rx="2" ry="2" />
<text  x="41.09" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (80 samples, 0.02%)</title><rect x="694.5" y="869" width="0.2" height="15.0" fill="rgb(248,218,20)" rx="2" ry="2" />
<text  x="697.50" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (286 samples, 0.06%)</title><rect x="609.0" y="789" width="0.8" height="15.0" fill="rgb(248,124,35)" rx="2" ry="2" />
<text  x="612.04" y="799.5" ></text>
</g>
<g >
<title>do_sys_openat2 (6,069 samples, 1.34%)</title><rect x="875.1" y="997" width="15.8" height="15.0" fill="rgb(208,191,48)" rx="2" ry="2" />
<text  x="878.10" y="1007.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (391 samples, 0.09%)</title><rect x="971.6" y="981" width="1.0" height="15.0" fill="rgb(238,32,31)" rx="2" ry="2" />
<text  x="974.61" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (687 samples, 0.15%)</title><rect x="1060.5" y="821" width="1.8" height="15.0" fill="rgb(226,15,19)" rx="2" ry="2" />
<text  x="1063.55" y="831.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (104 samples, 0.02%)</title><rect x="959.2" y="709" width="0.3" height="15.0" fill="rgb(227,116,36)" rx="2" ry="2" />
<text  x="962.20" y="719.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (162 samples, 0.04%)</title><rect x="437.9" y="469" width="0.4" height="15.0" fill="rgb(245,225,41)" rx="2" ry="2" />
<text  x="440.91" y="479.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,009 samples, 0.22%)</title><rect x="328.7" y="485" width="2.6" height="15.0" fill="rgb(243,177,49)" rx="2" ry="2" />
<text  x="331.72" y="495.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (29,584 samples, 6.51%)</title><rect x="374.9" y="805" width="76.9" height="15.0" fill="rgb(243,14,50)" rx="2" ry="2" />
<text  x="377.92" y="815.5" >__tcp_pu..</text>
</g>
<g >
<title>try_to_wake_up (70 samples, 0.02%)</title><rect x="1049.4" y="677" width="0.2" height="15.0" fill="rgb(213,225,20)" rx="2" ry="2" />
<text  x="1052.37" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (804 samples, 0.18%)</title><rect x="1085.5" y="725" width="2.1" height="15.0" fill="rgb(229,185,3)" rx="2" ry="2" />
<text  x="1088.50" y="735.5" ></text>
</g>
<g >
<title>spdlog::details::backtracer::enabled (74 samples, 0.02%)</title><rect x="162.0" y="1029" width="0.1" height="15.0" fill="rgb(219,61,48)" rx="2" ry="2" />
<text  x="164.95" y="1039.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (44 samples, 0.01%)</title><rect x="436.8" y="357" width="0.1" height="15.0" fill="rgb(244,146,26)" rx="2" ry="2" />
<text  x="439.80" y="367.5" ></text>
</g>
<g >
<title>tcp_send_mss (458 samples, 0.10%)</title><rect x="458.1" y="805" width="1.2" height="15.0" fill="rgb(219,72,45)" rx="2" ry="2" />
<text  x="461.10" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;webserver::Channel, void&gt; (102 samples, 0.02%)</title><rect x="260.4" y="901" width="0.3" height="15.0" fill="rgb(234,52,52)" rx="2" ry="2" />
<text  x="263.41" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::get (116 samples, 0.03%)</title><rect x="134.2" y="1301" width="0.3" height="15.0" fill="rgb(251,106,43)" rx="2" ry="2" />
<text  x="137.23" y="1311.5" ></text>
</g>
<g >
<title>new_do_write (7,744 samples, 1.71%)</title><rect x="650.7" y="885" width="20.1" height="15.0" fill="rgb(213,40,53)" rx="2" ry="2" />
<text  x="653.70" y="895.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (172 samples, 0.04%)</title><rect x="703.0" y="885" width="0.5" height="15.0" fill="rgb(254,76,36)" rx="2" ry="2" />
<text  x="706.00" y="895.5" ></text>
</g>
<g >
<title>ip_output (22,835 samples, 5.03%)</title><rect x="387.4" y="741" width="59.3" height="15.0" fill="rgb(221,202,26)" rx="2" ry="2" />
<text  x="390.36" y="751.5" >ip_out..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check (52 samples, 0.01%)</title><rect x="762.6" y="1045" width="0.2" height="15.0" fill="rgb(220,21,50)" rx="2" ry="2" />
<text  x="765.63" y="1055.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (42 samples, 0.01%)</title><rect x="1087.2" y="661" width="0.1" height="15.0" fill="rgb(206,110,20)" rx="2" ry="2" />
<text  x="1090.17" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;std::shared_ptr&lt;webserver::TcpSocket&gt;&amp;&gt; (44 samples, 0.01%)</title><rect x="29.9" y="1301" width="0.1" height="15.0" fill="rgb(236,22,1)" rx="2" ry="2" />
<text  x="32.88" y="1311.5" ></text>
</g>
<g >
<title>process_echoes (74 samples, 0.02%)</title><rect x="323.0" y="549" width="0.2" height="15.0" fill="rgb(239,210,24)" rx="2" ry="2" />
<text  x="326.05" y="559.5" ></text>
</g>
<g >
<title>set_root (117 samples, 0.03%)</title><rect x="862.9" y="917" width="0.3" height="15.0" fill="rgb(232,133,16)" rx="2" ry="2" />
<text  x="865.87" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (47 samples, 0.01%)</title><rect x="1170.9" y="1029" width="0.1" height="15.0" fill="rgb(231,116,21)" rx="2" ry="2" />
<text  x="1173.87" y="1039.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (155 samples, 0.03%)</title><rect x="786.1" y="1045" width="0.4" height="15.0" fill="rgb(226,52,16)" rx="2" ry="2" />
<text  x="789.12" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (192 samples, 0.04%)</title><rect x="701.7" y="917" width="0.5" height="15.0" fill="rgb(228,137,4)" rx="2" ry="2" />
<text  x="704.71" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_lock (130 samples, 0.03%)</title><rect x="681.4" y="757" width="0.4" height="15.0" fill="rgb(230,218,4)" rx="2" ry="2" />
<text  x="684.43" y="767.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (19,952 samples, 4.39%)</title><rect x="170.1" y="837" width="51.8" height="15.0" fill="rgb(228,52,17)" rx="2" ry="2" />
<text  x="173.10" y="847.5" >std::..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (70 samples, 0.02%)</title><rect x="933.0" y="821" width="0.2" height="15.0" fill="rgb(236,104,54)" rx="2" ry="2" />
<text  x="935.99" y="831.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (51 samples, 0.01%)</title><rect x="219.3" y="485" width="0.1" height="15.0" fill="rgb(217,166,22)" rx="2" ry="2" />
<text  x="222.26" y="495.5" ></text>
</g>
<g >
<title>tcp_options_write (53 samples, 0.01%)</title><rect x="215.4" y="485" width="0.2" height="15.0" fill="rgb(234,138,13)" rx="2" ry="2" />
<text  x="218.45" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (45 samples, 0.01%)</title><rect x="1076.6" y="981" width="0.1" height="15.0" fill="rgb(241,70,17)" rx="2" ry="2" />
<text  x="1079.57" y="991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (64 samples, 0.01%)</title><rect x="342.7" y="645" width="0.2" height="15.0" fill="rgb(246,68,48)" rx="2" ry="2" />
<text  x="345.71" y="655.5" ></text>
</g>
<g >
<title>psi_task_change (607 samples, 0.13%)</title><rect x="207.6" y="85" width="1.6" height="15.0" fill="rgb(238,218,12)" rx="2" ry="2" />
<text  x="210.58" y="95.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (145 samples, 0.03%)</title><rect x="190.6" y="389" width="0.3" height="15.0" fill="rgb(210,65,16)" rx="2" ry="2" />
<text  x="193.55" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::formatter, std::default_delete&lt;spdlog::formatter&gt; &gt;::operator (78 samples, 0.02%)</title><rect x="1074.8" y="965" width="0.2" height="15.0" fill="rgb(248,51,2)" rx="2" ry="2" />
<text  x="1077.85" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (966 samples, 0.21%)</title><rect x="278.1" y="837" width="2.6" height="15.0" fill="rgb(250,186,31)" rx="2" ry="2" />
<text  x="281.14" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (442 samples, 0.10%)</title><rect x="643.6" y="885" width="1.2" height="15.0" fill="rgb(212,167,50)" rx="2" ry="2" />
<text  x="646.62" y="895.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (179 samples, 0.04%)</title><rect x="582.7" y="837" width="0.5" height="15.0" fill="rgb(226,42,42)" rx="2" ry="2" />
<text  x="585.69" y="847.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (81 samples, 0.02%)</title><rect x="520.3" y="789" width="0.2" height="15.0" fill="rgb(223,51,37)" rx="2" ry="2" />
<text  x="523.28" y="799.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (203 samples, 0.04%)</title><rect x="925.9" y="741" width="0.5" height="15.0" fill="rgb(249,73,29)" rx="2" ry="2" />
<text  x="928.89" y="751.5" ></text>
</g>
<g >
<title>spdlog::logger::should_log (237 samples, 0.05%)</title><rect x="64.2" y="1301" width="0.7" height="15.0" fill="rgb(250,4,24)" rx="2" ry="2" />
<text  x="67.24" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str@plt (68 samples, 0.01%)</title><rect x="982.0" y="1045" width="0.2" height="15.0" fill="rgb(217,191,5)" rx="2" ry="2" />
<text  x="985.05" y="1055.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (41 samples, 0.01%)</title><rect x="254.9" y="869" width="0.1" height="15.0" fill="rgb(233,125,52)" rx="2" ry="2" />
<text  x="257.89" y="879.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (365 samples, 0.08%)</title><rect x="689.4" y="949" width="0.9" height="15.0" fill="rgb(215,25,40)" rx="2" ry="2" />
<text  x="692.35" y="959.5" ></text>
</g>
<g >
<title>preempt_schedule (40 samples, 0.01%)</title><rect x="656.0" y="693" width="0.1" height="15.0" fill="rgb(241,129,43)" rx="2" ry="2" />
<text  x="659.04" y="703.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (563 samples, 0.12%)</title><rect x="305.3" y="677" width="1.4" height="15.0" fill="rgb(208,186,17)" rx="2" ry="2" />
<text  x="308.27" y="687.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (39 samples, 0.01%)</title><rect x="576.8" y="677" width="0.1" height="15.0" fill="rgb(223,197,24)" rx="2" ry="2" />
<text  x="579.78" y="687.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (183 samples, 0.04%)</title><rect x="249.8" y="805" width="0.5" height="15.0" fill="rgb(232,105,23)" rx="2" ry="2" />
<text  x="252.83" y="815.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (9,381 samples, 2.07%)</title><rect x="313.3" y="757" width="24.3" height="15.0" fill="rgb(254,50,1)" rx="2" ry="2" />
<text  x="316.26" y="767.5" >_..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,254 samples, 2.04%)</title><rect x="1081.4" y="869" width="24.0" height="15.0" fill="rgb(211,38,5)" rx="2" ry="2" />
<text  x="1084.37" y="879.5" >e..</text>
</g>
<g >
<title>pty_write (4,104 samples, 0.90%)</title><rect x="547.0" y="581" width="10.7" height="15.0" fill="rgb(225,160,3)" rx="2" ry="2" />
<text  x="550.01" y="591.5" ></text>
</g>
<g >
<title>sync_mm_rss (121 samples, 0.03%)</title><rect x="844.0" y="917" width="0.3" height="15.0" fill="rgb(221,143,47)" rx="2" ry="2" />
<text  x="847.01" y="927.5" ></text>
</g>
<g >
<title>pick_next_task_fair (141 samples, 0.03%)</title><rect x="566.5" y="597" width="0.3" height="15.0" fill="rgb(232,130,34)" rx="2" ry="2" />
<text  x="569.48" y="607.5" ></text>
</g>
<g >
<title>loopback_xmit (368 samples, 0.08%)</title><rect x="192.9" y="405" width="0.9" height="15.0" fill="rgb(250,96,5)" rx="2" ry="2" />
<text  x="195.86" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (42 samples, 0.01%)</title><rect x="742.8" y="1061" width="0.1" height="15.0" fill="rgb(205,183,42)" rx="2" ry="2" />
<text  x="745.82" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (74 samples, 0.02%)</title><rect x="95.7" y="1301" width="0.2" height="15.0" fill="rgb(219,151,37)" rx="2" ry="2" />
<text  x="98.74" y="1311.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (7,935 samples, 1.75%)</title><rect x="650.4" y="917" width="20.6" height="15.0" fill="rgb(224,156,53)" rx="2" ry="2" />
<text  x="653.38" y="927.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (1,005 samples, 0.22%)</title><rect x="774.4" y="933" width="2.7" height="15.0" fill="rgb(232,159,36)" rx="2" ry="2" />
<text  x="777.45" y="943.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (342 samples, 0.08%)</title><rect x="608.9" y="837" width="0.9" height="15.0" fill="rgb(246,91,52)" rx="2" ry="2" />
<text  x="611.93" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::Channel&gt; &gt;::destroy&lt;webserver::Channel&gt; (233 samples, 0.05%)</title><rect x="1109.7" y="869" width="0.6" height="15.0" fill="rgb(220,228,50)" rx="2" ry="2" />
<text  x="1112.71" y="879.5" ></text>
</g>
<g >
<title>__virt_addr_valid (75 samples, 0.02%)</title><rect x="456.3" y="773" width="0.2" height="15.0" fill="rgb(244,227,26)" rx="2" ry="2" />
<text  x="459.29" y="783.5" ></text>
</g>
<g >
<title>pick_next_task_fair (105 samples, 0.02%)</title><rect x="340.7" y="565" width="0.3" height="15.0" fill="rgb(207,98,41)" rx="2" ry="2" />
<text  x="343.74" y="575.5" ></text>
</g>
<g >
<title>spdlog::logger::log (65 samples, 0.01%)</title><rect x="269.4" y="869" width="0.2" height="15.0" fill="rgb(238,138,47)" rx="2" ry="2" />
<text  x="272.40" y="879.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (51 samples, 0.01%)</title><rect x="1172.1" y="1013" width="0.1" height="15.0" fill="rgb(247,53,43)" rx="2" ry="2" />
<text  x="1175.11" y="1023.5" ></text>
</g>
<g >
<title>__fget_files (99 samples, 0.02%)</title><rect x="705.1" y="757" width="0.3" height="15.0" fill="rgb(207,44,10)" rx="2" ry="2" />
<text  x="708.13" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (126 samples, 0.03%)</title><rect x="783.3" y="997" width="0.3" height="15.0" fill="rgb(248,58,35)" rx="2" ry="2" />
<text  x="786.32" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;int&gt;, true&gt;::_M_cget (88 samples, 0.02%)</title><rect x="98.4" y="1301" width="0.2" height="15.0" fill="rgb(237,61,14)" rx="2" ry="2" />
<text  x="101.38" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_signed&lt;int&gt; (110 samples, 0.02%)</title><rect x="923.6" y="853" width="0.3" height="15.0" fill="rgb(227,170,46)" rx="2" ry="2" />
<text  x="926.62" y="863.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (829 samples, 0.18%)</title><rect x="459.8" y="885" width="2.2" height="15.0" fill="rgb(216,136,14)" rx="2" ry="2" />
<text  x="462.81" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (153 samples, 0.03%)</title><rect x="90.0" y="1301" width="0.4" height="15.0" fill="rgb(237,115,40)" rx="2" ry="2" />
<text  x="93.03" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (66 samples, 0.01%)</title><rect x="643.8" y="821" width="0.1" height="15.0" fill="rgb(206,21,48)" rx="2" ry="2" />
<text  x="646.77" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (113 samples, 0.02%)</title><rect x="581.0" y="837" width="0.2" height="15.0" fill="rgb(233,62,32)" rx="2" ry="2" />
<text  x="583.95" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_free (149 samples, 0.03%)</title><rect x="170.8" y="725" width="0.4" height="15.0" fill="rgb(223,33,42)" rx="2" ry="2" />
<text  x="173.84" y="735.5" ></text>
</g>
<g >
<title>spdlog::details::Y_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (356 samples, 0.08%)</title><rect x="303.2" y="757" width="1.0" height="15.0" fill="rgb(227,56,6)" rx="2" ry="2" />
<text  x="306.24" y="767.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_dest (57 samples, 0.01%)</title><rect x="665.9" y="613" width="0.1" height="15.0" fill="rgb(210,33,35)" rx="2" ry="2" />
<text  x="668.88" y="623.5" ></text>
</g>
<g >
<title>_copy_to_iter (156 samples, 0.03%)</title><rect x="232.4" y="837" width="0.4" height="15.0" fill="rgb(245,108,37)" rx="2" ry="2" />
<text  x="235.42" y="847.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_head (195 samples, 0.04%)</title><rect x="77.3" y="1301" width="0.5" height="15.0" fill="rgb(252,216,13)" rx="2" ry="2" />
<text  x="80.28" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (61 samples, 0.01%)</title><rect x="62.0" y="1301" width="0.2" height="15.0" fill="rgb(213,32,29)" rx="2" ry="2" />
<text  x="65.01" y="1311.5" ></text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (77 samples, 0.02%)</title><rect x="678.8" y="789" width="0.2" height="15.0" fill="rgb(232,75,50)" rx="2" ry="2" />
<text  x="681.84" y="799.5" ></text>
</g>
<g >
<title>ep_poll_callback (4,372 samples, 0.96%)</title><rect x="1119.5" y="949" width="11.3" height="15.0" fill="rgb(214,55,50)" rx="2" ry="2" />
<text  x="1122.49" y="959.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::function&lt;void  (424 samples, 0.09%)</title><rect x="1113.8" y="1029" width="1.1" height="15.0" fill="rgb(233,31,51)" rx="2" ry="2" />
<text  x="1116.76" y="1039.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (122 samples, 0.03%)</title><rect x="490.7" y="997" width="0.3" height="15.0" fill="rgb(210,82,1)" rx="2" ry="2" />
<text  x="493.72" y="1007.5" ></text>
</g>
<g >
<title>spdlog::details::m_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (65 samples, 0.01%)</title><rect x="700.4" y="933" width="0.2" height="15.0" fill="rgb(205,14,35)" rx="2" ry="2" />
<text  x="703.38" y="943.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, spdlog::details::flag_formatter*, false&gt;::_M_head (50 samples, 0.01%)</title><rect x="20.5" y="1301" width="0.1" height="15.0" fill="rgb(209,211,54)" rx="2" ry="2" />
<text  x="23.46" y="1311.5" ></text>
</g>
<g >
<title>security_socket_accept (99 samples, 0.02%)</title><rect x="1155.8" y="981" width="0.2" height="15.0" fill="rgb(219,108,50)" rx="2" ry="2" />
<text  x="1158.77" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (174 samples, 0.04%)</title><rect x="256.7" y="821" width="0.4" height="15.0" fill="rgb(222,58,18)" rx="2" ry="2" />
<text  x="259.67" y="831.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (215 samples, 0.05%)</title><rect x="390.6" y="629" width="0.6" height="15.0" fill="rgb(210,126,43)" rx="2" ry="2" />
<text  x="393.63" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_free (163 samples, 0.04%)</title><rect x="272.9" y="693" width="0.5" height="15.0" fill="rgb(227,77,54)" rx="2" ry="2" />
<text  x="275.93" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl (118 samples, 0.03%)</title><rect x="1077.6" y="997" width="0.3" height="15.0" fill="rgb(234,79,9)" rx="2" ry="2" />
<text  x="1080.64" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (68 samples, 0.01%)</title><rect x="1035.4" y="853" width="0.2" height="15.0" fill="rgb(227,38,7)" rx="2" ry="2" />
<text  x="1038.40" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (263 samples, 0.06%)</title><rect x="908.3" y="981" width="0.7" height="15.0" fill="rgb(214,150,20)" rx="2" ry="2" />
<text  x="911.33" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (57 samples, 0.01%)</title><rect x="1107.7" y="901" width="0.1" height="15.0" fill="rgb(238,145,44)" rx="2" ry="2" />
<text  x="1110.70" y="911.5" ></text>
</g>
<g >
<title>[web_server] (138 samples, 0.03%)</title><rect x="293.3" y="837" width="0.3" height="15.0" fill="rgb(236,191,45)" rx="2" ry="2" />
<text  x="296.25" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::allocate (809 samples, 0.18%)</title><rect x="506.7" y="1061" width="2.1" height="15.0" fill="rgb(246,207,20)" rx="2" ry="2" />
<text  x="509.71" y="1071.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (114 samples, 0.03%)</title><rect x="1174.2" y="997" width="0.3" height="15.0" fill="rgb(236,61,26)" rx="2" ry="2" />
<text  x="1177.18" y="1007.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (107 samples, 0.02%)</title><rect x="66.7" y="1301" width="0.3" height="15.0" fill="rgb(247,139,8)" rx="2" ry="2" />
<text  x="69.74" y="1311.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (120 samples, 0.03%)</title><rect x="649.3" y="869" width="0.3" height="15.0" fill="rgb(206,115,52)" rx="2" ry="2" />
<text  x="652.27" y="879.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_mask (153 samples, 0.03%)</title><rect x="837.3" y="885" width="0.4" height="15.0" fill="rgb(238,1,49)" rx="2" ry="2" />
<text  x="840.26" y="895.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (61 samples, 0.01%)</title><rect x="786.3" y="997" width="0.2" height="15.0" fill="rgb(245,14,23)" rx="2" ry="2" />
<text  x="789.31" y="1007.5" ></text>
</g>
<g >
<title>__hrtimer_init (93 samples, 0.02%)</title><rect x="476.0" y="981" width="0.2" height="15.0" fill="rgb(214,159,8)" rx="2" ry="2" />
<text  x="478.96" y="991.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (458 samples, 0.10%)</title><rect x="528.0" y="661" width="1.2" height="15.0" fill="rgb(248,28,37)" rx="2" ry="2" />
<text  x="530.97" y="671.5" ></text>
</g>
<g >
<title>webserver::Channel::get_triggered_events (43 samples, 0.01%)</title><rect x="139.6" y="1301" width="0.2" height="15.0" fill="rgb(214,130,32)" rx="2" ry="2" />
<text  x="142.64" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (46 samples, 0.01%)</title><rect x="1181.5" y="1317" width="0.1" height="15.0" fill="rgb(224,147,52)" rx="2" ry="2" />
<text  x="1184.46" y="1327.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (66 samples, 0.01%)</title><rect x="609.9" y="853" width="0.2" height="15.0" fill="rgb(240,189,42)" rx="2" ry="2" />
<text  x="612.92" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::HttpHandler,  (80 samples, 0.02%)</title><rect x="578.3" y="933" width="0.3" height="15.0" fill="rgb(227,36,3)" rx="2" ry="2" />
<text  x="581.35" y="943.5" ></text>
</g>
<g >
<title>resched_curr (46 samples, 0.01%)</title><rect x="951.8" y="581" width="0.1" height="15.0" fill="rgb(246,209,52)" rx="2" ry="2" />
<text  x="954.78" y="591.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (227 samples, 0.05%)</title><rect x="818.1" y="965" width="0.6" height="15.0" fill="rgb(210,59,29)" rx="2" ry="2" />
<text  x="821.12" y="975.5" ></text>
</g>
<g >
<title>remove_wait_queue (48 samples, 0.01%)</title><rect x="1059.4" y="741" width="0.2" height="15.0" fill="rgb(212,43,45)" rx="2" ry="2" />
<text  x="1062.44" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (552 samples, 0.12%)</title><rect x="256.1" y="917" width="1.4" height="15.0" fill="rgb(233,150,7)" rx="2" ry="2" />
<text  x="259.11" y="927.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (190 samples, 0.04%)</title><rect x="889.7" y="965" width="0.5" height="15.0" fill="rgb(245,141,42)" rx="2" ry="2" />
<text  x="892.68" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (82 samples, 0.02%)</title><rect x="525.2" y="773" width="0.2" height="15.0" fill="rgb(216,219,33)" rx="2" ry="2" />
<text  x="528.22" y="783.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (95 samples, 0.02%)</title><rect x="679.4" y="869" width="0.2" height="15.0" fill="rgb(220,12,34)" rx="2" ry="2" />
<text  x="682.40" y="879.5" ></text>
</g>
<g >
<title>resched_curr (52 samples, 0.01%)</title><rect x="666.1" y="613" width="0.1" height="15.0" fill="rgb(228,1,35)" rx="2" ry="2" />
<text  x="669.09" y="623.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (325 samples, 0.07%)</title><rect x="1111.1" y="1029" width="0.9" height="15.0" fill="rgb(227,206,13)" rx="2" ry="2" />
<text  x="1114.15" y="1039.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;char [23]&gt; (360 samples, 0.08%)</title><rect x="268.7" y="933" width="0.9" height="15.0" fill="rgb(222,138,39)" rx="2" ry="2" />
<text  x="271.69" y="943.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt;::_M_head (54 samples, 0.01%)</title><rect x="79.7" y="1301" width="0.1" height="15.0" fill="rgb(238,105,31)" rx="2" ry="2" />
<text  x="82.69" y="1311.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (379 samples, 0.08%)</title><rect x="625.1" y="949" width="1.0" height="15.0" fill="rgb(233,57,17)" rx="2" ry="2" />
<text  x="628.10" y="959.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::shared_from_this (113 samples, 0.02%)</title><rect x="260.4" y="917" width="0.3" height="15.0" fill="rgb(231,195,24)" rx="2" ry="2" />
<text  x="263.38" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (55 samples, 0.01%)</title><rect x="529.8" y="693" width="0.1" height="15.0" fill="rgb(237,227,2)" rx="2" ry="2" />
<text  x="532.80" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (65 samples, 0.01%)</title><rect x="1142.1" y="917" width="0.2" height="15.0" fill="rgb(240,163,54)" rx="2" ry="2" />
<text  x="1145.13" y="927.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (45 samples, 0.01%)</title><rect x="155.2" y="1301" width="0.1" height="15.0" fill="rgb(243,111,8)" rx="2" ry="2" />
<text  x="158.18" y="1311.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (342 samples, 0.08%)</title><rect x="784.7" y="981" width="0.9" height="15.0" fill="rgb(208,55,54)" rx="2" ry="2" />
<text  x="787.72" y="991.5" ></text>
</g>
<g >
<title>psi_task_change (137 samples, 0.03%)</title><rect x="665.1" y="629" width="0.4" height="15.0" fill="rgb(212,116,26)" rx="2" ry="2" />
<text  x="668.11" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (210 samples, 0.05%)</title><rect x="170.8" y="741" width="0.6" height="15.0" fill="rgb(205,46,43)" rx="2" ry="2" />
<text  x="173.83" y="751.5" ></text>
</g>
<g >
<title>refill_obj_stock (86 samples, 0.02%)</title><rect x="827.2" y="933" width="0.3" height="15.0" fill="rgb(239,148,16)" rx="2" ry="2" />
<text  x="830.24" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (40 samples, 0.01%)</title><rect x="793.3" y="965" width="0.1" height="15.0" fill="rgb(215,146,2)" rx="2" ry="2" />
<text  x="796.26" y="975.5" ></text>
</g>
<g >
<title>terminate_walk (70 samples, 0.02%)</title><rect x="888.9" y="949" width="0.2" height="15.0" fill="rgb(217,177,34)" rx="2" ry="2" />
<text  x="891.89" y="959.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (134 samples, 0.03%)</title><rect x="560.7" y="629" width="0.3" height="15.0" fill="rgb(207,91,23)" rx="2" ry="2" />
<text  x="563.67" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,495 samples, 0.33%)</title><rect x="1064.2" y="853" width="3.8" height="15.0" fill="rgb(241,68,30)" rx="2" ry="2" />
<text  x="1067.16" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_free (231 samples, 0.05%)</title><rect x="283.2" y="757" width="0.6" height="15.0" fill="rgb(213,59,43)" rx="2" ry="2" />
<text  x="286.19" y="767.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21,227 samples, 4.67%)</title><rect x="293.2" y="853" width="55.1" height="15.0" fill="rgb(219,199,18)" rx="2" ry="2" />
<text  x="296.17" y="863.5" >spdlo..</text>
</g>
<g >
<title>_copy_from_iter (105 samples, 0.02%)</title><rect x="654.1" y="741" width="0.3" height="15.0" fill="rgb(252,95,10)" rx="2" ry="2" />
<text  x="657.14" y="751.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (53 samples, 0.01%)</title><rect x="489.3" y="965" width="0.2" height="15.0" fill="rgb(208,97,38)" rx="2" ry="2" />
<text  x="492.32" y="975.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (637 samples, 0.14%)</title><rect x="668.6" y="805" width="1.7" height="15.0" fill="rgb(254,127,44)" rx="2" ry="2" />
<text  x="671.61" y="815.5" ></text>
</g>
<g >
<title>map_id_range_down (52 samples, 0.01%)</title><rect x="886.5" y="885" width="0.2" height="15.0" fill="rgb(215,208,30)" rx="2" ry="2" />
<text  x="889.52" y="895.5" ></text>
</g>
<g >
<title>update_load_avg (70 samples, 0.02%)</title><rect x="736.9" y="709" width="0.2" height="15.0" fill="rgb(206,100,44)" rx="2" ry="2" />
<text  x="739.87" y="719.5" ></text>
</g>
<g >
<title>ip_local_deliver (302 samples, 0.07%)</title><rect x="1086.3" y="469" width="0.7" height="15.0" fill="rgb(224,75,0)" rx="2" ry="2" />
<text  x="1089.26" y="479.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16,208 samples, 3.57%)</title><rect x="397.7" y="565" width="42.2" height="15.0" fill="rgb(217,116,53)" rx="2" ry="2" />
<text  x="400.74" y="575.5" >ip_..</text>
</g>
<g >
<title>__schedule (132 samples, 0.03%)</title><rect x="1070.9" y="757" width="0.3" height="15.0" fill="rgb(254,182,29)" rx="2" ry="2" />
<text  x="1073.86" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (62 samples, 0.01%)</title><rect x="759.3" y="981" width="0.2" height="15.0" fill="rgb(222,213,33)" rx="2" ry="2" />
<text  x="762.33" y="991.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_dest (63 samples, 0.01%)</title><rect x="724.8" y="613" width="0.2" height="15.0" fill="rgb(253,173,12)" rx="2" ry="2" />
<text  x="727.81" y="623.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::send (53 samples, 0.01%)</title><rect x="142.1" y="1301" width="0.2" height="15.0" fill="rgb(225,30,8)" rx="2" ry="2" />
<text  x="145.14" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, false&gt; &gt;::allocate (302 samples, 0.07%)</title><rect x="588.6" y="741" width="0.8" height="15.0" fill="rgb(246,119,30)" rx="2" ry="2" />
<text  x="591.63" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (58 samples, 0.01%)</title><rect x="260.7" y="901" width="0.2" height="15.0" fill="rgb(223,49,42)" rx="2" ry="2" />
<text  x="263.71" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (342 samples, 0.08%)</title><rect x="621.0" y="885" width="0.8" height="15.0" fill="rgb(213,99,17)" rx="2" ry="2" />
<text  x="623.96" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;::_Tuple_impl (54 samples, 0.01%)</title><rect x="986.3" y="933" width="0.2" height="15.0" fill="rgb(230,99,14)" rx="2" ry="2" />
<text  x="989.32" y="943.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (54 samples, 0.01%)</title><rect x="1013.2" y="805" width="0.1" height="15.0" fill="rgb(217,8,44)" rx="2" ry="2" />
<text  x="1016.20" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (86 samples, 0.02%)</title><rect x="910.1" y="1045" width="0.2" height="15.0" fill="rgb(226,212,16)" rx="2" ry="2" />
<text  x="913.11" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (47 samples, 0.01%)</title><rect x="621.3" y="869" width="0.1" height="15.0" fill="rgb(236,148,7)" rx="2" ry="2" />
<text  x="624.27" y="879.5" ></text>
</g>
<g >
<title>__sys_recvfrom (5,076 samples, 1.12%)</title><rect x="238.9" y="869" width="13.2" height="15.0" fill="rgb(215,7,5)" rx="2" ry="2" />
<text  x="241.88" y="879.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (232 samples, 0.05%)</title><rect x="102.7" y="1301" width="0.6" height="15.0" fill="rgb(218,93,29)" rx="2" ry="2" />
<text  x="105.67" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (59 samples, 0.01%)</title><rect x="514.9" y="853" width="0.1" height="15.0" fill="rgb(239,136,49)" rx="2" ry="2" />
<text  x="517.88" y="863.5" ></text>
</g>
<g >
<title>queue_work_on (3,768 samples, 0.83%)</title><rect x="547.4" y="565" width="9.8" height="15.0" fill="rgb(252,168,0)" rx="2" ry="2" />
<text  x="550.42" y="575.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned long&gt; (293 samples, 0.06%)</title><rect x="644.0" y="837" width="0.8" height="15.0" fill="rgb(244,28,19)" rx="2" ry="2" />
<text  x="646.99" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (39 samples, 0.01%)</title><rect x="294.4" y="821" width="0.1" height="15.0" fill="rgb(237,55,48)" rx="2" ry="2" />
<text  x="297.38" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (46 samples, 0.01%)</title><rect x="284.5" y="837" width="0.1" height="15.0" fill="rgb(237,61,15)" rx="2" ry="2" />
<text  x="287.46" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (115 samples, 0.03%)</title><rect x="1176.1" y="1061" width="0.3" height="15.0" fill="rgb(241,147,53)" rx="2" ry="2" />
<text  x="1179.08" y="1071.5" ></text>
</g>
<g >
<title>update_load_avg (142 samples, 0.03%)</title><rect x="664.3" y="597" width="0.4" height="15.0" fill="rgb(241,185,21)" rx="2" ry="2" />
<text  x="667.29" y="607.5" ></text>
</g>
<g >
<title>mark_wake_futex (57 samples, 0.01%)</title><rect x="1070.3" y="821" width="0.1" height="15.0" fill="rgb(232,162,0)" rx="2" ry="2" />
<text  x="1073.27" y="831.5" ></text>
</g>
<g >
<title>psi_flags_change (51 samples, 0.01%)</title><rect x="951.0" y="581" width="0.1" height="15.0" fill="rgb(252,192,38)" rx="2" ry="2" />
<text  x="954.01" y="591.5" ></text>
</g>
<g >
<title>memset_erms (41 samples, 0.01%)</title><rect x="455.7" y="757" width="0.1" height="15.0" fill="rgb(228,123,6)" rx="2" ry="2" />
<text  x="458.72" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (674 samples, 0.15%)</title><rect x="787.9" y="1061" width="1.7" height="15.0" fill="rgb(229,21,49)" rx="2" ry="2" />
<text  x="790.85" y="1071.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (75 samples, 0.02%)</title><rect x="684.6" y="773" width="0.2" height="15.0" fill="rgb(211,6,43)" rx="2" ry="2" />
<text  x="687.60" y="783.5" ></text>
</g>
<g >
<title>_int_free (60 samples, 0.01%)</title><rect x="275.6" y="677" width="0.1" height="15.0" fill="rgb(208,172,47)" rx="2" ry="2" />
<text  x="278.55" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (553 samples, 0.12%)</title><rect x="990.9" y="1029" width="1.5" height="15.0" fill="rgb(220,168,51)" rx="2" ry="2" />
<text  x="993.92" y="1039.5" ></text>
</g>
<g >
<title>__fget_light (200 samples, 0.04%)</title><rect x="315.5" y="597" width="0.5" height="15.0" fill="rgb(236,63,26)" rx="2" ry="2" />
<text  x="318.52" y="607.5" ></text>
</g>
<g >
<title>ip_output (1,172 samples, 0.26%)</title><rect x="414.1" y="453" width="3.0" height="15.0" fill="rgb(214,1,41)" rx="2" ry="2" />
<text  x="417.09" y="463.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.01%)</title><rect x="625.6" y="917" width="0.2" height="15.0" fill="rgb(246,1,47)" rx="2" ry="2" />
<text  x="628.60" y="927.5" ></text>
</g>
<g >
<title>_int_free (171 samples, 0.04%)</title><rect x="168.0" y="837" width="0.5" height="15.0" fill="rgb(224,139,42)" rx="2" ry="2" />
<text  x="171.04" y="847.5" ></text>
</g>
<g >
<title>do_futex (2,144 samples, 0.47%)</title><rect x="672.5" y="821" width="5.6" height="15.0" fill="rgb(205,174,14)" rx="2" ry="2" />
<text  x="675.50" y="831.5" ></text>
</g>
<g >
<title>update_load_avg (173 samples, 0.04%)</title><rect x="949.8" y="565" width="0.5" height="15.0" fill="rgb(221,93,31)" rx="2" ry="2" />
<text  x="952.80" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (68 samples, 0.01%)</title><rect x="642.6" y="741" width="0.1" height="15.0" fill="rgb(254,130,36)" rx="2" ry="2" />
<text  x="645.57" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (1,484 samples, 0.33%)</title><rect x="579.9" y="901" width="3.9" height="15.0" fill="rgb(249,7,8)" rx="2" ry="2" />
<text  x="582.92" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;*, std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt; &gt;::base (79 samples, 0.02%)</title><rect x="38.6" y="1301" width="0.2" height="15.0" fill="rgb(219,143,11)" rx="2" ry="2" />
<text  x="41.60" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (802 samples, 0.18%)</title><rect x="915.7" y="965" width="2.1" height="15.0" fill="rgb(240,99,43)" rx="2" ry="2" />
<text  x="918.75" y="975.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (62 samples, 0.01%)</title><rect x="472.0" y="997" width="0.2" height="15.0" fill="rgb(216,207,12)" rx="2" ry="2" />
<text  x="475.01" y="1007.5" ></text>
</g>
<g >
<title>queue_work_on (3,094 samples, 0.68%)</title><rect x="1050.8" y="725" width="8.0" height="15.0" fill="rgb(216,86,14)" rx="2" ry="2" />
<text  x="1053.75" y="735.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (70 samples, 0.02%)</title><rect x="119.3" y="1301" width="0.2" height="15.0" fill="rgb(238,205,36)" rx="2" ry="2" />
<text  x="122.30" y="1311.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (72 samples, 0.02%)</title><rect x="311.4" y="565" width="0.2" height="15.0" fill="rgb(229,25,53)" rx="2" ry="2" />
<text  x="314.43" y="575.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_streambuf (63 samples, 0.01%)</title><rect x="982.8" y="1013" width="0.1" height="15.0" fill="rgb(253,46,21)" rx="2" ry="2" />
<text  x="985.77" y="1023.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (156 samples, 0.03%)</title><rect x="689.8" y="773" width="0.4" height="15.0" fill="rgb(207,209,41)" rx="2" ry="2" />
<text  x="692.81" y="783.5" ></text>
</g>
<g >
<title>link_path_walk (2,196 samples, 0.48%)</title><rect x="856.7" y="949" width="5.7" height="15.0" fill="rgb(215,80,36)" rx="2" ry="2" />
<text  x="859.74" y="959.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (344 samples, 0.08%)</title><rect x="126.9" y="1301" width="0.9" height="15.0" fill="rgb(219,170,21)" rx="2" ry="2" />
<text  x="129.91" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow (398 samples, 0.09%)</title><rect x="445.7" y="725" width="1.0" height="15.0" fill="rgb(212,157,42)" rx="2" ry="2" />
<text  x="448.66" y="735.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (10,186 samples, 2.24%)</title><rect x="704.0" y="917" width="26.4" height="15.0" fill="rgb(214,180,24)" rx="2" ry="2" />
<text  x="706.98" y="927.5" >_..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (39 samples, 0.01%)</title><rect x="234.8" y="885" width="0.1" height="15.0" fill="rgb(235,30,43)" rx="2" ry="2" />
<text  x="237.80" y="895.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (44 samples, 0.01%)</title><rect x="311.8" y="757" width="0.1" height="15.0" fill="rgb(248,143,26)" rx="2" ry="2" />
<text  x="314.80" y="767.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (76 samples, 0.02%)</title><rect x="441.0" y="533" width="0.2" height="15.0" fill="rgb(247,198,12)" rx="2" ry="2" />
<text  x="443.98" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (189 samples, 0.04%)</title><rect x="907.8" y="997" width="0.5" height="15.0" fill="rgb(232,124,35)" rx="2" ry="2" />
<text  x="910.79" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::operator (237 samples, 0.05%)</title><rect x="740.9" y="1077" width="0.6" height="15.0" fill="rgb(251,103,44)" rx="2" ry="2" />
<text  x="743.85" y="1087.5" ></text>
</g>
<g >
<title>__libc_open64 (113 samples, 0.02%)</title><rect x="1189.6" y="1301" width="0.3" height="15.0" fill="rgb(250,8,48)" rx="2" ry="2" />
<text  x="1192.64" y="1311.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (69 samples, 0.02%)</title><rect x="309.5" y="693" width="0.2" height="15.0" fill="rgb(205,29,8)" rx="2" ry="2" />
<text  x="312.51" y="703.5" ></text>
</g>
<g >
<title>inet_send_prepare (61 samples, 0.01%)</title><rect x="365.4" y="821" width="0.2" height="15.0" fill="rgb(230,176,41)" rx="2" ry="2" />
<text  x="368.39" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check (52 samples, 0.01%)</title><rect x="763.2" y="1029" width="0.2" height="15.0" fill="rgb(252,103,12)" rx="2" ry="2" />
<text  x="766.23" y="1039.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (134 samples, 0.03%)</title><rect x="689.8" y="741" width="0.4" height="15.0" fill="rgb(210,183,30)" rx="2" ry="2" />
<text  x="692.85" y="751.5" ></text>
</g>
<g >
<title>enqueue_task (469 samples, 0.10%)</title><rect x="345.5" y="581" width="1.2" height="15.0" fill="rgb(222,52,52)" rx="2" ry="2" />
<text  x="348.48" y="591.5" ></text>
</g>
<g >
<title>futex_wait_setup (143 samples, 0.03%)</title><rect x="568.4" y="645" width="0.4" height="15.0" fill="rgb(243,105,36)" rx="2" ry="2" />
<text  x="571.40" y="655.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (44 samples, 0.01%)</title><rect x="334.2" y="565" width="0.2" height="15.0" fill="rgb(205,121,18)" rx="2" ry="2" />
<text  x="337.24" y="575.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (90 samples, 0.02%)</title><rect x="482.2" y="949" width="0.3" height="15.0" fill="rgb(252,57,32)" rx="2" ry="2" />
<text  x="485.25" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (68 samples, 0.01%)</title><rect x="1107.7" y="933" width="0.1" height="15.0" fill="rgb(231,76,0)" rx="2" ry="2" />
<text  x="1110.67" y="943.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (204 samples, 0.04%)</title><rect x="767.1" y="1013" width="0.5" height="15.0" fill="rgb(231,189,48)" rx="2" ry="2" />
<text  x="770.07" y="1023.5" ></text>
</g>
<g >
<title>add_wait_queue (54 samples, 0.01%)</title><rect x="941.3" y="693" width="0.1" height="15.0" fill="rgb(244,122,33)" rx="2" ry="2" />
<text  x="944.28" y="703.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (246 samples, 0.05%)</title><rect x="310.5" y="709" width="0.6" height="15.0" fill="rgb(206,32,42)" rx="2" ry="2" />
<text  x="313.48" y="719.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (95 samples, 0.02%)</title><rect x="760.8" y="1013" width="0.2" height="15.0" fill="rgb(244,162,13)" rx="2" ry="2" />
<text  x="763.75" y="1023.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (80 samples, 0.02%)</title><rect x="943.9" y="645" width="0.2" height="15.0" fill="rgb(221,78,43)" rx="2" ry="2" />
<text  x="946.92" y="655.5" ></text>
</g>
<g >
<title>spdlog::sinks::sink::should_log (56 samples, 0.01%)</title><rect x="347.8" y="789" width="0.1" height="15.0" fill="rgb(223,180,18)" rx="2" ry="2" />
<text  x="350.75" y="799.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (58 samples, 0.01%)</title><rect x="1101.7" y="645" width="0.1" height="15.0" fill="rgb(251,200,45)" rx="2" ry="2" />
<text  x="1104.66" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (136 samples, 0.03%)</title><rect x="735.2" y="757" width="0.3" height="15.0" fill="rgb(237,8,25)" rx="2" ry="2" />
<text  x="738.16" y="767.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (43 samples, 0.01%)</title><rect x="608.5" y="853" width="0.1" height="15.0" fill="rgb(231,229,38)" rx="2" ry="2" />
<text  x="611.48" y="863.5" ></text>
</g>
<g >
<title>move_addr_to_user (329 samples, 0.07%)</title><rect x="1154.9" y="981" width="0.9" height="15.0" fill="rgb(226,223,37)" rx="2" ry="2" />
<text  x="1157.92" y="991.5" ></text>
</g>
<g >
<title>do_output_char (1,794 samples, 0.40%)</title><rect x="710.3" y="725" width="4.7" height="15.0" fill="rgb(228,176,1)" rx="2" ry="2" />
<text  x="713.29" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::operator= (1,432 samples, 0.32%)</title><rect x="222.3" y="1109" width="3.8" height="15.0" fill="rgb(237,211,44)" rx="2" ry="2" />
<text  x="225.34" y="1119.5" ></text>
</g>
<g >
<title>__srcu_read_lock (115 samples, 0.03%)</title><rect x="176.9" y="533" width="0.3" height="15.0" fill="rgb(215,78,37)" rx="2" ry="2" />
<text  x="179.90" y="543.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (122 samples, 0.03%)</title><rect x="156.3" y="1285" width="0.4" height="15.0" fill="rgb(252,112,44)" rx="2" ry="2" />
<text  x="159.34" y="1295.5" ></text>
</g>
<g >
<title>memcpy_erms (48 samples, 0.01%)</title><rect x="810.1" y="853" width="0.1" height="15.0" fill="rgb(229,225,18)" rx="2" ry="2" />
<text  x="813.05" y="863.5" ></text>
</g>
<g >
<title>try_charge_memcg (58 samples, 0.01%)</title><rect x="420.6" y="453" width="0.1" height="15.0" fill="rgb(214,84,44)" rx="2" ry="2" />
<text  x="423.57" y="463.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (93 samples, 0.02%)</title><rect x="526.0" y="709" width="0.2" height="15.0" fill="rgb(235,90,46)" rx="2" ry="2" />
<text  x="528.97" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (280 samples, 0.06%)</title><rect x="932.4" y="869" width="0.8" height="15.0" fill="rgb(236,94,16)" rx="2" ry="2" />
<text  x="935.45" y="879.5" ></text>
</g>
<g >
<title>hook_inode_free_security (56 samples, 0.01%)</title><rect x="1082.8" y="757" width="0.2" height="15.0" fill="rgb(220,70,52)" rx="2" ry="2" />
<text  x="1085.81" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (306 samples, 0.07%)</title><rect x="644.0" y="869" width="0.8" height="15.0" fill="rgb(245,45,19)" rx="2" ry="2" />
<text  x="646.96" y="879.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (110 samples, 0.02%)</title><rect x="210.2" y="197" width="0.3" height="15.0" fill="rgb(222,78,51)" rx="2" ry="2" />
<text  x="213.21" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (659 samples, 0.15%)</title><rect x="272.2" y="789" width="1.7" height="15.0" fill="rgb(209,228,25)" rx="2" ry="2" />
<text  x="275.17" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (63 samples, 0.01%)</title><rect x="297.5" y="805" width="0.2" height="15.0" fill="rgb(236,219,16)" rx="2" ry="2" />
<text  x="300.54" y="815.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (497 samples, 0.11%)</title><rect x="479.6" y="997" width="1.3" height="15.0" fill="rgb(241,187,30)" rx="2" ry="2" />
<text  x="482.58" y="1007.5" ></text>
</g>
<g >
<title>[[nf_nat]] (52 samples, 0.01%)</title><rect x="446.5" y="693" width="0.2" height="15.0" fill="rgb(254,156,45)" rx="2" ry="2" />
<text  x="449.54" y="703.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::set_handler (66 samples, 0.01%)</title><rect x="611.4" y="917" width="0.2" height="15.0" fill="rgb(238,221,34)" rx="2" ry="2" />
<text  x="614.38" y="927.5" ></text>
</g>
<g >
<title>do_epoll_ctl (276 samples, 0.06%)</title><rect x="278.4" y="789" width="0.7" height="15.0" fill="rgb(237,171,18)" rx="2" ry="2" />
<text  x="281.39" y="799.5" ></text>
</g>
<g >
<title>__sk_destruct (60 samples, 0.01%)</title><rect x="1086.3" y="405" width="0.2" height="15.0" fill="rgb(227,225,39)" rx="2" ry="2" />
<text  x="1089.31" y="415.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (272 samples, 0.06%)</title><rect x="497.4" y="1013" width="0.7" height="15.0" fill="rgb(232,23,31)" rx="2" ry="2" />
<text  x="500.41" y="1023.5" ></text>
</g>
<g >
<title>_IO_new_do_write (8,941 samples, 1.97%)</title><rect x="314.2" y="725" width="23.2" height="15.0" fill="rgb(218,2,33)" rx="2" ry="2" />
<text  x="317.16" y="735.5" >_..</text>
</g>
<g >
<title>fmt::v8::format_int::format_int (297 samples, 0.07%)</title><rect x="307.4" y="693" width="0.8" height="15.0" fill="rgb(226,155,4)" rx="2" ry="2" />
<text  x="310.44" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (82 samples, 0.02%)</title><rect x="1002.0" y="949" width="0.2" height="15.0" fill="rgb(251,147,21)" rx="2" ry="2" />
<text  x="1004.95" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (42 samples, 0.01%)</title><rect x="1178.9" y="1029" width="0.1" height="15.0" fill="rgb(253,68,34)" rx="2" ry="2" />
<text  x="1181.87" y="1039.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (195 samples, 0.04%)</title><rect x="582.7" y="853" width="0.5" height="15.0" fill="rgb(207,142,32)" rx="2" ry="2" />
<text  x="585.67" y="863.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (46 samples, 0.01%)</title><rect x="1060.0" y="757" width="0.1" height="15.0" fill="rgb(219,112,45)" rx="2" ry="2" />
<text  x="1063.00" y="767.5" ></text>
</g>
<g >
<title>path_noexec (46 samples, 0.01%)</title><rect x="817.8" y="965" width="0.1" height="15.0" fill="rgb(223,211,11)" rx="2" ry="2" />
<text  x="820.75" y="975.5" ></text>
</g>
<g >
<title>enqueue_task (528 samples, 0.12%)</title><rect x="1072.2" y="773" width="1.4" height="15.0" fill="rgb(223,153,15)" rx="2" ry="2" />
<text  x="1075.19" y="783.5" ></text>
</g>
<g >
<title>[[ext4]] (200 samples, 0.04%)</title><rect x="848.5" y="949" width="0.5" height="15.0" fill="rgb(224,166,6)" rx="2" ry="2" />
<text  x="851.52" y="959.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*&gt; (66 samples, 0.01%)</title><rect x="67.7" y="1301" width="0.2" height="15.0" fill="rgb(228,60,20)" rx="2" ry="2" />
<text  x="70.70" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (55 samples, 0.01%)</title><rect x="636.4" y="949" width="0.2" height="15.0" fill="rgb(216,119,17)" rx="2" ry="2" />
<text  x="639.44" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_erase_at_end (21,703 samples, 4.78%)</title><rect x="165.8" y="1093" width="56.4" height="15.0" fill="rgb(248,178,43)" rx="2" ry="2" />
<text  x="168.76" y="1103.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt;*, std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt; (100 samples, 0.02%)</title><rect x="160.3" y="1109" width="0.3" height="15.0" fill="rgb(250,167,42)" rx="2" ry="2" />
<text  x="163.34" y="1119.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (175 samples, 0.04%)</title><rect x="757.6" y="997" width="0.4" height="15.0" fill="rgb(210,144,4)" rx="2" ry="2" />
<text  x="760.57" y="1007.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (188 samples, 0.04%)</title><rect x="1023.7" y="821" width="0.4" height="15.0" fill="rgb(222,32,54)" rx="2" ry="2" />
<text  x="1026.66" y="831.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (369 samples, 0.08%)</title><rect x="296.6" y="773" width="0.9" height="15.0" fill="rgb(222,114,5)" rx="2" ry="2" />
<text  x="299.58" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (92 samples, 0.02%)</title><rect x="766.2" y="1013" width="0.2" height="15.0" fill="rgb(220,14,30)" rx="2" ry="2" />
<text  x="769.17" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (75 samples, 0.02%)</title><rect x="272.0" y="725" width="0.2" height="15.0" fill="rgb(209,190,39)" rx="2" ry="2" />
<text  x="274.96" y="735.5" ></text>
</g>
<g >
<title>is_cpu_allowed (116 samples, 0.03%)</title><rect x="549.1" y="517" width="0.3" height="15.0" fill="rgb(247,74,19)" rx="2" ry="2" />
<text  x="552.10" y="527.5" ></text>
</g>
<g >
<title>__tty_buffer_request_room (45 samples, 0.01%)</title><rect x="714.5" y="677" width="0.1" height="15.0" fill="rgb(228,98,32)" rx="2" ry="2" />
<text  x="717.47" y="687.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (90 samples, 0.02%)</title><rect x="532.7" y="741" width="0.2" height="15.0" fill="rgb(228,47,30)" rx="2" ry="2" />
<text  x="535.68" y="751.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (561 samples, 0.12%)</title><rect x="1011.9" y="853" width="1.4" height="15.0" fill="rgb(237,108,51)" rx="2" ry="2" />
<text  x="1014.88" y="863.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (101 samples, 0.02%)</title><rect x="310.2" y="709" width="0.3" height="15.0" fill="rgb(221,188,50)" rx="2" ry="2" />
<text  x="313.20" y="719.5" ></text>
</g>
<g >
<title>_find_next_bit (42 samples, 0.01%)</title><rect x="837.7" y="869" width="0.1" height="15.0" fill="rgb(254,144,11)" rx="2" ry="2" />
<text  x="840.73" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, webserver::EventLoop*, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::_Tuple_impl&lt;webserver::EventLoop*&amp;, std::shared_ptr&lt;webserver::HttpHandler&gt;&amp;, void&gt; (120 samples, 0.03%)</title><rect x="1076.4" y="1045" width="0.3" height="15.0" fill="rgb(236,98,29)" rx="2" ry="2" />
<text  x="1079.39" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (392 samples, 0.09%)</title><rect x="625.1" y="965" width="1.0" height="15.0" fill="rgb(239,214,18)" rx="2" ry="2" />
<text  x="628.07" y="975.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (164 samples, 0.04%)</title><rect x="605.3" y="885" width="0.5" height="15.0" fill="rgb(231,69,4)" rx="2" ry="2" />
<text  x="608.33" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (443 samples, 0.10%)</title><rect x="1164.3" y="917" width="1.1" height="15.0" fill="rgb(242,145,43)" rx="2" ry="2" />
<text  x="1167.28" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (237 samples, 0.05%)</title><rect x="517.6" y="709" width="0.6" height="15.0" fill="rgb(229,163,24)" rx="2" ry="2" />
<text  x="520.57" y="719.5" ></text>
</g>
<g >
<title>__do_softirq (145 samples, 0.03%)</title><rect x="183.8" y="357" width="0.4" height="15.0" fill="rgb(217,47,5)" rx="2" ry="2" />
<text  x="186.78" y="367.5" ></text>
</g>
<g >
<title>__alloc_file (756 samples, 0.17%)</title><rect x="1161.7" y="917" width="2.0" height="15.0" fill="rgb(221,124,42)" rx="2" ry="2" />
<text  x="1164.72" y="927.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (40 samples, 0.01%)</title><rect x="23.0" y="1301" width="0.1" height="15.0" fill="rgb(244,146,39)" rx="2" ry="2" />
<text  x="26.03" y="1311.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (133 samples, 0.03%)</title><rect x="311.3" y="645" width="0.4" height="15.0" fill="rgb(248,67,10)" rx="2" ry="2" />
<text  x="314.33" y="655.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (58 samples, 0.01%)</title><rect x="953.9" y="709" width="0.2" height="15.0" fill="rgb(224,160,22)" rx="2" ry="2" />
<text  x="956.93" y="719.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (18,996 samples, 4.18%)</title><rect x="298.8" y="821" width="49.3" height="15.0" fill="rgb(236,146,46)" rx="2" ry="2" />
<text  x="301.78" y="831.5" >spdl..</text>
</g>
<g >
<title>webserver::HttpConnection::shut_down (2,081 samples, 0.46%)</title><rect x="750.7" y="1061" width="5.4" height="15.0" fill="rgb(232,59,38)" rx="2" ry="2" />
<text  x="753.69" y="1071.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (103 samples, 0.02%)</title><rect x="56.6" y="1301" width="0.3" height="15.0" fill="rgb(248,187,28)" rx="2" ry="2" />
<text  x="59.60" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (45 samples, 0.01%)</title><rect x="63.4" y="1301" width="0.1" height="15.0" fill="rgb(213,108,15)" rx="2" ry="2" />
<text  x="66.41" y="1311.5" ></text>
</g>
<g >
<title>__mod_timer (282 samples, 0.06%)</title><rect x="199.5" y="197" width="0.8" height="15.0" fill="rgb(215,57,20)" rx="2" ry="2" />
<text  x="202.55" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_write (43 samples, 0.01%)</title><rect x="1043.1" y="821" width="0.1" height="15.0" fill="rgb(238,122,27)" rx="2" ry="2" />
<text  x="1046.09" y="831.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (43 samples, 0.01%)</title><rect x="620.8" y="869" width="0.2" height="15.0" fill="rgb(241,22,32)" rx="2" ry="2" />
<text  x="623.85" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (124 samples, 0.03%)</title><rect x="56.9" y="1301" width="0.3" height="15.0" fill="rgb(227,164,16)" rx="2" ry="2" />
<text  x="59.87" y="1311.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::Epoll*, std::default_delete&lt;webserver::Epoll&gt; &gt; (119 samples, 0.03%)</title><rect x="125.5" y="1301" width="0.3" height="15.0" fill="rgb(239,93,47)" rx="2" ry="2" />
<text  x="128.46" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (143 samples, 0.03%)</title><rect x="145.4" y="1285" width="0.3" height="15.0" fill="rgb(246,75,43)" rx="2" ry="2" />
<text  x="148.38" y="1295.5" ></text>
</g>
<g >
<title>__do_softirq (7,087 samples, 1.56%)</title><rect x="194.5" y="405" width="18.4" height="15.0" fill="rgb(224,190,45)" rx="2" ry="2" />
<text  x="197.53" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37,805 samples, 8.32%)</title><rect x="363.8" y="917" width="98.3" height="15.0" fill="rgb(241,75,38)" rx="2" ry="2" />
<text  x="366.83" y="927.5" >entry_SYSCA..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (280 samples, 0.06%)</title><rect x="895.3" y="981" width="0.7" height="15.0" fill="rgb(248,142,49)" rx="2" ry="2" />
<text  x="898.29" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (51 samples, 0.01%)</title><rect x="350.3" y="725" width="0.1" height="15.0" fill="rgb(222,138,41)" rx="2" ry="2" />
<text  x="353.27" y="735.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (175 samples, 0.04%)</title><rect x="878.7" y="901" width="0.5" height="15.0" fill="rgb(213,39,12)" rx="2" ry="2" />
<text  x="881.72" y="911.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (754 samples, 0.17%)</title><rect x="1033.0" y="901" width="2.0" height="15.0" fill="rgb(235,27,18)" rx="2" ry="2" />
<text  x="1036.01" y="911.5" ></text>
</g>
<g >
<title>__slab_free (47 samples, 0.01%)</title><rect x="1151.8" y="933" width="0.1" height="15.0" fill="rgb(239,94,46)" rx="2" ry="2" />
<text  x="1154.77" y="943.5" ></text>
</g>
<g >
<title>update_load_avg (58 samples, 0.01%)</title><rect x="207.3" y="69" width="0.1" height="15.0" fill="rgb(227,133,8)" rx="2" ry="2" />
<text  x="210.26" y="79.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (97 samples, 0.02%)</title><rect x="81.9" y="1301" width="0.3" height="15.0" fill="rgb(205,24,11)" rx="2" ry="2" />
<text  x="84.95" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::unique_ptr&lt;std::default_delete&lt;webserver::HttpConnection&gt;, void&gt; (109 samples, 0.02%)</title><rect x="1140.0" y="1061" width="0.2" height="15.0" fill="rgb(244,33,10)" rx="2" ry="2" />
<text  x="1142.96" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,525 samples, 0.78%)</title><rect x="1008.1" y="917" width="9.1" height="15.0" fill="rgb(234,178,30)" rx="2" ry="2" />
<text  x="1011.06" y="927.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (81 samples, 0.02%)</title><rect x="1025.8" y="853" width="0.3" height="15.0" fill="rgb(241,214,10)" rx="2" ry="2" />
<text  x="1028.85" y="863.5" ></text>
</g>
<g >
<title>add_wait_queue (103 samples, 0.02%)</title><rect x="596.3" y="693" width="0.2" height="15.0" fill="rgb(229,168,27)" rx="2" ry="2" />
<text  x="599.27" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (62 samples, 0.01%)</title><rect x="926.2" y="709" width="0.2" height="15.0" fill="rgb(219,82,26)" rx="2" ry="2" />
<text  x="929.22" y="719.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; (76 samples, 0.02%)</title><rect x="82.7" y="1301" width="0.2" height="15.0" fill="rgb(251,12,13)" rx="2" ry="2" />
<text  x="85.66" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,658 samples, 2.13%)</title><rect x="704.8" y="821" width="25.1" height="15.0" fill="rgb(218,151,16)" rx="2" ry="2" />
<text  x="707.79" y="831.5" >d..</text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (286 samples, 0.06%)</title><rect x="689.5" y="917" width="0.8" height="15.0" fill="rgb(230,77,13)" rx="2" ry="2" />
<text  x="692.54" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (111 samples, 0.02%)</title><rect x="59.8" y="1301" width="0.3" height="15.0" fill="rgb(253,80,26)" rx="2" ry="2" />
<text  x="62.83" y="1311.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (65 samples, 0.01%)</title><rect x="579.2" y="917" width="0.2" height="15.0" fill="rgb(211,220,51)" rx="2" ry="2" />
<text  x="582.24" y="927.5" ></text>
</g>
<g >
<title>webserver::HttpManager::del_http_connection (27,113 samples, 5.97%)</title><rect x="292.4" y="917" width="70.4" height="15.0" fill="rgb(248,185,26)" rx="2" ry="2" />
<text  x="295.37" y="927.5" >webserv..</text>
</g>
<g >
<title>put_prev_entity (88 samples, 0.02%)</title><rect x="1133.6" y="885" width="0.2" height="15.0" fill="rgb(205,90,22)" rx="2" ry="2" />
<text  x="1136.61" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::allocate (780 samples, 0.17%)</title><rect x="506.8" y="1029" width="2.0" height="15.0" fill="rgb(223,46,42)" rx="2" ry="2" />
<text  x="509.78" y="1039.5" ></text>
</g>
<g >
<title>lock_timer_base.constprop.0 (114 samples, 0.03%)</title><rect x="450.3" y="725" width="0.3" height="15.0" fill="rgb(212,138,10)" rx="2" ry="2" />
<text  x="453.26" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (151 samples, 0.03%)</title><rect x="710.9" y="693" width="0.4" height="15.0" fill="rgb(244,158,16)" rx="2" ry="2" />
<text  x="713.89" y="703.5" ></text>
</g>
<g >
<title>check_preempt_curr (61 samples, 0.01%)</title><rect x="575.7" y="613" width="0.2" height="15.0" fill="rgb(254,169,17)" rx="2" ry="2" />
<text  x="578.72" y="623.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (43 samples, 0.01%)</title><rect x="1153.0" y="933" width="0.1" height="15.0" fill="rgb(207,20,51)" rx="2" ry="2" />
<text  x="1156.00" y="943.5" ></text>
</g>
<g >
<title>update_curr (122 samples, 0.03%)</title><rect x="206.3" y="53" width="0.3" height="15.0" fill="rgb(234,89,35)" rx="2" ry="2" />
<text  x="209.31" y="63.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (92 samples, 0.02%)</title><rect x="365.6" y="837" width="0.2" height="15.0" fill="rgb(212,48,1)" rx="2" ry="2" />
<text  x="368.55" y="847.5" ></text>
</g>
<g >
<title>loopback_xmit (639 samples, 0.14%)</title><rect x="390.0" y="677" width="1.6" height="15.0" fill="rgb(253,29,9)" rx="2" ry="2" />
<text  x="392.98" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (43 samples, 0.01%)</title><rect x="358.3" y="741" width="0.1" height="15.0" fill="rgb(243,185,43)" rx="2" ry="2" />
<text  x="361.25" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_ptr (147 samples, 0.03%)</title><rect x="36.3" y="1301" width="0.4" height="15.0" fill="rgb(216,116,7)" rx="2" ry="2" />
<text  x="39.33" y="1311.5" ></text>
</g>
<g >
<title>futex_wait (2,029 samples, 0.45%)</title><rect x="563.5" y="661" width="5.3" height="15.0" fill="rgb(238,114,25)" rx="2" ry="2" />
<text  x="566.50" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::Channel,  (89 samples, 0.02%)</title><rect x="500.0" y="1093" width="0.3" height="15.0" fill="rgb(224,211,22)" rx="2" ry="2" />
<text  x="503.03" y="1103.5" ></text>
</g>
<g >
<title>lru_add_drain (571 samples, 0.13%)</title><rect x="829.2" y="949" width="1.5" height="15.0" fill="rgb(211,41,11)" rx="2" ry="2" />
<text  x="832.18" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1,021 samples, 0.22%)</title><rect x="501.5" y="1045" width="2.6" height="15.0" fill="rgb(243,37,29)" rx="2" ry="2" />
<text  x="504.47" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (121 samples, 0.03%)</title><rect x="57.9" y="1301" width="0.4" height="15.0" fill="rgb(221,137,21)" rx="2" ry="2" />
<text  x="60.94" y="1311.5" ></text>
</g>
<g >
<title>dequeue_task_fair (158 samples, 0.03%)</title><rect x="731.6" y="741" width="0.5" height="15.0" fill="rgb(211,68,2)" rx="2" ry="2" />
<text  x="734.64" y="751.5" ></text>
</g>
<g >
<title>_itoa_word (136 samples, 0.03%)</title><rect x="356.8" y="789" width="0.3" height="15.0" fill="rgb(253,122,31)" rx="2" ry="2" />
<text  x="359.79" y="799.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (53 samples, 0.01%)</title><rect x="12.1" y="1237" width="0.2" height="15.0" fill="rgb(251,76,26)" rx="2" ry="2" />
<text  x="15.12" y="1247.5" ></text>
</g>
<g >
<title>psi_flags_change (54 samples, 0.01%)</title><rect x="331.2" y="437" width="0.1" height="15.0" fill="rgb(250,38,42)" rx="2" ry="2" />
<text  x="334.18" y="447.5" ></text>
</g>
<g >
<title>putname (43 samples, 0.01%)</title><rect x="863.8" y="965" width="0.1" height="15.0" fill="rgb(214,186,25)" rx="2" ry="2" />
<text  x="866.82" y="975.5" ></text>
</g>
<g >
<title>eventfd_poll (113 samples, 0.02%)</title><rect x="472.8" y="997" width="0.3" height="15.0" fill="rgb(242,174,19)" rx="2" ry="2" />
<text  x="475.77" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_valptr (52 samples, 0.01%)</title><rect x="502.9" y="997" width="0.1" height="15.0" fill="rgb(234,54,24)" rx="2" ry="2" />
<text  x="505.89" y="1007.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (43 samples, 0.01%)</title><rect x="1066.3" y="725" width="0.1" height="15.0" fill="rgb(229,145,33)" rx="2" ry="2" />
<text  x="1069.30" y="735.5" ></text>
</g>
<g >
<title>[[ext4]] (381 samples, 0.08%)</title><rect x="854.0" y="981" width="1.0" height="15.0" fill="rgb(221,214,35)" rx="2" ry="2" />
<text  x="857.03" y="991.5" ></text>
</g>
<g >
<title>validate_xmit_skb (131 samples, 0.03%)</title><rect x="415.9" y="405" width="0.4" height="15.0" fill="rgb(223,84,44)" rx="2" ry="2" />
<text  x="418.92" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (1,469 samples, 0.32%)</title><rect x="1106.6" y="1077" width="3.9" height="15.0" fill="rgb(230,214,5)" rx="2" ry="2" />
<text  x="1109.64" y="1087.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (2,135 samples, 0.47%)</title><rect x="733.9" y="917" width="5.5" height="15.0" fill="rgb(229,112,6)" rx="2" ry="2" />
<text  x="736.86" y="927.5" ></text>
</g>
<g >
<title>__schedule (63 samples, 0.01%)</title><rect x="544.6" y="533" width="0.1" height="15.0" fill="rgb(209,5,14)" rx="2" ry="2" />
<text  x="547.59" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (46 samples, 0.01%)</title><rect x="348.6" y="869" width="0.1" height="15.0" fill="rgb(242,73,23)" rx="2" ry="2" />
<text  x="351.56" y="879.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (81 samples, 0.02%)</title><rect x="1035.4" y="869" width="0.2" height="15.0" fill="rgb(215,176,29)" rx="2" ry="2" />
<text  x="1038.37" y="879.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (81 samples, 0.02%)</title><rect x="1049.1" y="709" width="0.2" height="15.0" fill="rgb(219,191,52)" rx="2" ry="2" />
<text  x="1052.06" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (115 samples, 0.03%)</title><rect x="996.6" y="949" width="0.3" height="15.0" fill="rgb(211,84,5)" rx="2" ry="2" />
<text  x="999.64" y="959.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_fixed_flag (261 samples, 0.06%)</title><rect x="714.3" y="693" width="0.7" height="15.0" fill="rgb(252,160,17)" rx="2" ry="2" />
<text  x="717.27" y="703.5" ></text>
</g>
<g >
<title>do_epoll_ctl (1,715 samples, 0.38%)</title><rect x="285.5" y="821" width="4.4" height="15.0" fill="rgb(218,0,53)" rx="2" ry="2" />
<text  x="288.46" y="831.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;char [24]&gt; (351 samples, 0.08%)</title><rect x="628.0" y="1077" width="0.9" height="15.0" fill="rgb(222,224,24)" rx="2" ry="2" />
<text  x="630.98" y="1087.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (53 samples, 0.01%)</title><rect x="1069.0" y="885" width="0.2" height="15.0" fill="rgb(237,205,20)" rx="2" ry="2" />
<text  x="1072.03" y="895.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (1,622 samples, 0.36%)</title><rect x="343.3" y="773" width="4.2" height="15.0" fill="rgb(239,188,23)" rx="2" ry="2" />
<text  x="346.29" y="783.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (47 samples, 0.01%)</title><rect x="818.5" y="949" width="0.2" height="15.0" fill="rgb(248,23,18)" rx="2" ry="2" />
<text  x="821.53" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (85 samples, 0.02%)</title><rect x="927.3" y="805" width="0.2" height="15.0" fill="rgb(209,44,47)" rx="2" ry="2" />
<text  x="930.27" y="815.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (1,722 samples, 0.38%)</title><rect x="963.8" y="917" width="4.5" height="15.0" fill="rgb(244,30,40)" rx="2" ry="2" />
<text  x="966.82" y="927.5" ></text>
</g>
<g >
<title>__count_memcg_events (132 samples, 0.03%)</title><rect x="898.8" y="869" width="0.4" height="15.0" fill="rgb(232,65,49)" rx="2" ry="2" />
<text  x="901.81" y="879.5" ></text>
</g>
<g >
<title>mmap@plt (47 samples, 0.01%)</title><rect x="893.1" y="1061" width="0.2" height="15.0" fill="rgb(234,195,49)" rx="2" ry="2" />
<text  x="896.14" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;webserver::Channel&gt;*, std::shared_ptr&lt;webserver::Channel&gt; &gt; (21,590 samples, 4.75%)</title><rect x="166.0" y="1077" width="56.1" height="15.0" fill="rgb(253,38,45)" rx="2" ry="2" />
<text  x="168.97" y="1087.5" >std::..</text>
</g>
<g >
<title>__x64_sys_close (199 samples, 0.04%)</title><rect x="1080.4" y="885" width="0.5" height="15.0" fill="rgb(248,142,28)" rx="2" ry="2" />
<text  x="1083.37" y="895.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (320 samples, 0.07%)</title><rect x="609.0" y="821" width="0.8" height="15.0" fill="rgb(245,151,41)" rx="2" ry="2" />
<text  x="611.99" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (55 samples, 0.01%)</title><rect x="137.3" y="1301" width="0.2" height="15.0" fill="rgb(242,138,37)" rx="2" ry="2" />
<text  x="140.32" y="1311.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::parse_header (11,450 samples, 2.52%)</title><rect x="756.1" y="1077" width="29.8" height="15.0" fill="rgb(247,94,18)" rx="2" ry="2" />
<text  x="759.10" y="1087.5" >we..</text>
</g>
<g >
<title>[[nf_conntrack]] (64 samples, 0.01%)</title><rect x="1090.7" y="597" width="0.2" height="15.0" fill="rgb(211,9,31)" rx="2" ry="2" />
<text  x="1093.73" y="607.5" ></text>
</g>
<g >
<title>invalidate_bh_lrus_cpu (64 samples, 0.01%)</title><rect x="839.6" y="901" width="0.2" height="15.0" fill="rgb(230,8,29)" rx="2" ry="2" />
<text  x="842.59" y="911.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (356 samples, 0.08%)</title><rect x="1086.2" y="597" width="0.9" height="15.0" fill="rgb(221,134,50)" rx="2" ry="2" />
<text  x="1089.17" y="607.5" ></text>
</g>
<g >
<title>_IO_new_file_write (8,859 samples, 1.95%)</title><rect x="314.4" y="693" width="23.0" height="15.0" fill="rgb(238,125,37)" rx="2" ry="2" />
<text  x="317.37" y="703.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::base (58 samples, 0.01%)</title><rect x="302.7" y="741" width="0.2" height="15.0" fill="rgb(210,206,42)" rx="2" ry="2" />
<text  x="305.71" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::TcpSocket&gt;::~shared_ptr (42 samples, 0.01%)</title><rect x="1110.6" y="1093" width="0.1" height="15.0" fill="rgb(238,85,44)" rx="2" ry="2" />
<text  x="1113.57" y="1103.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,277 samples, 0.28%)</title><rect x="1096.7" y="341" width="3.3" height="15.0" fill="rgb(237,19,43)" rx="2" ry="2" />
<text  x="1099.68" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (438 samples, 0.10%)</title><rect x="678.1" y="837" width="1.1" height="15.0" fill="rgb(243,213,17)" rx="2" ry="2" />
<text  x="681.11" y="847.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (173 samples, 0.04%)</title><rect x="974.2" y="1013" width="0.5" height="15.0" fill="rgb(232,90,27)" rx="2" ry="2" />
<text  x="977.23" y="1023.5" ></text>
</g>
<g >
<title>unmap_vmas (1,564 samples, 0.34%)</title><rect x="840.7" y="949" width="4.1" height="15.0" fill="rgb(254,67,18)" rx="2" ry="2" />
<text  x="843.73" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (164 samples, 0.04%)</title><rect x="1109.8" y="789" width="0.5" height="15.0" fill="rgb(218,50,31)" rx="2" ry="2" />
<text  x="1112.83" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (279 samples, 0.06%)</title><rect x="456.5" y="789" width="0.7" height="15.0" fill="rgb(248,11,8)" rx="2" ry="2" />
<text  x="459.51" y="799.5" ></text>
</g>
<g >
<title>put_prev_entity (46 samples, 0.01%)</title><rect x="711.6" y="613" width="0.1" height="15.0" fill="rgb(232,205,24)" rx="2" ry="2" />
<text  x="714.60" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (634 samples, 0.14%)</title><rect x="779.8" y="1013" width="1.7" height="15.0" fill="rgb(235,218,1)" rx="2" ry="2" />
<text  x="782.83" y="1023.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (104 samples, 0.02%)</title><rect x="475.9" y="997" width="0.3" height="15.0" fill="rgb(224,73,21)" rx="2" ry="2" />
<text  x="478.94" y="1007.5" ></text>
</g>
<g >
<title>update_rq_clock (118 samples, 0.03%)</title><rect x="556.8" y="517" width="0.3" height="15.0" fill="rgb(251,17,8)" rx="2" ry="2" />
<text  x="559.75" y="527.5" ></text>
</g>
<g >
<title>update_rq_clock (123 samples, 0.03%)</title><rect x="489.7" y="965" width="0.3" height="15.0" fill="rgb(243,116,24)" rx="2" ry="2" />
<text  x="492.66" y="975.5" ></text>
</g>
<g >
<title>up_read (74 samples, 0.02%)</title><rect x="558.3" y="581" width="0.2" height="15.0" fill="rgb(217,0,41)" rx="2" ry="2" />
<text  x="561.27" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (62 samples, 0.01%)</title><rect x="700.8" y="837" width="0.2" height="15.0" fill="rgb(253,34,5)" rx="2" ry="2" />
<text  x="703.83" y="847.5" ></text>
</g>
<g >
<title>nd_jump_root (164 samples, 0.04%)</title><rect x="862.7" y="933" width="0.5" height="15.0" fill="rgb(239,223,44)" rx="2" ry="2" />
<text  x="865.75" y="943.5" ></text>
</g>
<g >
<title>webserver::Channel::get_fd (58 samples, 0.01%)</title><rect x="139.5" y="1301" width="0.1" height="15.0" fill="rgb(226,120,11)" rx="2" ry="2" />
<text  x="142.48" y="1311.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::formatter*, std::default_delete&lt;spdlog::formatter&gt; &gt; (41 samples, 0.01%)</title><rect x="24.9" y="1301" width="0.2" height="15.0" fill="rgb(215,116,34)" rx="2" ry="2" />
<text  x="27.95" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::Channel,  (1,181 samples, 0.26%)</title><rect x="1141.3" y="997" width="3.1" height="15.0" fill="rgb(238,85,21)" rx="2" ry="2" />
<text  x="1144.31" y="1007.5" ></text>
</g>
<g >
<title>__check_object_size (222 samples, 0.05%)</title><rect x="317.6" y="565" width="0.6" height="15.0" fill="rgb(223,120,20)" rx="2" ry="2" />
<text  x="320.62" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (613 samples, 0.13%)</title><rect x="784.0" y="997" width="1.6" height="15.0" fill="rgb(244,213,16)" rx="2" ry="2" />
<text  x="787.03" y="1007.5" ></text>
</g>
<g >
<title>skb_rbtree_purge (53 samples, 0.01%)</title><rect x="202.4" y="181" width="0.1" height="15.0" fill="rgb(212,37,10)" rx="2" ry="2" />
<text  x="205.36" y="191.5" ></text>
</g>
<g >
<title>__napi_poll (3,184 samples, 0.70%)</title><rect x="1093.1" y="581" width="8.3" height="15.0" fill="rgb(254,137,12)" rx="2" ry="2" />
<text  x="1096.11" y="591.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (67 samples, 0.01%)</title><rect x="529.8" y="709" width="0.1" height="15.0" fill="rgb(254,67,45)" rx="2" ry="2" />
<text  x="532.77" y="719.5" ></text>
</g>
<g >
<title>wake_up_q (1,474 samples, 0.32%)</title><rect x="734.7" y="805" width="3.9" height="15.0" fill="rgb(248,147,22)" rx="2" ry="2" />
<text  x="737.74" y="815.5" ></text>
</g>
<g >
<title>update_curr (151 samples, 0.03%)</title><rect x="674.2" y="709" width="0.4" height="15.0" fill="rgb(211,51,32)" rx="2" ry="2" />
<text  x="677.23" y="719.5" ></text>
</g>
<g >
<title>spdlog::details::null_scoped_padder::null_scoped_padder (194 samples, 0.04%)</title><rect x="58.8" y="1301" width="0.5" height="15.0" fill="rgb(229,191,18)" rx="2" ry="2" />
<text  x="61.83" y="1311.5" ></text>
</g>
<g >
<title>cpumask_any_but (68 samples, 0.01%)</title><rect x="831.5" y="917" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="834.49" y="927.5" ></text>
</g>
<g >
<title>all (454,153 samples, 100%)</title><rect x="10.0" y="1349" width="1180.0" height="15.0" fill="rgb(207,27,38)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>ksys_write (7,529 samples, 1.66%)</title><rect x="315.3" y="629" width="19.6" height="15.0" fill="rgb(210,146,26)" rx="2" ry="2" />
<text  x="318.31" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="930.3" y="853" width="0.2" height="15.0" fill="rgb(234,46,28)" rx="2" ry="2" />
<text  x="933.29" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,188 samples, 0.48%)</title><rect x="672.4" y="837" width="5.7" height="15.0" fill="rgb(226,151,51)" rx="2" ry="2" />
<text  x="675.39" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (49 samples, 0.01%)</title><rect x="762.4" y="1045" width="0.1" height="15.0" fill="rgb(207,15,39)" rx="2" ry="2" />
<text  x="765.35" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::v_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (185 samples, 0.04%)</title><rect x="931.2" y="901" width="0.5" height="15.0" fill="rgb(237,34,1)" rx="2" ry="2" />
<text  x="934.24" y="911.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (67 samples, 0.01%)</title><rect x="498.2" y="1029" width="0.2" height="15.0" fill="rgb(233,224,32)" rx="2" ry="2" />
<text  x="501.24" y="1039.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, webserver::HttpManager*, std::default_delete&lt;webserver::HttpManager&gt; &gt; (56 samples, 0.01%)</title><rect x="126.2" y="1301" width="0.2" height="15.0" fill="rgb(210,82,26)" rx="2" ry="2" />
<text  x="129.25" y="1311.5" ></text>
</g>
<g >
<title>__errno_location (85 samples, 0.02%)</title><rect x="236.6" y="933" width="0.3" height="15.0" fill="rgb(213,179,32)" rx="2" ry="2" />
<text  x="239.64" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (286 samples, 0.06%)</title><rect x="530.0" y="709" width="0.7" height="15.0" fill="rgb(243,61,12)" rx="2" ry="2" />
<text  x="532.98" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (106 samples, 0.02%)</title><rect x="113.9" y="1301" width="0.3" height="15.0" fill="rgb(243,177,8)" rx="2" ry="2" />
<text  x="116.89" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (192 samples, 0.04%)</title><rect x="634.5" y="981" width="0.5" height="15.0" fill="rgb(217,212,13)" rx="2" ry="2" />
<text  x="637.53" y="991.5" ></text>
</g>
<g >
<title>timespec64_add_safe (79 samples, 0.02%)</title><rect x="492.5" y="1013" width="0.2" height="15.0" fill="rgb(213,54,53)" rx="2" ry="2" />
<text  x="495.49" y="1023.5" ></text>
</g>
<g >
<title>[web_server] (45 samples, 0.01%)</title><rect x="914.6" y="981" width="0.1" height="15.0" fill="rgb(232,129,29)" rx="2" ry="2" />
<text  x="917.57" y="991.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (64 samples, 0.01%)</title><rect x="575.7" y="629" width="0.2" height="15.0" fill="rgb(234,219,27)" rx="2" ry="2" />
<text  x="578.71" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (136 samples, 0.03%)</title><rect x="512.8" y="933" width="0.4" height="15.0" fill="rgb(245,21,40)" rx="2" ry="2" />
<text  x="515.81" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (55 samples, 0.01%)</title><rect x="1107.7" y="885" width="0.1" height="15.0" fill="rgb(229,136,51)" rx="2" ry="2" />
<text  x="1110.71" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (43 samples, 0.01%)</title><rect x="629.7" y="1029" width="0.1" height="15.0" fill="rgb(239,205,1)" rx="2" ry="2" />
<text  x="632.72" y="1039.5" ></text>
</g>
<g >
<title>try_to_wake_up (610 samples, 0.13%)</title><rect x="712.6" y="661" width="1.6" height="15.0" fill="rgb(240,94,30)" rx="2" ry="2" />
<text  x="715.60" y="671.5" ></text>
</g>
<g >
<title>__ip_local_out (1,645 samples, 0.36%)</title><rect x="187.3" y="453" width="4.3" height="15.0" fill="rgb(227,201,35)" rx="2" ry="2" />
<text  x="190.30" y="463.5" ></text>
</g>
<g >
<title>ldsem_down_read (55 samples, 0.01%)</title><rect x="953.9" y="693" width="0.2" height="15.0" fill="rgb(243,153,11)" rx="2" ry="2" />
<text  x="956.94" y="703.5" ></text>
</g>
<g >
<title>[[ip_tables]] (106 samples, 0.02%)</title><rect x="1089.2" y="629" width="0.3" height="15.0" fill="rgb(232,52,21)" rx="2" ry="2" />
<text  x="1092.22" y="639.5" ></text>
</g>
<g >
<title>queue_work_on (128 samples, 0.03%)</title><rect x="656.8" y="693" width="0.4" height="15.0" fill="rgb(222,178,42)" rx="2" ry="2" />
<text  x="659.83" y="703.5" ></text>
</g>
<g >
<title>call_rcu (46 samples, 0.01%)</title><rect x="1082.3" y="773" width="0.1" height="15.0" fill="rgb(220,85,0)" rx="2" ry="2" />
<text  x="1085.30" y="783.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (46 samples, 0.01%)</title><rect x="920.3" y="917" width="0.1" height="15.0" fill="rgb(231,167,38)" rx="2" ry="2" />
<text  x="923.32" y="927.5" ></text>
</g>
<g >
<title>select_task_rq_fair (167 samples, 0.04%)</title><rect x="713.0" y="645" width="0.5" height="15.0" fill="rgb(205,160,46)" rx="2" ry="2" />
<text  x="716.03" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (319 samples, 0.07%)</title><rect x="945.4" y="613" width="0.9" height="15.0" fill="rgb(244,199,14)" rx="2" ry="2" />
<text  x="948.43" y="623.5" ></text>
</g>
<g >
<title>__queue_work (80 samples, 0.02%)</title><rect x="942.0" y="645" width="0.2" height="15.0" fill="rgb(245,166,37)" rx="2" ry="2" />
<text  x="945.01" y="655.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (42,382 samples, 9.33%)</title><rect x="512.0" y="1013" width="110.1" height="15.0" fill="rgb(214,127,52)" rx="2" ry="2" />
<text  x="515.01" y="1023.5" >std::_Bind&lt;vo..</text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (54 samples, 0.01%)</title><rect x="1109.6" y="869" width="0.1" height="15.0" fill="rgb(251,225,49)" rx="2" ry="2" />
<text  x="1112.56" y="879.5" ></text>
</g>
<g >
<title>std::function&lt;void  (853 samples, 0.19%)</title><rect x="1076.7" y="1093" width="2.3" height="15.0" fill="rgb(211,111,12)" rx="2" ry="2" />
<text  x="1079.75" y="1103.5" ></text>
</g>
<g >
<title>__d_alloc (634 samples, 0.14%)</title><rect x="1163.9" y="933" width="1.6" height="15.0" fill="rgb(220,174,28)" rx="2" ry="2" />
<text  x="1166.86" y="943.5" ></text>
</g>
<g >
<title>security_inode_alloc (446 samples, 0.10%)</title><rect x="1157.4" y="917" width="1.2" height="15.0" fill="rgb(215,52,36)" rx="2" ry="2" />
<text  x="1160.41" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (224 samples, 0.05%)</title><rect x="295.9" y="725" width="0.6" height="15.0" fill="rgb(220,204,8)" rx="2" ry="2" />
<text  x="298.95" y="735.5" ></text>
</g>
<g >
<title>__ksize (152 samples, 0.03%)</title><rect x="454.6" y="773" width="0.4" height="15.0" fill="rgb(243,181,39)" rx="2" ry="2" />
<text  x="457.65" y="783.5" ></text>
</g>
<g >
<title>_int_free (67 samples, 0.01%)</title><rect x="607.3" y="805" width="0.2" height="15.0" fill="rgb(242,38,49)" rx="2" ry="2" />
<text  x="610.30" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (43 samples, 0.01%)</title><rect x="131.6" y="1301" width="0.1" height="15.0" fill="rgb(250,101,5)" rx="2" ry="2" />
<text  x="134.57" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (53 samples, 0.01%)</title><rect x="694.9" y="837" width="0.1" height="15.0" fill="rgb(239,115,4)" rx="2" ry="2" />
<text  x="697.88" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (74 samples, 0.02%)</title><rect x="646.0" y="837" width="0.1" height="15.0" fill="rgb(252,89,25)" rx="2" ry="2" />
<text  x="648.95" y="847.5" ></text>
</g>
<g >
<title>update_load_avg (124 samples, 0.03%)</title><rect x="484.2" y="933" width="0.3" height="15.0" fill="rgb(213,78,13)" rx="2" ry="2" />
<text  x="487.18" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (409 samples, 0.09%)</title><rect x="790.4" y="1013" width="1.0" height="15.0" fill="rgb(232,47,6)" rx="2" ry="2" />
<text  x="793.36" y="1023.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (210 samples, 0.05%)</title><rect x="262.0" y="853" width="0.6" height="15.0" fill="rgb(209,106,11)" rx="2" ry="2" />
<text  x="265.02" y="863.5" ></text>
</g>
<g >
<title>pty_write (311 samples, 0.07%)</title><rect x="941.6" y="677" width="0.8" height="15.0" fill="rgb(231,198,32)" rx="2" ry="2" />
<text  x="944.61" y="687.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (24,227 samples, 5.33%)</title><rect x="515.1" y="869" width="62.9" height="15.0" fill="rgb(245,79,10)" rx="2" ry="2" />
<text  x="518.09" y="879.5" >spdlog..</text>
</g>
<g >
<title>kmem_cache_alloc (907 samples, 0.20%)</title><rect x="1158.8" y="917" width="2.4" height="15.0" fill="rgb(252,36,18)" rx="2" ry="2" />
<text  x="1161.80" y="927.5" ></text>
</g>
<g >
<title>std::construct_at&lt;webserver::TcpSocket, int&amp;, webserver::InetAddr&gt; (55 samples, 0.01%)</title><rect x="1169.6" y="965" width="0.2" height="15.0" fill="rgb(235,83,33)" rx="2" ry="2" />
<text  x="1172.61" y="975.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,294 samples, 0.28%)</title><rect x="1064.5" y="805" width="3.3" height="15.0" fill="rgb(236,116,17)" rx="2" ry="2" />
<text  x="1067.46" y="815.5" ></text>
</g>
<g >
<title>webserver::EventLoop::clean_wakeup (2,276 samples, 0.50%)</title><rect x="229.8" y="965" width="5.9" height="15.0" fill="rgb(215,150,33)" rx="2" ry="2" />
<text  x="232.78" y="975.5" ></text>
</g>
<g >
<title>__fget_light (166 samples, 0.04%)</title><rect x="935.9" y="741" width="0.4" height="15.0" fill="rgb(217,158,15)" rx="2" ry="2" />
<text  x="938.88" y="751.5" ></text>
</g>
<g >
<title>update_load_avg (141 samples, 0.03%)</title><rect x="723.4" y="597" width="0.3" height="15.0" fill="rgb(217,76,37)" rx="2" ry="2" />
<text  x="726.36" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::count_digits&lt;unsigned long&gt; (193 samples, 0.04%)</title><rect x="928.3" y="853" width="0.5" height="15.0" fill="rgb(217,96,14)" rx="2" ry="2" />
<text  x="931.28" y="863.5" ></text>
</g>
<g >
<title>fmt::v8::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::~basic_memory_buffer (85 samples, 0.02%)</title><rect x="522.4" y="805" width="0.2" height="15.0" fill="rgb(247,118,22)" rx="2" ry="2" />
<text  x="525.36" y="815.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (5,980 samples, 1.32%)</title><rect x="1088.0" y="741" width="15.6" height="15.0" fill="rgb(241,1,10)" rx="2" ry="2" />
<text  x="1091.03" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (60 samples, 0.01%)</title><rect x="96.4" y="1301" width="0.1" height="15.0" fill="rgb(251,149,8)" rx="2" ry="2" />
<text  x="99.37" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (96 samples, 0.02%)</title><rect x="694.5" y="901" width="0.2" height="15.0" fill="rgb(232,127,33)" rx="2" ry="2" />
<text  x="697.47" y="911.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (141 samples, 0.03%)</title><rect x="989.0" y="981" width="0.4" height="15.0" fill="rgb(235,103,26)" rx="2" ry="2" />
<text  x="992.01" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_Vector_base (118 samples, 0.03%)</title><rect x="509.9" y="1077" width="0.3" height="15.0" fill="rgb(233,214,6)" rx="2" ry="2" />
<text  x="512.86" y="1087.5" ></text>
</g>
<g >
<title>_IO_new_do_write (9,489 samples, 2.09%)</title><rect x="536.9" y="757" width="24.7" height="15.0" fill="rgb(254,177,39)" rx="2" ry="2" />
<text  x="539.93" y="767.5" >_..</text>
</g>
<g >
<title>inode_init_always (749 samples, 0.16%)</title><rect x="1156.6" y="933" width="2.0" height="15.0" fill="rgb(216,215,36)" rx="2" ry="2" />
<text  x="1159.63" y="943.5" ></text>
</g>
<g >
<title>std::mutex::unlock (2,631 samples, 0.58%)</title><rect x="570.4" y="789" width="6.8" height="15.0" fill="rgb(217,47,50)" rx="2" ry="2" />
<text  x="573.37" y="799.5" ></text>
</g>
<g >
<title>_int_free (66 samples, 0.01%)</title><rect x="908.6" y="901" width="0.2" height="15.0" fill="rgb(239,152,9)" rx="2" ry="2" />
<text  x="911.62" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="532.7" y="693" width="0.2" height="15.0" fill="rgb(241,153,2)" rx="2" ry="2" />
<text  x="535.73" y="703.5" ></text>
</g>
<g >
<title>update_rq_clock (81 samples, 0.02%)</title><rect x="209.7" y="117" width="0.2" height="15.0" fill="rgb(252,155,54)" rx="2" ry="2" />
<text  x="212.67" y="127.5" ></text>
</g>
<g >
<title>__fget_files (116 samples, 0.03%)</title><rect x="230.8" y="853" width="0.3" height="15.0" fill="rgb(234,157,18)" rx="2" ry="2" />
<text  x="233.81" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (382 samples, 0.08%)</title><rect x="1142.9" y="885" width="1.0" height="15.0" fill="rgb(254,44,25)" rx="2" ry="2" />
<text  x="1145.88" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (245 samples, 0.05%)</title><rect x="646.9" y="885" width="0.7" height="15.0" fill="rgb(232,151,32)" rx="2" ry="2" />
<text  x="649.93" y="895.5" ></text>
</g>
<g >
<title>__GI__IO_file_overflow (44 samples, 0.01%)</title><rect x="956.9" y="869" width="0.1" height="15.0" fill="rgb(208,68,53)" rx="2" ry="2" />
<text  x="959.88" y="879.5" ></text>
</g>
<g >
<title>queue_work_on (106 samples, 0.02%)</title><rect x="941.9" y="661" width="0.3" height="15.0" fill="rgb(205,167,13)" rx="2" ry="2" />
<text  x="944.95" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (209 samples, 0.05%)</title><rect x="90.8" y="1301" width="0.5" height="15.0" fill="rgb(236,74,7)" rx="2" ry="2" />
<text  x="93.78" y="1311.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (431 samples, 0.09%)</title><rect x="555.6" y="517" width="1.1" height="15.0" fill="rgb(236,107,33)" rx="2" ry="2" />
<text  x="558.58" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_mbegin (44 samples, 0.01%)</title><rect x="991.0" y="981" width="0.1" height="15.0" fill="rgb(214,31,7)" rx="2" ry="2" />
<text  x="993.96" y="991.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (190 samples, 0.04%)</title><rect x="531.3" y="773" width="0.5" height="15.0" fill="rgb(223,70,33)" rx="2" ry="2" />
<text  x="534.27" y="783.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,473 samples, 0.32%)</title><rect x="429.0" y="373" width="3.8" height="15.0" fill="rgb(254,24,51)" rx="2" ry="2" />
<text  x="431.97" y="383.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (224 samples, 0.05%)</title><rect x="757.5" y="1013" width="0.5" height="15.0" fill="rgb(222,111,39)" rx="2" ry="2" />
<text  x="760.47" y="1023.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (129 samples, 0.03%)</title><rect x="1031.0" y="949" width="0.3" height="15.0" fill="rgb(223,37,52)" rx="2" ry="2" />
<text  x="1033.98" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (75 samples, 0.02%)</title><rect x="640.3" y="901" width="0.2" height="15.0" fill="rgb(213,36,24)" rx="2" ry="2" />
<text  x="643.27" y="911.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (335 samples, 0.07%)</title><rect x="519.7" y="853" width="0.9" height="15.0" fill="rgb(242,19,54)" rx="2" ry="2" />
<text  x="522.69" y="863.5" ></text>
</g>
<g >
<title>__mod_node_page_state (82 samples, 0.02%)</title><rect x="902.2" y="773" width="0.3" height="15.0" fill="rgb(230,206,33)" rx="2" ry="2" />
<text  x="905.24" y="783.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char const  (21,318 samples, 4.69%)</title><rect x="914.3" y="1013" width="55.4" height="15.0" fill="rgb(216,158,35)" rx="2" ry="2" />
<text  x="917.27" y="1023.5" >spdlo..</text>
</g>
<g >
<title>[[nf_nat]] (51 samples, 0.01%)</title><rect x="211.7" y="277" width="0.1" height="15.0" fill="rgb(227,33,46)" rx="2" ry="2" />
<text  x="214.71" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (47 samples, 0.01%)</title><rect x="909.2" y="981" width="0.1" height="15.0" fill="rgb(239,11,16)" rx="2" ry="2" />
<text  x="912.17" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (369 samples, 0.08%)</title><rect x="1078.0" y="1077" width="1.0" height="15.0" fill="rgb(240,155,19)" rx="2" ry="2" />
<text  x="1081.00" y="1087.5" ></text>
</g>
<g >
<title>enqueue_entity (534 samples, 0.12%)</title><rect x="553.3" y="469" width="1.3" height="15.0" fill="rgb(246,194,1)" rx="2" ry="2" />
<text  x="556.26" y="479.5" ></text>
</g>
<g >
<title>do_softirq (3,378 samples, 0.74%)</title><rect x="1092.6" y="629" width="8.8" height="15.0" fill="rgb(246,107,20)" rx="2" ry="2" />
<text  x="1095.63" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (221 samples, 0.05%)</title><rect x="689.7" y="853" width="0.5" height="15.0" fill="rgb(225,217,49)" rx="2" ry="2" />
<text  x="692.67" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_put_node (140 samples, 0.03%)</title><rect x="1108.1" y="917" width="0.4" height="15.0" fill="rgb(247,61,40)" rx="2" ry="2" />
<text  x="1111.11" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::detail::vformat_to&lt;char&gt; (1,311 samples, 0.29%)</title><rect x="516.0" y="853" width="3.4" height="15.0" fill="rgb(249,214,37)" rx="2" ry="2" />
<text  x="518.99" y="863.5" ></text>
</g>
<g >
<title>[[nf_conntrack_netlink]] (150 samples, 0.03%)</title><rect x="1102.0" y="613" width="0.4" height="15.0" fill="rgb(245,163,24)" rx="2" ry="2" />
<text  x="1104.98" y="623.5" ></text>
</g>
<g >
<title>x86_pmu_disable (39 samples, 0.01%)</title><rect x="482.7" y="949" width="0.1" height="15.0" fill="rgb(243,96,25)" rx="2" ry="2" />
<text  x="485.68" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (207 samples, 0.05%)</title><rect x="275.3" y="789" width="0.5" height="15.0" fill="rgb(235,39,54)" rx="2" ry="2" />
<text  x="278.28" y="799.5" ></text>
</g>
<g >
<title>[web_server] (78 samples, 0.02%)</title><rect x="687.5" y="1013" width="0.2" height="15.0" fill="rgb(229,89,19)" rx="2" ry="2" />
<text  x="690.45" y="1023.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (96 samples, 0.02%)</title><rect x="698.1" y="853" width="0.2" height="15.0" fill="rgb(232,35,9)" rx="2" ry="2" />
<text  x="701.06" y="863.5" ></text>
</g>
<g >
<title>[[ext4]] (313 samples, 0.07%)</title><rect x="881.9" y="933" width="0.8" height="15.0" fill="rgb(229,120,2)" rx="2" ry="2" />
<text  x="884.88" y="943.5" ></text>
</g>
<g >
<title>rb_erase (44 samples, 0.01%)</title><rect x="370.3" y="741" width="0.1" height="15.0" fill="rgb(240,109,15)" rx="2" ry="2" />
<text  x="373.27" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (51 samples, 0.01%)</title><rect x="648.3" y="933" width="0.1" height="15.0" fill="rgb(254,80,24)" rx="2" ry="2" />
<text  x="651.28" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (73 samples, 0.02%)</title><rect x="257.3" y="837" width="0.2" height="15.0" fill="rgb(227,214,2)" rx="2" ry="2" />
<text  x="260.30" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr (123 samples, 0.03%)</title><rect x="582.7" y="805" width="0.4" height="15.0" fill="rgb(218,222,20)" rx="2" ry="2" />
<text  x="585.74" y="815.5" ></text>
</g>
<g >
<title>[[iptable_filter]] (64 samples, 0.01%)</title><rect x="380.0" y="693" width="0.2" height="15.0" fill="rgb(227,156,29)" rx="2" ry="2" />
<text  x="383.00" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (62 samples, 0.01%)</title><rect x="307.3" y="661" width="0.1" height="15.0" fill="rgb(231,38,41)" rx="2" ry="2" />
<text  x="310.27" y="671.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (59 samples, 0.01%)</title><rect x="1082.4" y="773" width="0.2" height="15.0" fill="rgb(228,193,33)" rx="2" ry="2" />
<text  x="1085.42" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (485 samples, 0.11%)</title><rect x="257.7" y="917" width="1.3" height="15.0" fill="rgb(248,225,53)" rx="2" ry="2" />
<text  x="260.71" y="927.5" ></text>
</g>
<g >
<title>filp_close (288 samples, 0.06%)</title><rect x="172.8" y="661" width="0.7" height="15.0" fill="rgb(205,178,53)" rx="2" ry="2" />
<text  x="175.76" y="671.5" ></text>
</g>
<g >
<title>update_rq_clock (97 samples, 0.02%)</title><rect x="332.5" y="485" width="0.3" height="15.0" fill="rgb(222,195,40)" rx="2" ry="2" />
<text  x="335.54" y="495.5" ></text>
</g>
<g >
<title>webserver::HttpHandler::handle_keep_alive (5,183 samples, 1.14%)</title><rect x="742.6" y="1077" width="13.5" height="15.0" fill="rgb(209,197,32)" rx="2" ry="2" />
<text  x="745.63" y="1087.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (113 samples, 0.02%)</title><rect x="929.4" y="901" width="0.3" height="15.0" fill="rgb(212,56,24)" rx="2" ry="2" />
<text  x="932.40" y="911.5" ></text>
</g>
<g >
<title>update_curr (44 samples, 0.01%)</title><rect x="1072.4" y="725" width="0.2" height="15.0" fill="rgb(209,93,20)" rx="2" ry="2" />
<text  x="1075.45" y="735.5" ></text>
</g>
<g >
<title>cpumask_next (68 samples, 0.01%)</title><rect x="427.5" y="389" width="0.1" height="15.0" fill="rgb(252,90,47)" rx="2" ry="2" />
<text  x="430.46" y="399.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (68 samples, 0.01%)</title><rect x="1073.6" y="789" width="0.1" height="15.0" fill="rgb(217,56,9)" rx="2" ry="2" />
<text  x="1076.56" y="799.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (284 samples, 0.06%)</title><rect x="1114.1" y="965" width="0.7" height="15.0" fill="rgb(206,147,30)" rx="2" ry="2" />
<text  x="1117.08" y="975.5" ></text>
</g>
<g >
<title>errseq_sample (70 samples, 0.02%)</title><rect x="884.0" y="933" width="0.2" height="15.0" fill="rgb(220,24,19)" rx="2" ry="2" />
<text  x="886.97" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (117 samples, 0.03%)</title><rect x="996.6" y="965" width="0.3" height="15.0" fill="rgb(226,179,16)" rx="2" ry="2" />
<text  x="999.63" y="975.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;::pair&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, true&gt; (107 samples, 0.02%)</title><rect x="589.5" y="741" width="0.3" height="15.0" fill="rgb(243,214,35)" rx="2" ry="2" />
<text  x="592.47" y="751.5" ></text>
</g>
<g >
<title>insert_work (77 samples, 0.02%)</title><rect x="1051.6" y="693" width="0.2" height="15.0" fill="rgb(206,126,43)" rx="2" ry="2" />
<text  x="1054.64" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (269 samples, 0.06%)</title><rect x="528.2" y="645" width="0.7" height="15.0" fill="rgb(232,98,42)" rx="2" ry="2" />
<text  x="531.22" y="655.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (116 samples, 0.03%)</title><rect x="183.8" y="245" width="0.3" height="15.0" fill="rgb(243,44,27)" rx="2" ry="2" />
<text  x="186.82" y="255.5" ></text>
</g>
<g >
<title>update_load_avg (229 samples, 0.05%)</title><rect x="1126.2" y="805" width="0.6" height="15.0" fill="rgb(217,125,47)" rx="2" ry="2" />
<text  x="1129.22" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (48 samples, 0.01%)</title><rect x="362.4" y="821" width="0.2" height="15.0" fill="rgb(222,107,25)" rx="2" ry="2" />
<text  x="365.44" y="831.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (974 samples, 0.21%)</title><rect x="878.3" y="917" width="2.5" height="15.0" fill="rgb(254,42,5)" rx="2" ry="2" />
<text  x="881.28" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,449 samples, 0.32%)</title><rect x="773.8" y="997" width="3.8" height="15.0" fill="rgb(240,38,37)" rx="2" ry="2" />
<text  x="776.83" y="1007.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (90 samples, 0.02%)</title><rect x="700.8" y="901" width="0.2" height="15.0" fill="rgb(248,192,39)" rx="2" ry="2" />
<text  x="703.76" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (67 samples, 0.01%)</title><rect x="1004.2" y="917" width="0.2" height="15.0" fill="rgb(225,163,31)" rx="2" ry="2" />
<text  x="1007.22" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::format_arg_store&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::format_arg_store (80 samples, 0.02%)</title><rect x="519.4" y="837" width="0.2" height="15.0" fill="rgb(237,56,42)" rx="2" ry="2" />
<text  x="522.42" y="847.5" ></text>
</g>
<g >
<title>__fget_light (181 samples, 0.04%)</title><rect x="651.8" y="773" width="0.5" height="15.0" fill="rgb(212,146,41)" rx="2" ry="2" />
<text  x="654.79" y="783.5" ></text>
</g>
<g >
<title>do_epoll_ctl (1,845 samples, 0.41%)</title><rect x="1009.0" y="869" width="4.8" height="15.0" fill="rgb(247,155,41)" rx="2" ry="2" />
<text  x="1012.00" y="879.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (48 samples, 0.01%)</title><rect x="373.4" y="757" width="0.2" height="15.0" fill="rgb(247,134,40)" rx="2" ry="2" />
<text  x="376.43" y="767.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (43 samples, 0.01%)</title><rect x="929.0" y="853" width="0.2" height="15.0" fill="rgb(209,45,43)" rx="2" ry="2" />
<text  x="932.04" y="863.5" ></text>
</g>
<g >
<title>getname (44 samples, 0.01%)</title><rect x="889.5" y="981" width="0.1" height="15.0" fill="rgb(240,172,34)" rx="2" ry="2" />
<text  x="892.46" y="991.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="309.5" y="677" width="0.2" height="15.0" fill="rgb(251,30,0)" rx="2" ry="2" />
<text  x="312.52" y="687.5" ></text>
</g>
<g >
<title>psi_flags_change (62 samples, 0.01%)</title><rect x="1128.0" y="821" width="0.2" height="15.0" fill="rgb(254,205,43)" rx="2" ry="2" />
<text  x="1131.03" y="831.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::shared_ptr&lt;webserver::Channel, void&gt; (129 samples, 0.03%)</title><rect x="1003.7" y="965" width="0.4" height="15.0" fill="rgb(209,83,33)" rx="2" ry="2" />
<text  x="1006.72" y="975.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (4,388 samples, 0.97%)</title><rect x="1007.0" y="949" width="11.4" height="15.0" fill="rgb(217,37,11)" rx="2" ry="2" />
<text  x="1010.02" y="959.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (106 samples, 0.02%)</title><rect x="1040.7" y="885" width="0.3" height="15.0" fill="rgb(230,200,45)" rx="2" ry="2" />
<text  x="1043.69" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (49 samples, 0.01%)</title><rect x="121.8" y="1301" width="0.1" height="15.0" fill="rgb(244,212,5)" rx="2" ry="2" />
<text  x="124.79" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (67 samples, 0.01%)</title><rect x="915.9" y="949" width="0.2" height="15.0" fill="rgb(249,31,46)" rx="2" ry="2" />
<text  x="918.92" y="959.5" ></text>
</g>
<g >
<title>check_preempt_curr (71 samples, 0.02%)</title><rect x="684.6" y="757" width="0.2" height="15.0" fill="rgb(208,215,42)" rx="2" ry="2" />
<text  x="687.61" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (111 samples, 0.02%)</title><rect x="893.9" y="981" width="0.3" height="15.0" fill="rgb(229,112,32)" rx="2" ry="2" />
<text  x="896.91" y="991.5" ></text>
</g>
<g >
<title>__destroy_inode (546 samples, 0.12%)</title><rect x="176.4" y="581" width="1.5" height="15.0" fill="rgb(220,113,46)" rx="2" ry="2" />
<text  x="179.44" y="591.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (66 samples, 0.01%)</title><rect x="849.5" y="917" width="0.2" height="15.0" fill="rgb(205,219,5)" rx="2" ry="2" />
<text  x="852.48" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (139 samples, 0.03%)</title><rect x="970.1" y="997" width="0.3" height="15.0" fill="rgb(210,33,46)" rx="2" ry="2" />
<text  x="973.06" y="1007.5" ></text>
</g>
<g >
<title>invalidate_bh_lrus_cpu (69 samples, 0.02%)</title><rect x="829.3" y="933" width="0.1" height="15.0" fill="rgb(225,226,44)" rx="2" ry="2" />
<text  x="832.27" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (54 samples, 0.01%)</title><rect x="1035.0" y="949" width="0.2" height="15.0" fill="rgb(210,102,30)" rx="2" ry="2" />
<text  x="1038.02" y="959.5" ></text>
</g>
<g >
<title>available_idle_cpu (46 samples, 0.01%)</title><rect x="713.2" y="629" width="0.1" height="15.0" fill="rgb(247,103,41)" rx="2" ry="2" />
<text  x="716.22" y="639.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (180 samples, 0.04%)</title><rect x="311.2" y="741" width="0.5" height="15.0" fill="rgb(208,47,11)" rx="2" ry="2" />
<text  x="314.21" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (87 samples, 0.02%)</title><rect x="782.5" y="1013" width="0.3" height="15.0" fill="rgb(212,28,35)" rx="2" ry="2" />
<text  x="785.54" y="1023.5" ></text>
</g>
<g >
<title>dequeue_task (39 samples, 0.01%)</title><rect x="482.9" y="965" width="0.1" height="15.0" fill="rgb(244,47,23)" rx="2" ry="2" />
<text  x="485.85" y="975.5" ></text>
</g>
<g >
<title>security_d_instantiate (151 samples, 0.03%)</title><rect x="1165.9" y="933" width="0.4" height="15.0" fill="rgb(245,229,6)" rx="2" ry="2" />
<text  x="1168.93" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (69 samples, 0.02%)</title><rect x="260.5" y="869" width="0.2" height="15.0" fill="rgb(235,33,14)" rx="2" ry="2" />
<text  x="263.50" y="879.5" ></text>
</g>
<g >
<title>std::tuple&lt;webserver::HttpConnection*&gt;::tuple (96 samples, 0.02%)</title><rect x="606.6" y="837" width="0.2" height="15.0" fill="rgb(248,41,34)" rx="2" ry="2" />
<text  x="609.56" y="847.5" ></text>
</g>
<g >
<title>__sys_shutdown (1,151 samples, 0.25%)</title><rect x="751.4" y="965" width="3.0" height="15.0" fill="rgb(248,53,41)" rx="2" ry="2" />
<text  x="754.37" y="975.5" ></text>
</g>
<g >
<title>std::enable_shared_from_this&lt;webserver::Channel&gt;::~enable_shared_from_this (51 samples, 0.01%)</title><rect x="168.7" y="869" width="0.1" height="15.0" fill="rgb(238,180,14)" rx="2" ry="2" />
<text  x="171.71" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_drop_node (505 samples, 0.11%)</title><rect x="272.2" y="773" width="1.4" height="15.0" fill="rgb(208,177,35)" rx="2" ry="2" />
<text  x="275.25" y="783.5" ></text>
</g>
<g >
<title>set_normalized_timespec64 (81 samples, 0.02%)</title><rect x="491.0" y="997" width="0.2" height="15.0" fill="rgb(221,17,6)" rx="2" ry="2" />
<text  x="494.04" y="1007.5" ></text>
</g>
<g >
<title>futex_wake (1,732 samples, 0.38%)</title><rect x="680.5" y="821" width="4.5" height="15.0" fill="rgb(242,147,20)" rx="2" ry="2" />
<text  x="683.47" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock (55 samples, 0.01%)</title><rect x="712.9" y="629" width="0.1" height="15.0" fill="rgb(244,111,11)" rx="2" ry="2" />
<text  x="715.89" y="639.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,961 samples, 1.09%)</title><rect x="920.5" y="917" width="12.9" height="15.0" fill="rgb(205,93,28)" rx="2" ry="2" />
<text  x="923.47" y="927.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (101 samples, 0.02%)</title><rect x="717.2" y="693" width="0.2" height="15.0" fill="rgb(225,65,39)" rx="2" ry="2" />
<text  x="720.16" y="703.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (155 samples, 0.03%)</title><rect x="1137.0" y="1045" width="0.4" height="15.0" fill="rgb(253,101,54)" rx="2" ry="2" />
<text  x="1140.00" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator* (54 samples, 0.01%)</title><rect x="40.0" y="1301" width="0.1" height="15.0" fill="rgb(221,47,21)" rx="2" ry="2" />
<text  x="42.99" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (124 samples, 0.03%)</title><rect x="1108.2" y="869" width="0.3" height="15.0" fill="rgb(236,100,45)" rx="2" ry="2" />
<text  x="1111.16" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,227 samples, 0.27%)</title><rect x="964.3" y="821" width="3.2" height="15.0" fill="rgb(240,14,16)" rx="2" ry="2" />
<text  x="967.29" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (92 samples, 0.02%)</title><rect x="310.2" y="693" width="0.3" height="15.0" fill="rgb(231,195,14)" rx="2" ry="2" />
<text  x="313.21" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51 samples, 0.01%)</title><rect x="403.0" y="517" width="0.2" height="15.0" fill="rgb(222,87,2)" rx="2" ry="2" />
<text  x="406.05" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (19,961 samples, 4.40%)</title><rect x="170.1" y="853" width="51.8" height="15.0" fill="rgb(230,129,40)" rx="2" ry="2" />
<text  x="173.08" y="863.5" >std::..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::Channel, std::allocator&lt;webserver::Channel&gt;,  (116 samples, 0.03%)</title><rect x="21.7" y="1301" width="0.3" height="15.0" fill="rgb(215,141,42)" rx="2" ry="2" />
<text  x="24.67" y="1311.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (90,494 samples, 19.93%)</title><rect x="228.2" y="1029" width="235.1" height="15.0" fill="rgb(207,46,17)" rx="2" ry="2" />
<text  x="231.22" y="1039.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (66 samples, 0.01%)</title><rect x="618.8" y="853" width="0.2" height="15.0" fill="rgb(246,52,2)" rx="2" ry="2" />
<text  x="621.85" y="863.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (42 samples, 0.01%)</title><rect x="1083.1" y="789" width="0.2" height="15.0" fill="rgb(214,116,4)" rx="2" ry="2" />
<text  x="1086.15" y="799.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (83 samples, 0.02%)</title><rect x="111.8" y="1301" width="0.2" height="15.0" fill="rgb(248,77,14)" rx="2" ry="2" />
<text  x="114.80" y="1311.5" ></text>
</g>
<g >
<title>switch_fpu_return (54 samples, 0.01%)</title><rect x="342.7" y="629" width="0.2" height="15.0" fill="rgb(231,161,9)" rx="2" ry="2" />
<text  x="345.73" y="639.5" ></text>
</g>
<g >
<title>release_sock (295 samples, 0.06%)</title><rect x="1153.6" y="949" width="0.7" height="15.0" fill="rgb(205,70,33)" rx="2" ry="2" />
<text  x="1156.55" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::get (48 samples, 0.01%)</title><rect x="702.4" y="933" width="0.1" height="15.0" fill="rgb(240,74,0)" rx="2" ry="2" />
<text  x="705.41" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::format_decimal&lt;char, unsigned int&gt; (60 samples, 0.01%)</title><rect x="50.0" y="1301" width="0.2" height="15.0" fill="rgb(229,38,4)" rx="2" ry="2" />
<text  x="53.01" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (138 samples, 0.03%)</title><rect x="358.8" y="853" width="0.4" height="15.0" fill="rgb(207,54,37)" rx="2" ry="2" />
<text  x="361.80" y="863.5" ></text>
</g>
<g >
<title>netif_rx_internal (246 samples, 0.05%)</title><rect x="390.6" y="645" width="0.6" height="15.0" fill="rgb(216,143,49)" rx="2" ry="2" />
<text  x="393.55" y="655.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (71 samples, 0.02%)</title><rect x="63.8" y="1301" width="0.2" height="15.0" fill="rgb(241,101,24)" rx="2" ry="2" />
<text  x="66.80" y="1311.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (288 samples, 0.06%)</title><rect x="110.2" y="1301" width="0.7" height="15.0" fill="rgb(211,66,8)" rx="2" ry="2" />
<text  x="113.15" y="1311.5" ></text>
</g>
<g >
<title>cpumask_next (45 samples, 0.01%)</title><rect x="832.6" y="901" width="0.1" height="15.0" fill="rgb(205,60,30)" rx="2" ry="2" />
<text  x="835.60" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (359 samples, 0.08%)</title><rect x="994.7" y="933" width="0.9" height="15.0" fill="rgb(235,225,44)" rx="2" ry="2" />
<text  x="997.67" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::shared_ptr (50 samples, 0.01%)</title><rect x="1076.6" y="997" width="0.1" height="15.0" fill="rgb(238,209,53)" rx="2" ry="2" />
<text  x="1079.55" y="1007.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (61 samples, 0.01%)</title><rect x="143.9" y="1301" width="0.1" height="15.0" fill="rgb(219,25,41)" rx="2" ry="2" />
<text  x="146.85" y="1311.5" ></text>
</g>
<g >
<title>nf_hook_slow (64 samples, 0.01%)</title><rect x="1085.9" y="597" width="0.2" height="15.0" fill="rgb(224,93,39)" rx="2" ry="2" />
<text  x="1088.92" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (99 samples, 0.02%)</title><rect x="26.3" y="1301" width="0.3" height="15.0" fill="rgb(219,209,13)" rx="2" ry="2" />
<text  x="29.33" y="1311.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;::_M_ptr (251 samples, 0.06%)</title><rect x="702.8" y="901" width="0.7" height="15.0" fill="rgb(245,121,12)" rx="2" ry="2" />
<text  x="705.80" y="911.5" ></text>
</g>
<g >
<title>__ip_local_out (1,440 samples, 0.32%)</title><rect x="410.4" y="437" width="3.7" height="15.0" fill="rgb(233,185,39)" rx="2" ry="2" />
<text  x="413.35" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (144 samples, 0.03%)</title><rect x="485.5" y="917" width="0.4" height="15.0" fill="rgb(222,211,42)" rx="2" ry="2" />
<text  x="488.55" y="927.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (318 samples, 0.07%)</title><rect x="249.0" y="773" width="0.8" height="15.0" fill="rgb(234,107,35)" rx="2" ry="2" />
<text  x="252.00" y="783.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (83 samples, 0.02%)</title><rect x="303.4" y="677" width="0.2" height="15.0" fill="rgb(205,128,41)" rx="2" ry="2" />
<text  x="306.43" y="687.5" ></text>
</g>
<g >
<title>autoremove_wake_function (3,727 samples, 0.82%)</title><rect x="1120.7" y="901" width="9.7" height="15.0" fill="rgb(234,208,1)" rx="2" ry="2" />
<text  x="1123.70" y="911.5" ></text>
</g>
<g >
<title>new_do_write (9,460 samples, 2.08%)</title><rect x="537.0" y="741" width="24.6" height="15.0" fill="rgb(223,59,51)" rx="2" ry="2" />
<text  x="540.00" y="751.5" >n..</text>
</g>
<g >
<title>free_unref_page_list (86 samples, 0.02%)</title><rect x="840.1" y="917" width="0.2" height="15.0" fill="rgb(244,182,21)" rx="2" ry="2" />
<text  x="843.07" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_Node_allocator (44 samples, 0.01%)</title><rect x="74.0" y="1301" width="0.1" height="15.0" fill="rgb(250,104,22)" rx="2" ry="2" />
<text  x="77.03" y="1311.5" ></text>
</g>
<g >
<title>__GI___libc_free (51 samples, 0.01%)</title><rect x="1107.7" y="869" width="0.1" height="15.0" fill="rgb(223,27,23)" rx="2" ry="2" />
<text  x="1110.71" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (44 samples, 0.01%)</title><rect x="276.0" y="709" width="0.1" height="15.0" fill="rgb(213,147,47)" rx="2" ry="2" />
<text  x="279.00" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (42 samples, 0.01%)</title><rect x="69.5" y="1301" width="0.1" height="15.0" fill="rgb(226,117,52)" rx="2" ry="2" />
<text  x="72.52" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::T_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (149 samples, 0.03%)</title><rect x="922.8" y="901" width="0.4" height="15.0" fill="rgb(219,23,21)" rx="2" ry="2" />
<text  x="925.78" y="911.5" ></text>
</g>
<g >
<title>do_filp_open (4,747 samples, 1.05%)</title><rect x="876.9" y="981" width="12.3" height="15.0" fill="rgb(235,6,42)" rx="2" ry="2" />
<text  x="879.86" y="991.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (74 samples, 0.02%)</title><rect x="183.9" y="197" width="0.2" height="15.0" fill="rgb(247,40,28)" rx="2" ry="2" />
<text  x="186.92" y="207.5" ></text>
</g>
<g >
<title>[web_server] (48 samples, 0.01%)</title><rect x="633.0" y="1077" width="0.1" height="15.0" fill="rgb(236,204,37)" rx="2" ry="2" />
<text  x="636.02" y="1087.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (70 samples, 0.02%)</title><rect x="603.4" y="757" width="0.1" height="15.0" fill="rgb(220,179,14)" rx="2" ry="2" />
<text  x="606.35" y="767.5" ></text>
</g>
<g >
<title>spdlog::details::t_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (441 samples, 0.10%)</title><rect x="1038.0" y="949" width="1.1" height="15.0" fill="rgb(240,118,24)" rx="2" ry="2" />
<text  x="1040.97" y="959.5" ></text>
</g>
<g >
<title>webserver::Channel::peer_addr[abi:cxx11] (4,104 samples, 0.90%)</title><rect x="352.1" y="901" width="10.7" height="15.0" fill="rgb(231,82,43)" rx="2" ry="2" />
<text  x="355.15" y="911.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (97 samples, 0.02%)</title><rect x="128.5" y="1301" width="0.3" height="15.0" fill="rgb(208,21,29)" rx="2" ry="2" />
<text  x="131.53" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (45 samples, 0.01%)</title><rect x="526.1" y="693" width="0.1" height="15.0" fill="rgb(210,186,49)" rx="2" ry="2" />
<text  x="529.10" y="703.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (517 samples, 0.11%)</title><rect x="305.4" y="661" width="1.3" height="15.0" fill="rgb(243,209,29)" rx="2" ry="2" />
<text  x="308.39" y="671.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (48 samples, 0.01%)</title><rect x="16.3" y="1301" width="0.1" height="15.0" fill="rgb(245,205,40)" rx="2" ry="2" />
<text  x="19.29" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::make_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (90 samples, 0.02%)</title><rect x="519.4" y="853" width="0.2" height="15.0" fill="rgb(245,82,6)" rx="2" ry="2" />
<text  x="522.40" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock (315 samples, 0.07%)</title><rect x="660.2" y="645" width="0.8" height="15.0" fill="rgb(239,173,31)" rx="2" ry="2" />
<text  x="663.20" y="655.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (4,162 samples, 0.92%)</title><rect x="1007.2" y="933" width="10.8" height="15.0" fill="rgb(222,129,39)" rx="2" ry="2" />
<text  x="1010.20" y="943.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::HttpConnection (1,691 samples, 0.37%)</title><rect x="1140.2" y="1061" width="4.4" height="15.0" fill="rgb(234,75,10)" rx="2" ry="2" />
<text  x="1143.25" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (156 samples, 0.03%)</title><rect x="701.8" y="837" width="0.4" height="15.0" fill="rgb(232,103,26)" rx="2" ry="2" />
<text  x="704.80" y="847.5" ></text>
</g>
<g >
<title>webserver::Epoll::update_event (2,097 samples, 0.46%)</title><rect x="262.8" y="885" width="5.4" height="15.0" fill="rgb(249,36,39)" rx="2" ry="2" />
<text  x="265.78" y="895.5" ></text>
</g>
<g >
<title>__fdget_pos (188 samples, 0.04%)</title><rect x="935.8" y="757" width="0.5" height="15.0" fill="rgb(241,222,42)" rx="2" ry="2" />
<text  x="938.83" y="767.5" ></text>
</g>
<g >
<title>mark_page_accessed (39 samples, 0.01%)</title><rect x="842.9" y="917" width="0.1" height="15.0" fill="rgb(221,183,28)" rx="2" ry="2" />
<text  x="845.90" y="927.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (1,859 samples, 0.41%)</title><rect x="745.4" y="981" width="4.8" height="15.0" fill="rgb(212,218,4)" rx="2" ry="2" />
<text  x="748.38" y="991.5" ></text>
</g>
<g >
<title>psi_task_switch (180 samples, 0.04%)</title><rect x="732.4" y="741" width="0.5" height="15.0" fill="rgb(240,155,15)" rx="2" ry="2" />
<text  x="735.42" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (52 samples, 0.01%)</title><rect x="289.6" y="773" width="0.1" height="15.0" fill="rgb(236,108,41)" rx="2" ry="2" />
<text  x="292.61" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (55 samples, 0.01%)</title><rect x="93.4" y="1301" width="0.1" height="15.0" fill="rgb(246,38,32)" rx="2" ry="2" />
<text  x="96.39" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (236 samples, 0.05%)</title><rect x="910.6" y="1029" width="0.7" height="15.0" fill="rgb(228,162,10)" rx="2" ry="2" />
<text  x="913.64" y="1039.5" ></text>
</g>
<g >
<title>vfs_write (6,391 samples, 1.41%)</title><rect x="1043.9" y="805" width="16.6" height="15.0" fill="rgb(243,208,27)" rx="2" ry="2" />
<text  x="1046.90" y="815.5" ></text>
</g>
<g >
<title>webserver::EventLoop::is_in_loop_thread (60 samples, 0.01%)</title><rect x="141.4" y="1301" width="0.2" height="15.0" fill="rgb(236,134,2)" rx="2" ry="2" />
<text  x="144.42" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::count (119 samples, 0.03%)</title><rect x="118.2" y="1301" width="0.3" height="15.0" fill="rgb(222,182,7)" rx="2" ry="2" />
<text  x="121.18" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21,035 samples, 4.63%)</title><rect x="293.7" y="837" width="54.6" height="15.0" fill="rgb(207,66,9)" rx="2" ry="2" />
<text  x="296.65" y="847.5" >spdlo..</text>
</g>
<g >
<title>new_sync_write (5,951 samples, 1.31%)</title><rect x="652.8" y="773" width="15.5" height="15.0" fill="rgb(208,15,35)" rx="2" ry="2" />
<text  x="655.83" y="783.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (176 samples, 0.04%)</title><rect x="151.6" y="1221" width="0.4" height="15.0" fill="rgb(215,220,16)" rx="2" ry="2" />
<text  x="154.58" y="1231.5" ></text>
</g>
<g >
<title>spdlog::info&lt;char const  (21,486 samples, 4.73%)</title><rect x="913.9" y="1045" width="55.8" height="15.0" fill="rgb(231,63,29)" rx="2" ry="2" />
<text  x="916.87" y="1055.5" >spdlo..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (49 samples, 0.01%)</title><rect x="361.6" y="821" width="0.1" height="15.0" fill="rgb(212,65,23)" rx="2" ry="2" />
<text  x="364.56" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (65 samples, 0.01%)</title><rect x="632.1" y="1061" width="0.2" height="15.0" fill="rgb(245,46,7)" rx="2" ry="2" />
<text  x="635.10" y="1071.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (291 samples, 0.06%)</title><rect x="530.0" y="725" width="0.7" height="15.0" fill="rgb(237,127,37)" rx="2" ry="2" />
<text  x="532.97" y="735.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sputn (62 samples, 0.01%)</title><rect x="104.6" y="1269" width="0.1" height="15.0" fill="rgb(222,78,53)" rx="2" ry="2" />
<text  x="107.58" y="1279.5" ></text>
</g>
<g >
<title>__fget_files (53 samples, 0.01%)</title><rect x="285.7" y="789" width="0.2" height="15.0" fill="rgb(219,6,36)" rx="2" ry="2" />
<text  x="288.72" y="799.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (56 samples, 0.01%)</title><rect x="16.4" y="1301" width="0.2" height="15.0" fill="rgb(221,107,8)" rx="2" ry="2" />
<text  x="19.42" y="1311.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (58 samples, 0.01%)</title><rect x="880.6" y="885" width="0.1" height="15.0" fill="rgb(210,110,25)" rx="2" ry="2" />
<text  x="883.57" y="895.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits (174 samples, 0.04%)</title><rect x="647.1" y="853" width="0.5" height="15.0" fill="rgb(236,85,42)" rx="2" ry="2" />
<text  x="650.11" y="863.5" ></text>
</g>
<g >
<title>select_task_rq_fair (244 samples, 0.05%)</title><rect x="965.3" y="741" width="0.7" height="15.0" fill="rgb(210,227,50)" rx="2" ry="2" />
<text  x="968.32" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (9,702 samples, 2.14%)</title><rect x="467.5" y="1045" width="25.2" height="15.0" fill="rgb(252,168,26)" rx="2" ry="2" />
<text  x="470.49" y="1055.5" >_..</text>
</g>
<g >
<title>tcp_v4_do_rcv (13,110 samples, 2.89%)</title><rect x="405.4" y="517" width="34.1" height="15.0" fill="rgb(217,13,24)" rx="2" ry="2" />
<text  x="408.41" y="527.5" >tc..</text>
</g>
<g >
<title>entry_SYSCALL_64 (122 samples, 0.03%)</title><rect x="156.3" y="1253" width="0.4" height="15.0" fill="rgb(223,197,50)" rx="2" ry="2" />
<text  x="159.34" y="1263.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::operator[] (1,686 samples, 0.37%)</title><rect x="500.3" y="1093" width="4.4" height="15.0" fill="rgb(229,180,26)" rx="2" ry="2" />
<text  x="503.29" y="1103.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,740 samples, 0.60%)</title><rect x="366.5" y="789" width="7.1" height="15.0" fill="rgb(223,75,50)" rx="2" ry="2" />
<text  x="369.47" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (49 samples, 0.01%)</title><rect x="519.8" y="837" width="0.2" height="15.0" fill="rgb(229,166,43)" rx="2" ry="2" />
<text  x="522.84" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (2,552 samples, 0.56%)</title><rect x="269.7" y="933" width="6.7" height="15.0" fill="rgb(248,22,36)" rx="2" ry="2" />
<text  x="272.74" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (147 samples, 0.03%)</title><rect x="873.6" y="1045" width="0.3" height="15.0" fill="rgb(246,182,32)" rx="2" ry="2" />
<text  x="876.56" y="1055.5" ></text>
</g>
<g >
<title>[[nf_nat]] (75 samples, 0.02%)</title><rect x="416.9" y="421" width="0.2" height="15.0" fill="rgb(227,213,7)" rx="2" ry="2" />
<text  x="419.94" y="431.5" ></text>
</g>
<g >
<title>std::mutex::lock (3,274 samples, 0.72%)</title><rect x="671.2" y="933" width="8.5" height="15.0" fill="rgb(241,57,13)" rx="2" ry="2" />
<text  x="674.24" y="943.5" ></text>
</g>
<g >
<title>ip_output (413 samples, 0.09%)</title><rect x="1086.1" y="629" width="1.1" height="15.0" fill="rgb(229,157,42)" rx="2" ry="2" />
<text  x="1089.08" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_erase (546 samples, 0.12%)</title><rect x="349.0" y="853" width="1.5" height="15.0" fill="rgb(228,96,47)" rx="2" ry="2" />
<text  x="352.04" y="863.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (377 samples, 0.08%)</title><rect x="424.7" y="405" width="1.0" height="15.0" fill="rgb(246,189,7)" rx="2" ry="2" />
<text  x="427.72" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; (21,413 samples, 4.71%)</title><rect x="166.4" y="1029" width="55.6" height="15.0" fill="rgb(206,62,52)" rx="2" ry="2" />
<text  x="169.36" y="1039.5" >std::..</text>
</g>
<g >
<title>tcp_ack (544 samples, 0.12%)</title><rect x="417.9" y="485" width="1.4" height="15.0" fill="rgb(221,200,8)" rx="2" ry="2" />
<text  x="420.85" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (275 samples, 0.06%)</title><rect x="610.5" y="821" width="0.7" height="15.0" fill="rgb(253,212,22)" rx="2" ry="2" />
<text  x="613.45" y="831.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (281 samples, 0.06%)</title><rect x="79.9" y="1301" width="0.7" height="15.0" fill="rgb(208,82,54)" rx="2" ry="2" />
<text  x="82.90" y="1311.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (76 samples, 0.02%)</title><rect x="770.7" y="933" width="0.2" height="15.0" fill="rgb(213,103,4)" rx="2" ry="2" />
<text  x="773.74" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (49 samples, 0.01%)</title><rect x="391.0" y="613" width="0.2" height="15.0" fill="rgb(251,122,49)" rx="2" ry="2" />
<text  x="394.03" y="623.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_unsigned&lt;unsigned long&gt; (286 samples, 0.06%)</title><rect x="307.5" y="677" width="0.7" height="15.0" fill="rgb(248,127,54)" rx="2" ry="2" />
<text  x="310.47" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (197 samples, 0.04%)</title><rect x="1006.0" y="885" width="0.5" height="15.0" fill="rgb(237,134,17)" rx="2" ry="2" />
<text  x="1008.99" y="895.5" ></text>
</g>
<g >
<title>mark_wake_futex (62 samples, 0.01%)</title><rect x="734.6" y="805" width="0.1" height="15.0" fill="rgb(251,193,38)" rx="2" ry="2" />
<text  x="737.57" y="815.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;char const*, char*&gt; (633 samples, 0.14%)</title><rect x="925.1" y="821" width="1.7" height="15.0" fill="rgb(247,115,6)" rx="2" ry="2" />
<text  x="928.11" y="831.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (213 samples, 0.05%)</title><rect x="689.7" y="821" width="0.5" height="15.0" fill="rgb(236,195,2)" rx="2" ry="2" />
<text  x="692.70" y="831.5" ></text>
</g>
<g >
<title>ip_local_out (1,663 samples, 0.37%)</title><rect x="187.3" y="469" width="4.3" height="15.0" fill="rgb(230,0,44)" rx="2" ry="2" />
<text  x="190.26" y="479.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (45 samples, 0.01%)</title><rect x="146.6" y="1301" width="0.1" height="15.0" fill="rgb(250,128,22)" rx="2" ry="2" />
<text  x="149.59" y="1311.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (57 samples, 0.01%)</title><rect x="1158.3" y="885" width="0.2" height="15.0" fill="rgb(253,136,21)" rx="2" ry="2" />
<text  x="1161.31" y="895.5" ></text>
</g>
<g >
<title>__GI__IO_setb (47 samples, 0.01%)</title><rect x="353.6" y="789" width="0.2" height="15.0" fill="rgb(237,165,26)" rx="2" ry="2" />
<text  x="356.63" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,850 samples, 0.41%)</title><rect x="1069.7" y="901" width="4.9" height="15.0" fill="rgb(234,138,48)" rx="2" ry="2" />
<text  x="1072.75" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,355 samples, 0.30%)</title><rect x="343.8" y="693" width="3.5" height="15.0" fill="rgb(208,215,39)" rx="2" ry="2" />
<text  x="346.82" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (94 samples, 0.02%)</title><rect x="271.6" y="677" width="0.3" height="15.0" fill="rgb(220,132,26)" rx="2" ry="2" />
<text  x="274.63" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (331,008 samples, 72.88%)</title><rect x="158.7" y="1157" width="860.0" height="15.0" fill="rgb(239,108,23)" rx="2" ry="2" />
<text  x="161.66" y="1167.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>futex_wait_setup (67 samples, 0.01%)</title><rect x="962.4" y="757" width="0.2" height="15.0" fill="rgb(251,210,22)" rx="2" ry="2" />
<text  x="965.39" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (173 samples, 0.04%)</title><rect x="764.3" y="981" width="0.5" height="15.0" fill="rgb(231,133,22)" rx="2" ry="2" />
<text  x="767.33" y="991.5" ></text>
</g>
<g >
<title>[[nf_nat]] (142 samples, 0.03%)</title><rect x="441.2" y="549" width="0.4" height="15.0" fill="rgb(248,96,45)" rx="2" ry="2" />
<text  x="444.18" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (166 samples, 0.04%)</title><rect x="44.0" y="1285" width="0.5" height="15.0" fill="rgb(227,204,10)" rx="2" ry="2" />
<text  x="47.05" y="1295.5" ></text>
</g>
<g >
<title>__kfree_skb (164 samples, 0.04%)</title><rect x="372.0" y="741" width="0.4" height="15.0" fill="rgb(248,48,18)" rx="2" ry="2" />
<text  x="375.00" y="751.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (582 samples, 0.13%)</title><rect x="890.9" y="1013" width="1.5" height="15.0" fill="rgb(238,149,31)" rx="2" ry="2" />
<text  x="893.88" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (111 samples, 0.02%)</title><rect x="1093.3" y="533" width="0.3" height="15.0" fill="rgb(223,31,33)" rx="2" ry="2" />
<text  x="1096.33" y="543.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (484 samples, 0.11%)</title><rect x="754.4" y="981" width="1.2" height="15.0" fill="rgb(223,125,11)" rx="2" ry="2" />
<text  x="757.39" y="991.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (40 samples, 0.01%)</title><rect x="767.4" y="965" width="0.1" height="15.0" fill="rgb(225,28,4)" rx="2" ry="2" />
<text  x="770.41" y="975.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (109 samples, 0.02%)</title><rect x="65.5" y="1301" width="0.3" height="15.0" fill="rgb(244,20,28)" rx="2" ry="2" />
<text  x="68.48" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_int&lt;unsigned long&gt; (386 samples, 0.08%)</title><rect x="310.1" y="741" width="1.0" height="15.0" fill="rgb(241,220,28)" rx="2" ry="2" />
<text  x="313.13" y="751.5" ></text>
</g>
<g >
<title>security_inode_free (138 samples, 0.03%)</title><rect x="1082.6" y="773" width="0.4" height="15.0" fill="rgb(238,112,54)" rx="2" ry="2" />
<text  x="1085.59" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (67 samples, 0.01%)</title><rect x="348.9" y="853" width="0.1" height="15.0" fill="rgb(254,27,5)" rx="2" ry="2" />
<text  x="351.87" y="863.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (148 samples, 0.03%)</title><rect x="931.3" y="853" width="0.4" height="15.0" fill="rgb(226,39,26)" rx="2" ry="2" />
<text  x="934.33" y="863.5" ></text>
</g>
<g >
<title>tcp_options_write (53 samples, 0.01%)</title><rect x="447.7" y="757" width="0.1" height="15.0" fill="rgb(229,184,51)" rx="2" ry="2" />
<text  x="450.71" y="767.5" ></text>
</g>
<g >
<title>lru_add_drain (114 samples, 0.03%)</title><rect x="839.5" y="917" width="0.3" height="15.0" fill="rgb(213,36,21)" rx="2" ry="2" />
<text  x="842.55" y="927.5" ></text>
</g>
<g >
<title>update_curr (53 samples, 0.01%)</title><rect x="432.2" y="341" width="0.1" height="15.0" fill="rgb(211,9,2)" rx="2" ry="2" />
<text  x="435.21" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::_M_max_size (84 samples, 0.02%)</title><rect x="40.2" y="1301" width="0.3" height="15.0" fill="rgb(233,91,22)" rx="2" ry="2" />
<text  x="43.24" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_format_string&lt;false, char, fmt::v8::detail::vformat_to&lt;char&gt; (1,156 samples, 0.25%)</title><rect x="516.3" y="837" width="3.0" height="15.0" fill="rgb(244,114,0)" rx="2" ry="2" />
<text  x="519.26" y="847.5" ></text>
</g>
<g >
<title>queue_work_on (106 samples, 0.02%)</title><rect x="322.1" y="517" width="0.3" height="15.0" fill="rgb(243,68,21)" rx="2" ry="2" />
<text  x="325.10" y="527.5" ></text>
</g>
<g >
<title>operator new (258 samples, 0.06%)</title><rect x="582.0" y="805" width="0.6" height="15.0" fill="rgb(243,190,20)" rx="2" ry="2" />
<text  x="584.96" y="815.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (101 samples, 0.02%)</title><rect x="49.6" y="1301" width="0.3" height="15.0" fill="rgb(247,28,4)" rx="2" ry="2" />
<text  x="52.60" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt;::allocate (299 samples, 0.07%)</title><rect x="581.9" y="821" width="0.8" height="15.0" fill="rgb(227,43,5)" rx="2" ry="2" />
<text  x="584.89" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (242 samples, 0.05%)</title><rect x="617.1" y="869" width="0.7" height="15.0" fill="rgb(240,151,14)" rx="2" ry="2" />
<text  x="620.13" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (153 samples, 0.03%)</title><rect x="926.0" y="725" width="0.4" height="15.0" fill="rgb(246,149,7)" rx="2" ry="2" />
<text  x="929.01" y="735.5" ></text>
</g>
<g >
<title>__GI__IO_file_overflow (42 samples, 0.01%)</title><rect x="561.6" y="757" width="0.1" height="15.0" fill="rgb(233,88,14)" rx="2" ry="2" />
<text  x="564.58" y="767.5" ></text>
</g>
<g >
<title>webserver::ChannelHash::operator (62 samples, 0.01%)</title><rect x="140.3" y="1301" width="0.1" height="15.0" fill="rgb(210,129,36)" rx="2" ry="2" />
<text  x="143.25" y="1311.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (63 samples, 0.01%)</title><rect x="992.0" y="917" width="0.2" height="15.0" fill="rgb(228,10,18)" rx="2" ry="2" />
<text  x="995.00" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (671 samples, 0.15%)</title><rect x="1033.2" y="885" width="1.7" height="15.0" fill="rgb(219,87,43)" rx="2" ry="2" />
<text  x="1036.18" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (127 samples, 0.03%)</title><rect x="121.9" y="1301" width="0.3" height="15.0" fill="rgb(254,189,36)" rx="2" ry="2" />
<text  x="124.92" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (105 samples, 0.02%)</title><rect x="582.8" y="773" width="0.3" height="15.0" fill="rgb(244,95,12)" rx="2" ry="2" />
<text  x="585.79" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char&gt; (83 samples, 0.02%)</title><rect x="533.9" y="613" width="0.2" height="15.0" fill="rgb(243,53,37)" rx="2" ry="2" />
<text  x="536.93" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (68 samples, 0.01%)</title><rect x="145.1" y="1285" width="0.2" height="15.0" fill="rgb(239,0,27)" rx="2" ry="2" />
<text  x="148.13" y="1295.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5,615 samples, 1.24%)</title><rect x="1088.4" y="709" width="14.6" height="15.0" fill="rgb(213,99,2)" rx="2" ry="2" />
<text  x="1091.39" y="719.5" ></text>
</g>
<g >
<title>enqueue_timer (90 samples, 0.02%)</title><rect x="449.9" y="725" width="0.2" height="15.0" fill="rgb(242,81,51)" rx="2" ry="2" />
<text  x="452.90" y="735.5" ></text>
</g>
<g >
<title>__virt_addr_valid (161 samples, 0.04%)</title><rect x="541.0" y="581" width="0.5" height="15.0" fill="rgb(212,134,26)" rx="2" ry="2" />
<text  x="544.04" y="591.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,527 samples, 0.56%)</title><rect x="1094.0" y="469" width="6.6" height="15.0" fill="rgb(246,135,34)" rx="2" ry="2" />
<text  x="1097.05" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (61,880 samples, 13.63%)</title><rect x="1018.7" y="1173" width="160.8" height="15.0" fill="rgb(216,167,53)" rx="2" ry="2" />
<text  x="1021.74" y="1183.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>spdlog::logger::log&lt;int, int&gt; (575 samples, 0.13%)</title><rect x="161.2" y="1077" width="1.5" height="15.0" fill="rgb(252,49,34)" rx="2" ry="2" />
<text  x="164.24" y="1087.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (138 samples, 0.03%)</title><rect x="845.3" y="949" width="0.3" height="15.0" fill="rgb(223,171,20)" rx="2" ry="2" />
<text  x="848.29" y="959.5" ></text>
</g>
<g >
<title>cap_mmap_addr (44 samples, 0.01%)</title><rect x="800.4" y="933" width="0.1" height="15.0" fill="rgb(211,5,48)" rx="2" ry="2" />
<text  x="803.39" y="943.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,933 samples, 0.43%)</title><rect x="230.2" y="917" width="5.1" height="15.0" fill="rgb(245,107,1)" rx="2" ry="2" />
<text  x="233.24" y="927.5" ></text>
</g>
<g >
<title>tcp_write_xmit (29,534 samples, 6.50%)</title><rect x="375.0" y="789" width="76.8" height="15.0" fill="rgb(254,222,17)" rx="2" ry="2" />
<text  x="378.05" y="799.5" >tcp_writ..</text>
</g>
<g >
<title>__dynamic_cast (46 samples, 0.01%)</title><rect x="977.5" y="949" width="0.1" height="15.0" fill="rgb(246,220,12)" rx="2" ry="2" />
<text  x="980.51" y="959.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::append&lt;char&gt; (109 samples, 0.02%)</title><rect x="923.3" y="869" width="0.3" height="15.0" fill="rgb(218,24,51)" rx="2" ry="2" />
<text  x="926.29" y="879.5" ></text>
</g>
<g >
<title>__sys_sendto (36,747 samples, 8.09%)</title><rect x="364.3" y="869" width="95.5" height="15.0" fill="rgb(254,165,20)" rx="2" ry="2" />
<text  x="367.28" y="879.5" >__sys_sendto</text>
</g>
<g >
<title>vfs_write (8,693 samples, 1.91%)</title><rect x="705.5" y="789" width="22.5" height="15.0" fill="rgb(214,78,48)" rx="2" ry="2" />
<text  x="708.46" y="799.5" >v..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (41 samples, 0.01%)</title><rect x="699.8" y="901" width="0.1" height="15.0" fill="rgb(220,73,54)" rx="2" ry="2" />
<text  x="702.78" y="911.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (219 samples, 0.05%)</title><rect x="1159.6" y="901" width="0.6" height="15.0" fill="rgb(240,179,11)" rx="2" ry="2" />
<text  x="1162.62" y="911.5" ></text>
</g>
<g >
<title>inet_shutdown (823 samples, 0.18%)</title><rect x="751.6" y="949" width="2.2" height="15.0" fill="rgb(205,11,8)" rx="2" ry="2" />
<text  x="754.63" y="959.5" ></text>
</g>
<g >
<title>task_work_run (1,253 samples, 0.28%)</title><rect x="847.9" y="981" width="3.2" height="15.0" fill="rgb(246,37,36)" rx="2" ry="2" />
<text  x="850.87" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::Epoll, std::default_delete&lt;webserver::Epoll&gt; &gt;::operator (95 samples, 0.02%)</title><rect x="164.8" y="1109" width="0.2" height="15.0" fill="rgb(212,163,49)" rx="2" ry="2" />
<text  x="167.80" y="1119.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (385 samples, 0.08%)</title><rect x="622.2" y="1093" width="1.0" height="15.0" fill="rgb(249,146,13)" rx="2" ry="2" />
<text  x="625.23" y="1103.5" ></text>
</g>
<g >
<title>psi_group_change (69 samples, 0.02%)</title><rect x="1127.4" y="837" width="0.2" height="15.0" fill="rgb(205,103,52)" rx="2" ry="2" />
<text  x="1130.45" y="847.5" ></text>
</g>
<g >
<title>ep_done_scan (175 samples, 0.04%)</title><rect x="471.7" y="1013" width="0.5" height="15.0" fill="rgb(252,7,5)" rx="2" ry="2" />
<text  x="474.72" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (389 samples, 0.09%)</title><rect x="910.5" y="1061" width="1.0" height="15.0" fill="rgb(238,87,5)" rx="2" ry="2" />
<text  x="913.48" y="1071.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (53 samples, 0.01%)</title><rect x="12.1" y="1285" width="0.2" height="15.0" fill="rgb(238,94,17)" rx="2" ry="2" />
<text  x="15.12" y="1295.5" ></text>
</g>
<g >
<title>dquot_file_open (92 samples, 0.02%)</title><rect x="883.7" y="933" width="0.3" height="15.0" fill="rgb(233,120,39)" rx="2" ry="2" />
<text  x="886.73" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (81 samples, 0.02%)</title><rect x="634.8" y="933" width="0.2" height="15.0" fill="rgb(246,89,14)" rx="2" ry="2" />
<text  x="637.79" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (93 samples, 0.02%)</title><rect x="311.4" y="613" width="0.2" height="15.0" fill="rgb(254,19,32)" rx="2" ry="2" />
<text  x="314.38" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::function&lt;void  (237 samples, 0.05%)</title><rect x="1113.1" y="997" width="0.7" height="15.0" fill="rgb(226,103,5)" rx="2" ry="2" />
<text  x="1116.14" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (57 samples, 0.01%)</title><rect x="32.8" y="1301" width="0.1" height="15.0" fill="rgb(216,189,41)" rx="2" ry="2" />
<text  x="35.77" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (49 samples, 0.01%)</title><rect x="1108.0" y="853" width="0.1" height="15.0" fill="rgb(220,79,3)" rx="2" ry="2" />
<text  x="1110.99" y="863.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::shared_ptr&lt;webserver::Channel&gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt; &gt;::end (60 samples, 0.01%)</title><rect x="135.9" y="1301" width="0.2" height="15.0" fill="rgb(220,161,34)" rx="2" ry="2" />
<text  x="138.92" y="1311.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (66 samples, 0.01%)</title><rect x="296.3" y="581" width="0.1" height="15.0" fill="rgb(240,164,23)" rx="2" ry="2" />
<text  x="299.26" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_M_move_assign (1,362 samples, 0.30%)</title><rect x="222.5" y="1093" width="3.5" height="15.0" fill="rgb(235,100,34)" rx="2" ry="2" />
<text  x="225.51" y="1103.5" ></text>
</g>
<g >
<title>update_curr (78 samples, 0.02%)</title><rect x="723.2" y="597" width="0.2" height="15.0" fill="rgb(211,112,38)" rx="2" ry="2" />
<text  x="726.15" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::function&lt;void  (117 samples, 0.03%)</title><rect x="627.2" y="1013" width="0.3" height="15.0" fill="rgb(246,181,20)" rx="2" ry="2" />
<text  x="630.20" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;webserver::Channel&gt; &gt;::destroy&lt;webserver::Channel&gt; (20,551 samples, 4.53%)</title><rect x="168.5" y="917" width="53.4" height="15.0" fill="rgb(228,222,36)" rx="2" ry="2" />
<text  x="171.54" y="927.5" >std::..</text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;webserver::HttpHandler*,  (84 samples, 0.02%)</title><rect x="270.6" y="853" width="0.2" height="15.0" fill="rgb(210,159,44)" rx="2" ry="2" />
<text  x="273.61" y="863.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (214 samples, 0.05%)</title><rect x="100.6" y="1301" width="0.6" height="15.0" fill="rgb(248,167,14)" rx="2" ry="2" />
<text  x="103.60" y="1311.5" ></text>
</g>
<g >
<title>mutex_lock (123 samples, 0.03%)</title><rect x="475.1" y="1013" width="0.3" height="15.0" fill="rgb(210,71,31)" rx="2" ry="2" />
<text  x="478.06" y="1023.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::deallocate (226 samples, 0.05%)</title><rect x="908.4" y="949" width="0.6" height="15.0" fill="rgb(252,71,4)" rx="2" ry="2" />
<text  x="911.42" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (190 samples, 0.04%)</title><rect x="302.4" y="757" width="0.5" height="15.0" fill="rgb(230,46,44)" rx="2" ry="2" />
<text  x="305.37" y="767.5" ></text>
</g>
<g >
<title>__inet_lookup_established (87 samples, 0.02%)</title><rect x="1094.3" y="453" width="0.2" height="15.0" fill="rgb(207,148,4)" rx="2" ry="2" />
<text  x="1097.30" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (51 samples, 0.01%)</title><rect x="560.5" y="645" width="0.1" height="15.0" fill="rgb(228,48,4)" rx="2" ry="2" />
<text  x="563.45" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (196 samples, 0.04%)</title><rect x="524.5" y="789" width="0.5" height="15.0" fill="rgb(246,188,20)" rx="2" ry="2" />
<text  x="527.52" y="799.5" ></text>
</g>
<g >
<title>[[nf_nat]] (239 samples, 0.05%)</title><rect x="386.7" y="693" width="0.6" height="15.0" fill="rgb(239,31,30)" rx="2" ry="2" />
<text  x="389.72" y="703.5" ></text>
</g>
<g >
<title>dput (118 samples, 0.03%)</title><rect x="180.8" y="613" width="0.3" height="15.0" fill="rgb(234,70,44)" rx="2" ry="2" />
<text  x="183.82" y="623.5" ></text>
</g>
<g >
<title>tcp_established_options (50 samples, 0.01%)</title><rect x="459.2" y="773" width="0.1" height="15.0" fill="rgb(226,142,18)" rx="2" ry="2" />
<text  x="462.16" y="783.5" ></text>
</g>
<g >
<title>__slab_alloc.constprop.0 (110 samples, 0.02%)</title><rect x="1164.5" y="901" width="0.3" height="15.0" fill="rgb(248,122,0)" rx="2" ry="2" />
<text  x="1167.51" y="911.5" ></text>
</g>
<g >
<title>check_preempt_curr (188 samples, 0.04%)</title><rect x="1129.6" y="853" width="0.5" height="15.0" fill="rgb(217,94,47)" rx="2" ry="2" />
<text  x="1132.61" y="863.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (283 samples, 0.06%)</title><rect x="784.9" y="965" width="0.7" height="15.0" fill="rgb(242,226,39)" rx="2" ry="2" />
<text  x="787.87" y="975.5" ></text>
</g>
<g >
<title>tcp_fin (1,479 samples, 0.33%)</title><rect x="1096.3" y="405" width="3.9" height="15.0" fill="rgb(210,220,16)" rx="2" ry="2" />
<text  x="1099.32" y="415.5" ></text>
</g>
<g >
<title>fmt::v8::detail::copy_str&lt;char, char const*&gt; (342 samples, 0.08%)</title><rect x="1023.3" y="917" width="0.9" height="15.0" fill="rgb(227,4,19)" rx="2" ry="2" />
<text  x="1026.31" y="927.5" ></text>
</g>
<g >
<title>free_swap_cache (40 samples, 0.01%)</title><rect x="839.4" y="917" width="0.1" height="15.0" fill="rgb(241,20,19)" rx="2" ry="2" />
<text  x="842.44" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::TcpSocket,  (61 samples, 0.01%)</title><rect x="1144.9" y="1061" width="0.1" height="15.0" fill="rgb(236,8,6)" rx="2" ry="2" />
<text  x="1147.88" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (41 samples, 0.01%)</title><rect x="909.3" y="997" width="0.1" height="15.0" fill="rgb(247,138,44)" rx="2" ry="2" />
<text  x="912.29" y="1007.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (261 samples, 0.06%)</title><rect x="997.6" y="1029" width="0.6" height="15.0" fill="rgb(233,3,36)" rx="2" ry="2" />
<text  x="1000.56" y="1039.5" ></text>
</g>
<g >
<title>filename_lookup (3,425 samples, 0.75%)</title><rect x="855.0" y="981" width="8.9" height="15.0" fill="rgb(249,87,44)" rx="2" ry="2" />
<text  x="858.03" y="991.5" ></text>
</g>
<g >
<title>__memchr_avx2 (47 samples, 0.01%)</title><rect x="295.3" y="757" width="0.2" height="15.0" fill="rgb(247,128,14)" rx="2" ry="2" />
<text  x="298.33" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_write (8,450 samples, 1.86%)</title><rect x="934.9" y="821" width="22.0" height="15.0" fill="rgb(249,157,24)" rx="2" ry="2" />
<text  x="937.91" y="831.5" >_..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (149 samples, 0.03%)</title><rect x="717.0" y="709" width="0.4" height="15.0" fill="rgb(245,38,20)" rx="2" ry="2" />
<text  x="720.03" y="719.5" ></text>
</g>
<g >
<title>mark_wake_futex (51 samples, 0.01%)</title><rect x="964.6" y="773" width="0.1" height="15.0" fill="rgb(242,215,7)" rx="2" ry="2" />
<text  x="967.61" y="783.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;::allocator (77 samples, 0.02%)</title><rect x="113.3" y="1301" width="0.2" height="15.0" fill="rgb(228,84,38)" rx="2" ry="2" />
<text  x="116.27" y="1311.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (121 samples, 0.03%)</title><rect x="639.7" y="901" width="0.3" height="15.0" fill="rgb(241,62,46)" rx="2" ry="2" />
<text  x="642.69" y="911.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (70 samples, 0.02%)</title><rect x="1039.4" y="757" width="0.2" height="15.0" fill="rgb(219,183,25)" rx="2" ry="2" />
<text  x="1042.37" y="767.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (42 samples, 0.01%)</title><rect x="1087.9" y="725" width="0.1" height="15.0" fill="rgb(232,146,41)" rx="2" ry="2" />
<text  x="1090.88" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::HttpHandler&gt;::~shared_ptr (99 samples, 0.02%)</title><rect x="625.8" y="837" width="0.3" height="15.0" fill="rgb(247,141,4)" rx="2" ry="2" />
<text  x="628.83" y="847.5" ></text>
</g>
<g >
<title>fmt::v8::visit_format_arg&lt;fmt::v8::detail::default_arg_formatter&lt;char&gt;, fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt; (519 samples, 0.11%)</title><rect x="1024.7" y="949" width="1.4" height="15.0" fill="rgb(212,37,0)" rx="2" ry="2" />
<text  x="1027.74" y="959.5" ></text>
</g>
<g >
<title>std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;::pair&lt;std::shared_ptr&lt;webserver::Channel&gt;&amp;, std::shared_ptr&lt;webserver::HttpHandler&gt;&amp;, true&gt; (221 samples, 0.05%)</title><rect x="578.6" y="933" width="0.6" height="15.0" fill="rgb(211,147,8)" rx="2" ry="2" />
<text  x="581.62" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (184 samples, 0.04%)</title><rect x="1114.1" y="933" width="0.5" height="15.0" fill="rgb(231,87,0)" rx="2" ry="2" />
<text  x="1117.13" y="943.5" ></text>
</g>
<g >
<title>tcp_ack (227 samples, 0.05%)</title><rect x="200.3" y="213" width="0.6" height="15.0" fill="rgb(225,155,33)" rx="2" ry="2" />
<text  x="203.32" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,057 samples, 0.23%)</title><rect x="252.1" y="885" width="2.8" height="15.0" fill="rgb(213,219,47)" rx="2" ry="2" />
<text  x="255.11" y="895.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6,194 samples, 1.36%)</title><rect x="421.7" y="453" width="16.1" height="15.0" fill="rgb(228,38,52)" rx="2" ry="2" />
<text  x="424.71" y="463.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,116 samples, 0.25%)</title><rect x="924.0" y="901" width="2.9" height="15.0" fill="rgb(239,92,23)" rx="2" ry="2" />
<text  x="926.96" y="911.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (55 samples, 0.01%)</title><rect x="935.1" y="805" width="0.1" height="15.0" fill="rgb(213,90,1)" rx="2" ry="2" />
<text  x="938.08" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (304 samples, 0.07%)</title><rect x="766.8" y="1029" width="0.8" height="15.0" fill="rgb(229,136,9)" rx="2" ry="2" />
<text  x="769.81" y="1039.5" ></text>
</g>
<g >
<title>__rcu_read_lock (40 samples, 0.01%)</title><rect x="862.6" y="933" width="0.1" height="15.0" fill="rgb(238,138,27)" rx="2" ry="2" />
<text  x="865.64" y="943.5" ></text>
</g>
<g >
<title>fmt::v8::detail::count_digits_inc (42 samples, 0.01%)</title><rect x="304.0" y="645" width="0.1" height="15.0" fill="rgb(229,54,19)" rx="2" ry="2" />
<text  x="306.99" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::TcpSocket,  (41 samples, 0.01%)</title><rect x="463.5" y="1093" width="0.1" height="15.0" fill="rgb(212,146,23)" rx="2" ry="2" />
<text  x="466.47" y="1103.5" ></text>
</g>
<g >
<title>cpuacct_charge (42 samples, 0.01%)</title><rect x="674.5" y="693" width="0.1" height="15.0" fill="rgb(229,90,31)" rx="2" ry="2" />
<text  x="677.46" y="703.5" ></text>
</g>
<g >
<title>iterate_groups (69 samples, 0.02%)</title><rect x="567.0" y="581" width="0.2" height="15.0" fill="rgb(249,44,5)" rx="2" ry="2" />
<text  x="570.05" y="591.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [19], 0&gt; (20,466 samples, 4.51%)</title><rect x="633.6" y="1029" width="53.1" height="15.0" fill="rgb(222,178,43)" rx="2" ry="2" />
<text  x="636.57" y="1039.5" >spdlo..</text>
</g>
<g >
<title>std::unique_ptr&lt;webserver::HttpConnection, std::default_delete&lt;webserver::HttpConnection&gt; &gt;::get (108 samples, 0.02%)</title><rect x="743.0" y="1045" width="0.2" height="15.0" fill="rgb(206,15,13)" rx="2" ry="2" />
<text  x="745.96" y="1055.5" ></text>
</g>
<g >
<title>fmt::v8::format_int::format_int (250 samples, 0.06%)</title><rect x="646.9" y="901" width="0.7" height="15.0" fill="rgb(245,220,14)" rx="2" ry="2" />
<text  x="649.92" y="911.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (109 samples, 0.02%)</title><rect x="880.5" y="901" width="0.3" height="15.0" fill="rgb(231,84,11)" rx="2" ry="2" />
<text  x="883.53" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt; (591 samples, 0.13%)</title><rect x="581.6" y="869" width="1.6" height="15.0" fill="rgb(218,226,6)" rx="2" ry="2" />
<text  x="584.65" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (118 samples, 0.03%)</title><rect x="501.0" y="1029" width="0.3" height="15.0" fill="rgb(237,86,25)" rx="2" ry="2" />
<text  x="504.03" y="1039.5" ></text>
</g>
<g >
<title>__libc_close (19,307 samples, 4.25%)</title><rect x="171.7" y="725" width="50.1" height="15.0" fill="rgb(224,189,47)" rx="2" ry="2" />
<text  x="174.65" y="735.5" >__lib..</text>
</g>
<g >
<title>cpuacct_charge (52 samples, 0.01%)</title><rect x="484.0" y="917" width="0.1" height="15.0" fill="rgb(225,195,54)" rx="2" ry="2" />
<text  x="486.96" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_core (193 samples, 0.04%)</title><rect x="441.6" y="581" width="0.5" height="15.0" fill="rgb(251,42,9)" rx="2" ry="2" />
<text  x="444.57" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (80 samples, 0.02%)</title><rect x="784.4" y="981" width="0.2" height="15.0" fill="rgb(231,46,9)" rx="2" ry="2" />
<text  x="787.39" y="991.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,455 samples, 2.08%)</title><rect x="1080.9" y="885" width="24.6" height="15.0" fill="rgb(251,82,6)" rx="2" ry="2" />
<text  x="1083.90" y="895.5" >s..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (75 samples, 0.02%)</title><rect x="894.3" y="965" width="0.2" height="15.0" fill="rgb(247,77,32)" rx="2" ry="2" />
<text  x="897.27" y="975.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (83 samples, 0.02%)</title><rect x="623.7" y="1029" width="0.2" height="15.0" fill="rgb(242,138,7)" rx="2" ry="2" />
<text  x="626.68" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (88 samples, 0.02%)</title><rect x="645.9" y="885" width="0.2" height="15.0" fill="rgb(209,77,28)" rx="2" ry="2" />
<text  x="648.92" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (113 samples, 0.02%)</title><rect x="83.7" y="1301" width="0.3" height="15.0" fill="rgb(231,136,48)" rx="2" ry="2" />
<text  x="86.67" y="1311.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,509 samples, 0.33%)</title><rect x="681.0" y="789" width="4.0" height="15.0" fill="rgb(237,21,38)" rx="2" ry="2" />
<text  x="684.05" y="799.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (104 samples, 0.02%)</title><rect x="938.9" y="693" width="0.3" height="15.0" fill="rgb(252,145,45)" rx="2" ry="2" />
<text  x="941.91" y="703.5" ></text>
</g>
<g >
<title>check_preempt_curr (63 samples, 0.01%)</title><rect x="1073.6" y="773" width="0.1" height="15.0" fill="rgb(207,67,39)" rx="2" ry="2" />
<text  x="1076.58" y="783.5" ></text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (45 samples, 0.01%)</title><rect x="963.2" y="757" width="0.1" height="15.0" fill="rgb(226,203,41)" rx="2" ry="2" />
<text  x="966.16" y="767.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,436 samples, 0.98%)</title><rect x="692.1" y="949" width="11.6" height="15.0" fill="rgb(233,10,50)" rx="2" ry="2" />
<text  x="695.13" y="959.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (61 samples, 0.01%)</title><rect x="1008.8" y="853" width="0.2" height="15.0" fill="rgb(221,205,14)" rx="2" ry="2" />
<text  x="1011.84" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::debug&lt;int, int&gt; (665 samples, 0.15%)</title><rect x="161.1" y="1093" width="1.7" height="15.0" fill="rgb(227,165,15)" rx="2" ry="2" />
<text  x="164.09" y="1103.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (59 samples, 0.01%)</title><rect x="34.3" y="1301" width="0.1" height="15.0" fill="rgb(240,17,9)" rx="2" ry="2" />
<text  x="37.29" y="1311.5" ></text>
</g>
<g >
<title>psi_group_change (202 samples, 0.04%)</title><rect x="950.3" y="597" width="0.5" height="15.0" fill="rgb(254,205,22)" rx="2" ry="2" />
<text  x="953.27" y="607.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,357 samples, 0.30%)</title><rect x="612.9" y="853" width="3.5" height="15.0" fill="rgb(224,154,11)" rx="2" ry="2" />
<text  x="615.91" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_lock (103 samples, 0.02%)</title><rect x="965.1" y="725" width="0.2" height="15.0" fill="rgb(244,43,15)" rx="2" ry="2" />
<text  x="968.06" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (52 samples, 0.01%)</title><rect x="92.7" y="1301" width="0.1" height="15.0" fill="rgb(225,179,30)" rx="2" ry="2" />
<text  x="95.70" y="1311.5" ></text>
</g>
<g >
<title>[[nf_conntrack]] (174 samples, 0.04%)</title><rect x="1101.9" y="629" width="0.5" height="15.0" fill="rgb(236,33,25)" rx="2" ry="2" />
<text  x="1104.93" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_erase (1,037 samples, 0.23%)</title><rect x="348.8" y="869" width="2.7" height="15.0" fill="rgb(209,147,29)" rx="2" ry="2" />
<text  x="351.79" y="879.5" ></text>
</g>
<g >
<title>__x64_sys_close (481 samples, 0.11%)</title><rect x="870.8" y="1013" width="1.3" height="15.0" fill="rgb(248,139,25)" rx="2" ry="2" />
<text  x="873.81" y="1023.5" ></text>
</g>
<g >
<title>add_wait_queue (54 samples, 0.01%)</title><rect x="1048.6" y="741" width="0.2" height="15.0" fill="rgb(221,188,54)" rx="2" ry="2" />
<text  x="1051.63" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (60 samples, 0.01%)</title><rect x="480.5" y="981" width="0.2" height="15.0" fill="rgb(233,79,23)" rx="2" ry="2" />
<text  x="483.51" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;webserver::Channel&gt;::~shared_ptr (43 samples, 0.01%)</title><rect x="277.1" y="901" width="0.1" height="15.0" fill="rgb(252,89,47)" rx="2" ry="2" />
<text  x="280.08" y="911.5" ></text>
</g>
<g >
<title>update_load_avg (89 samples, 0.02%)</title><rect x="674.6" y="709" width="0.3" height="15.0" fill="rgb(218,114,26)" rx="2" ry="2" />
<text  x="677.62" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (90 samples, 0.02%)</title><rect x="531.9" y="741" width="0.3" height="15.0" fill="rgb(230,13,25)" rx="2" ry="2" />
<text  x="534.93" y="751.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (48 samples, 0.01%)</title><rect x="444.3" y="613" width="0.1" height="15.0" fill="rgb(226,70,36)" rx="2" ry="2" />
<text  x="447.26" y="623.5" ></text>
</g>
<g >
<title>cpumask_next (62 samples, 0.01%)</title><rect x="328.1" y="469" width="0.1" height="15.0" fill="rgb(241,218,13)" rx="2" ry="2" />
<text  x="331.07" y="479.5" ></text>
</g>
<g >
<title>try_charge_memcg (48 samples, 0.01%)</title><rect x="219.8" y="501" width="0.1" height="15.0" fill="rgb(221,1,31)" rx="2" ry="2" />
<text  x="222.82" y="511.5" ></text>
</g>
<g >
<title>spdlog::details::f_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (923 samples, 0.20%)</title><rect x="307.0" y="757" width="2.4" height="15.0" fill="rgb(253,38,50)" rx="2" ry="2" />
<text  x="309.98" y="767.5" ></text>
</g>
<g >
<title>_raw_spin_lock (315 samples, 0.07%)</title><rect x="1052.5" y="661" width="0.8" height="15.0" fill="rgb(211,87,43)" rx="2" ry="2" />
<text  x="1055.46" y="671.5" ></text>
</g>
<g >
<title>smp_call_function_many_cond (2,519 samples, 0.55%)</title><rect x="832.8" y="901" width="6.5" height="15.0" fill="rgb(209,110,39)" rx="2" ry="2" />
<text  x="835.76" y="911.5" ></text>
</g>
<g >
<title>web_server (454,146 samples, 100.00%)</title><rect x="10.0" y="1333" width="1180.0" height="15.0" fill="rgb(220,95,13)" rx="2" ry="2" />
<text  x="13.02" y="1343.5" >web_server</text>
</g>
<g >
<title>_copy_from_user (79 samples, 0.02%)</title><rect x="263.4" y="805" width="0.3" height="15.0" fill="rgb(251,220,4)" rx="2" ry="2" />
<text  x="266.45" y="815.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;webserver::HttpHandler::HttpVersion&amp;&gt; (175 samples, 0.04%)</title><rect x="787.3" y="1029" width="0.5" height="15.0" fill="rgb(225,217,17)" rx="2" ry="2" />
<text  x="790.31" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4,729 samples, 1.04%)</title><rect x="895.1" y="1013" width="12.3" height="15.0" fill="rgb(232,200,27)" rx="2" ry="2" />
<text  x="898.06" y="1023.5" ></text>
</g>
<g >
<title>read_tsc (42 samples, 0.01%)</title><rect x="250.8" y="757" width="0.1" height="15.0" fill="rgb(222,86,38)" rx="2" ry="2" />
<text  x="253.76" y="767.5" ></text>
</g>
<g >
<title>__libc_write (8,247 samples, 1.82%)</title><rect x="1116.0" y="1061" width="21.4" height="15.0" fill="rgb(228,137,31)" rx="2" ry="2" />
<text  x="1118.97" y="1071.5" >_..</text>
</g>
<g >
<title>_IO_new_file_xsputn (821 samples, 0.18%)</title><rect x="1187.1" y="1285" width="2.2" height="15.0" fill="rgb(206,69,14)" rx="2" ry="2" />
<text  x="1190.13" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt; (190 samples, 0.04%)</title><rect x="638.4" y="933" width="0.5" height="15.0" fill="rgb(222,96,40)" rx="2" ry="2" />
<text  x="641.42" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (88 samples, 0.02%)</title><rect x="578.9" y="853" width="0.2" height="15.0" fill="rgb(213,2,37)" rx="2" ry="2" />
<text  x="581.87" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::log_&lt;char const  (20,974 samples, 4.62%)</title><rect x="914.7" y="981" width="54.5" height="15.0" fill="rgb(211,4,50)" rx="2" ry="2" />
<text  x="917.74" y="991.5" >spdlo..</text>
</g>
<g >
<title>__fget_files (168 samples, 0.04%)</title><rect x="264.4" y="773" width="0.5" height="15.0" fill="rgb(213,101,2)" rx="2" ry="2" />
<text  x="267.43" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (83 samples, 0.02%)</title><rect x="776.0" y="821" width="0.2" height="15.0" fill="rgb(227,168,25)" rx="2" ry="2" />
<text  x="778.95" y="831.5" ></text>
</g>
<g >
<title>remove_wait_queue (42 samples, 0.01%)</title><rect x="667.5" y="725" width="0.1" height="15.0" fill="rgb(227,175,54)" rx="2" ry="2" />
<text  x="670.49" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (69 samples, 0.02%)</title><rect x="764.6" y="933" width="0.2" height="15.0" fill="rgb(223,50,7)" rx="2" ry="2" />
<text  x="767.57" y="943.5" ></text>
</g>
<g >
<title>iterate_groups (67 samples, 0.01%)</title><rect x="676.4" y="725" width="0.1" height="15.0" fill="rgb(242,122,35)" rx="2" ry="2" />
<text  x="679.37" y="735.5" ></text>
</g>
<g >
<title>webserver::HttpConnection::set_default_cb (2,493 samples, 0.55%)</title><rect x="604.9" y="917" width="6.5" height="15.0" fill="rgb(206,180,49)" rx="2" ry="2" />
<text  x="607.90" y="927.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (181 samples, 0.04%)</title><rect x="356.3" y="789" width="0.5" height="15.0" fill="rgb(252,113,44)" rx="2" ry="2" />
<text  x="359.32" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::allocator&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;::_S_relocate (142 samples, 0.03%)</title><rect x="508.9" y="1077" width="0.4" height="15.0" fill="rgb(244,133,14)" rx="2" ry="2" />
<text  x="511.91" y="1087.5" ></text>
</g>
<g >
<title>inode_permission (238 samples, 0.05%)</title><rect x="886.0" y="933" width="0.7" height="15.0" fill="rgb(226,53,45)" rx="2" ry="2" />
<text  x="889.04" y="943.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.01%)</title><rect x="273.4" y="693" width="0.1" height="15.0" fill="rgb(253,176,49)" rx="2" ry="2" />
<text  x="276.35" y="703.5" ></text>
</g>
<g >
<title>spdlog::debug&lt;webserver::HttpHandler::HttpVersion&amp;&gt; (230 samples, 0.05%)</title><rect x="787.2" y="1061" width="0.6" height="15.0" fill="rgb(224,210,25)" rx="2" ry="2" />
<text  x="790.19" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::__detail::_Select1st, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (75 samples, 0.02%)</title><rect x="349.2" y="821" width="0.2" height="15.0" fill="rgb(207,6,9)" rx="2" ry="2" />
<text  x="352.17" y="831.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (192 samples, 0.04%)</title><rect x="256.6" y="853" width="0.5" height="15.0" fill="rgb(244,90,11)" rx="2" ry="2" />
<text  x="259.62" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (978 samples, 0.22%)</title><rect x="282.1" y="869" width="2.6" height="15.0" fill="rgb(229,76,30)" rx="2" ry="2" />
<text  x="285.11" y="879.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (51 samples, 0.01%)</title><rect x="639.5" y="805" width="0.1" height="15.0" fill="rgb(234,171,45)" rx="2" ry="2" />
<text  x="642.49" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (51 samples, 0.01%)</title><rect x="260.7" y="885" width="0.2" height="15.0" fill="rgb(214,224,4)" rx="2" ry="2" />
<text  x="263.73" y="895.5" ></text>
</g>
<g >
<title>ip_output (8,980 samples, 1.98%)</title><rect x="191.6" y="469" width="23.3" height="15.0" fill="rgb(233,138,48)" rx="2" ry="2" />
<text  x="194.58" y="479.5" >i..</text>
</g>
<g >
<title>__x2apic_send_IPI_dest (66 samples, 0.01%)</title><rect x="1057.7" y="629" width="0.2" height="15.0" fill="rgb(208,126,47)" rx="2" ry="2" />
<text  x="1060.74" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (80 samples, 0.02%)</title><rect x="700.8" y="885" width="0.2" height="15.0" fill="rgb(220,143,14)" rx="2" ry="2" />
<text  x="703.79" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_free (162 samples, 0.04%)</title><rect x="625.2" y="917" width="0.4" height="15.0" fill="rgb(237,94,50)" rx="2" ry="2" />
<text  x="628.18" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (59 samples, 0.01%)</title><rect x="1142.1" y="885" width="0.2" height="15.0" fill="rgb(246,91,13)" rx="2" ry="2" />
<text  x="1145.15" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,672 samples, 0.37%)</title><rect x="263.1" y="853" width="4.4" height="15.0" fill="rgb(228,175,37)" rx="2" ry="2" />
<text  x="266.11" y="863.5" ></text>
</g>
<g >
<title>skb_release_data (140 samples, 0.03%)</title><rect x="372.0" y="725" width="0.4" height="15.0" fill="rgb(246,20,39)" rx="2" ry="2" />
<text  x="375.04" y="735.5" ></text>
</g>
<g >
<title>select_task_rq_fair (772 samples, 0.17%)</title><rect x="946.3" y="629" width="2.0" height="15.0" fill="rgb(218,119,51)" rx="2" ry="2" />
<text  x="949.26" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, false&gt;::_M_head (42 samples, 0.01%)</title><rect x="72.2" y="1301" width="0.1" height="15.0" fill="rgb(215,73,15)" rx="2" ry="2" />
<text  x="75.22" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (70 samples, 0.02%)</title><rect x="70.5" y="1301" width="0.2" height="15.0" fill="rgb(224,31,26)" rx="2" ry="2" />
<text  x="73.54" y="1311.5" ></text>
</g>
<g >
<title>operator new (228 samples, 0.05%)</title><rect x="607.8" y="805" width="0.6" height="15.0" fill="rgb(219,13,25)" rx="2" ry="2" />
<text  x="610.80" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (80 samples, 0.02%)</title><rect x="284.8" y="869" width="0.2" height="15.0" fill="rgb(211,132,23)" rx="2" ry="2" />
<text  x="287.78" y="879.5" ></text>
</g>
<g >
<title>futex_wait (1,338 samples, 0.29%)</title><rect x="338.8" y="629" width="3.5" height="15.0" fill="rgb(244,205,45)" rx="2" ry="2" />
<text  x="341.84" y="639.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (67 samples, 0.01%)</title><rect x="519.0" y="629" width="0.2" height="15.0" fill="rgb(207,45,16)" rx="2" ry="2" />
<text  x="522.04" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (53 samples, 0.01%)</title><rect x="277.7" y="805" width="0.1" height="15.0" fill="rgb(236,61,36)" rx="2" ry="2" />
<text  x="280.70" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, spdlog::details::flag_formatter*, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; (112 samples, 0.02%)</title><rect x="932.9" y="837" width="0.3" height="15.0" fill="rgb(240,221,13)" rx="2" ry="2" />
<text  x="935.89" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (91 samples, 0.02%)</title><rect x="983.7" y="1029" width="0.2" height="15.0" fill="rgb(242,104,23)" rx="2" ry="2" />
<text  x="986.70" y="1039.5" ></text>
</g>
<g >
<title>close_fd (140 samples, 0.03%)</title><rect x="172.4" y="661" width="0.4" height="15.0" fill="rgb(217,70,36)" rx="2" ry="2" />
<text  x="175.40" y="671.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (9,197 samples, 2.03%)</title><rect x="313.7" y="741" width="23.9" height="15.0" fill="rgb(233,153,23)" rx="2" ry="2" />
<text  x="316.74" y="751.5" >_..</text>
</g>
<g >
<title>reweight_entity (46 samples, 0.01%)</title><rect x="674.9" y="725" width="0.1" height="15.0" fill="rgb(211,122,10)" rx="2" ry="2" />
<text  x="677.85" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (405 samples, 0.09%)</title><rect x="665.5" y="661" width="1.0" height="15.0" fill="rgb(220,22,9)" rx="2" ry="2" />
<text  x="668.46" y="671.5" ></text>
</g>
<g >
<title>syscall_exit_work (70 samples, 0.02%)</title><rect x="1068.8" y="837" width="0.2" height="15.0" fill="rgb(219,32,27)" rx="2" ry="2" />
<text  x="1071.77" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;webserver::TcpSocket, std::allocator&lt;webserver::TcpSocket&gt;,  (19,792 samples, 4.36%)</title><rect x="170.5" y="805" width="51.4" height="15.0" fill="rgb(241,84,42)" rx="2" ry="2" />
<text  x="173.47" y="815.5" >std::..</text>
</g>
<g >
<title>std::__shared_count&lt; (51 samples, 0.01%)</title><rect x="1144.9" y="1045" width="0.1" height="15.0" fill="rgb(254,164,45)" rx="2" ry="2" />
<text  x="1147.90" y="1055.5" ></text>
</g>
<g >
<title>spdlog::details::aggregate_formatter::format (1,009 samples, 0.22%)</title><rect x="695.1" y="933" width="2.6" height="15.0" fill="rgb(206,171,17)" rx="2" ry="2" />
<text  x="698.07" y="943.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (143 samples, 0.03%)</title><rect x="956.5" y="805" width="0.4" height="15.0" fill="rgb(240,40,27)" rx="2" ry="2" />
<text  x="959.49" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (69 samples, 0.02%)</title><rect x="152.8" y="1301" width="0.1" height="15.0" fill="rgb(236,54,31)" rx="2" ry="2" />
<text  x="155.76" y="1311.5" ></text>
</g>
<g >
<title>__GI___clone (331,055 samples, 72.90%)</title><rect x="158.5" y="1317" width="860.2" height="15.0" fill="rgb(226,30,35)" rx="2" ry="2" />
<text  x="161.54" y="1327.5" >__GI___clone</text>
</g>
<g >
<title>webserver::EventLoop::is_in_loop_thread (47 samples, 0.01%)</title><rect x="1018.5" y="1013" width="0.1" height="15.0" fill="rgb(227,141,2)" rx="2" ry="2" />
<text  x="1021.51" y="1023.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (49 samples, 0.01%)</title><rect x="1087.4" y="629" width="0.1" height="15.0" fill="rgb(211,32,6)" rx="2" ry="2" />
<text  x="1090.41" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (86 samples, 0.02%)</title><rect x="259.1" y="853" width="0.3" height="15.0" fill="rgb(233,165,28)" rx="2" ry="2" />
<text  x="262.14" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (374 samples, 0.08%)</title><rect x="980.2" y="885" width="0.9" height="15.0" fill="rgb(241,142,49)" rx="2" ry="2" />
<text  x="983.15" y="895.5" ></text>
</g>
<g >
<title>memcpy_erms (55 samples, 0.01%)</title><rect x="322.4" y="501" width="0.2" height="15.0" fill="rgb(249,158,16)" rx="2" ry="2" />
<text  x="325.45" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (329 samples, 0.07%)</title><rect x="994.7" y="917" width="0.9" height="15.0" fill="rgb(229,40,28)" rx="2" ry="2" />
<text  x="997.74" y="927.5" ></text>
</g>
<g >
<title>preempt_schedule (42 samples, 0.01%)</title><rect x="213.0" y="405" width="0.1" height="15.0" fill="rgb(243,108,9)" rx="2" ry="2" />
<text  x="215.95" y="415.5" ></text>
</g>
<g >
<title>__lll_lock_wait (64 samples, 0.01%)</title><rect x="15.3" y="1301" width="0.1" height="15.0" fill="rgb(241,171,22)" rx="2" ry="2" />
<text  x="18.28" y="1311.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (118 samples, 0.03%)</title><rect x="615.2" y="837" width="0.3" height="15.0" fill="rgb(238,120,14)" rx="2" ry="2" />
<text  x="618.23" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,902 samples, 2.18%)</title><rect x="795.5" y="1029" width="25.7" height="15.0" fill="rgb(241,158,37)" rx="2" ry="2" />
<text  x="798.47" y="1039.5" >d..</text>
</g>
<g >
<title>std::vector&lt;webserver::EventLoop*, std::allocator&lt;webserver::EventLoop*&gt; &gt;::end (39 samples, 0.01%)</title><rect x="1137.9" y="1061" width="0.1" height="15.0" fill="rgb(243,166,24)" rx="2" ry="2" />
<text  x="1140.88" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt; &gt;::operator++ (134 samples, 0.03%)</title><rect x="921.7" y="901" width="0.4" height="15.0" fill="rgb(247,187,14)" rx="2" ry="2" />
<text  x="924.75" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (68 samples, 0.01%)</title><rect x="89.1" y="1301" width="0.2" height="15.0" fill="rgb(229,66,54)" rx="2" ry="2" />
<text  x="92.11" y="1311.5" ></text>
</g>
<g >
<title>lockref_get (57 samples, 0.01%)</title><rect x="884.4" y="933" width="0.2" height="15.0" fill="rgb(228,204,34)" rx="2" ry="2" />
<text  x="887.44" y="943.5" ></text>
</g>
<g >
<title>__alloc_skb (298 samples, 0.07%)</title><rect x="1103.9" y="725" width="0.8" height="15.0" fill="rgb(236,164,21)" rx="2" ry="2" />
<text  x="1106.93" y="735.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (89,989 samples, 19.81%)</title><rect x="229.1" y="981" width="233.8" height="15.0" fill="rgb(249,226,53)" rx="2" ry="2" />
<text  x="232.09" y="991.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__shared_ptr&lt;webserver::HttpHandler,  (42 samples, 0.01%)</title><rect x="26.2" y="1301" width="0.1" height="15.0" fill="rgb(249,156,13)" rx="2" ry="2" />
<text  x="29.22" y="1311.5" ></text>
</g>
<g >
<title>std::mutex::unlock (81 samples, 0.02%)</title><rect x="11.9" y="1253" width="0.2" height="15.0" fill="rgb(224,160,47)" rx="2" ry="2" />
<text  x="14.91" y="1263.5" ></text>
</g>
<g >
<title>[web_server] (118 samples, 0.03%)</title><rect x="794.7" y="1061" width="0.3" height="15.0" fill="rgb(205,228,44)" rx="2" ry="2" />
<text  x="797.68" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;webserver::TcpSocket,  (59 samples, 0.01%)</title><rect x="109.2" y="1301" width="0.2" height="15.0" fill="rgb(246,114,54)" rx="2" ry="2" />
<text  x="112.23" y="1311.5" ></text>
</g>
<g >
<title>spdlog::details::d_formatter&lt;spdlog::details::null_scoped_padder&gt;::format (40 samples, 0.01%)</title><rect x="18.0" y="1301" width="0.1" height="15.0" fill="rgb(213,222,12)" rx="2" ry="2" />
<text  x="20.99" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (89 samples, 0.02%)</title><rect x="117.0" y="1301" width="0.2" height="15.0" fill="rgb(253,94,49)" rx="2" ry="2" />
<text  x="120.00" y="1311.5" ></text>
</g>
<g >
<title>spdlog::logger::log&lt;char [23]&gt; (300 samples, 0.07%)</title><rect x="268.8" y="901" width="0.8" height="15.0" fill="rgb(205,108,51)" rx="2" ry="2" />
<text  x="271.83" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;webserver::Channel&gt;, std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt;, std::allocator&lt;std::pair&lt;std::shared_ptr&lt;webserver::Channel&gt; const, std::shared_ptr&lt;webserver::HttpHandler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::shared_ptr&lt;webserver::Channel&gt; &gt;, webserver::ChannelHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (315 samples, 0.07%)</title><rect x="350.5" y="853" width="0.8" height="15.0" fill="rgb(246,167,5)" rx="2" ry="2" />
<text  x="353.46" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (39 samples, 0.01%)</title><rect x="257.1" y="869" width="0.1" height="15.0" fill="rgb(234,172,38)" rx="2" ry="2" />
<text  x="260.14" y="879.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (149 samples, 0.03%)</title><rect x="277.5" y="853" width="0.4" height="15.0" fill="rgb(207,146,38)" rx="2" ry="2" />
<text  x="280.52" y="863.5" ></text>
</g>
<g >
<title>page_remove_rmap (335 samples, 0.07%)</title><rect x="843.0" y="917" width="0.9" height="15.0" fill="rgb(238,87,19)" rx="2" ry="2" />
<text  x="846.03" y="927.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_args&lt;fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt; &gt;::get (71 samples, 0.02%)</title><rect x="518.5" y="757" width="0.2" height="15.0" fill="rgb(205,6,47)" rx="2" ry="2" />
<text  x="521.47" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (200 samples, 0.04%)</title><rect x="587.6" y="773" width="0.5" height="15.0" fill="rgb(244,83,12)" rx="2" ry="2" />
<text  x="590.60" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,359 samples, 1.40%)</title><rect x="238.5" y="901" width="16.5" height="15.0" fill="rgb(237,148,7)" rx="2" ry="2" />
<text  x="241.51" y="911.5" ></text>
</g>
<g >
<title>vm_normal_page (57 samples, 0.01%)</title><rect x="844.4" y="917" width="0.1" height="15.0" fill="rgb(250,169,4)" rx="2" ry="2" />
<text  x="847.36" y="927.5" ></text>
</g>
<g >
<title>__strlen_avx2 (60 samples, 0.01%)</title><rect x="633.9" y="997" width="0.1" height="15.0" fill="rgb(236,137,28)" rx="2" ry="2" />
<text  x="636.85" y="1007.5" ></text>
</g>
<g >
<title>__lll_lock_wait (2,950 samples, 0.65%)</title><rect x="562.6" y="741" width="7.7" height="15.0" fill="rgb(238,146,48)" rx="2" ry="2" />
<text  x="565.59" y="751.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (434 samples, 0.10%)</title><rect x="331.3" y="485" width="1.2" height="15.0" fill="rgb(226,156,1)" rx="2" ry="2" />
<text  x="334.34" y="495.5" ></text>
</g>
<g >
<title>spdlog::info&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (20,520 samples, 4.52%)</title><rect x="686.8" y="1077" width="53.3" height="15.0" fill="rgb(218,227,9)" rx="2" ry="2" />
<text  x="689.79" y="1087.5" >spdlo..</text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (169 samples, 0.04%)</title><rect x="518.8" y="757" width="0.5" height="15.0" fill="rgb(249,51,30)" rx="2" ry="2" />
<text  x="521.82" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::shared_ptr&lt;webserver::Channel&gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (105 samples, 0.02%)</title><rect x="587.7" y="741" width="0.3" height="15.0" fill="rgb(245,66,23)" rx="2" ry="2" />
<text  x="590.68" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (52 samples, 0.01%)</title><rect x="348.5" y="885" width="0.2" height="15.0" fill="rgb(246,172,47)" rx="2" ry="2" />
<text  x="351.55" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (347 samples, 0.08%)</title><rect x="278.2" y="805" width="0.9" height="15.0" fill="rgb(234,89,26)" rx="2" ry="2" />
<text  x="281.20" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (51 samples, 0.01%)</title><rect x="92.0" y="1301" width="0.1" height="15.0" fill="rgb(239,194,51)" rx="2" ry="2" />
<text  x="95.00" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (45 samples, 0.01%)</title><rect x="84.1" y="1301" width="0.1" height="15.0" fill="rgb(232,118,54)" rx="2" ry="2" />
<text  x="87.10" y="1311.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (125 samples, 0.03%)</title><rect x="572.1" y="597" width="0.4" height="15.0" fill="rgb(208,101,47)" rx="2" ry="2" />
<text  x="575.13" y="607.5" ></text>
</g>
<g >
<title>fsverity_file_open (54 samples, 0.01%)</title><rect x="882.6" y="917" width="0.1" height="15.0" fill="rgb(226,176,27)" rx="2" ry="2" />
<text  x="885.55" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_futex (760 samples, 0.17%)</title><rect x="731.1" y="837" width="2.0" height="15.0" fill="rgb(239,29,3)" rx="2" ry="2" />
<text  x="734.11" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (206 samples, 0.05%)</title><rect x="203.5" y="101" width="0.6" height="15.0" fill="rgb(215,191,50)" rx="2" ry="2" />
<text  x="206.54" y="111.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (134 samples, 0.03%)</title><rect x="533.8" y="677" width="0.4" height="15.0" fill="rgb(248,16,25)" rx="2" ry="2" />
<text  x="536.84" y="687.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (44 samples, 0.01%)</title><rect x="917.4" y="725" width="0.1" height="15.0" fill="rgb(207,111,53)" rx="2" ry="2" />
<text  x="920.42" y="735.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (104 samples, 0.02%)</title><rect x="358.2" y="757" width="0.3" height="15.0" fill="rgb(223,77,0)" rx="2" ry="2" />
<text  x="361.19" y="767.5" ></text>
</g>
<g >
<title>cpumask_next (71 samples, 0.02%)</title><rect x="551.9" y="501" width="0.2" height="15.0" fill="rgb(250,124,31)" rx="2" ry="2" />
<text  x="554.93" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (61 samples, 0.01%)</title><rect x="170.3" y="789" width="0.1" height="15.0" fill="rgb(253,103,33)" rx="2" ry="2" />
<text  x="173.27" y="799.5" ></text>
</g>
<g >
<title>tcp_release_cb (44 samples, 0.01%)</title><rect x="1154.2" y="933" width="0.1" height="15.0" fill="rgb(235,200,3)" rx="2" ry="2" />
<text  x="1157.20" y="943.5" ></text>
</g>
</g>
</svg>
